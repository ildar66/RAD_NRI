

-- Generated by Relational Schema Center on Fri May 23 16:08:55 MSD 2008 for Oracle9i

   
CREATE DATABASE VM;

CREATE TABLE INFORMIX.ABONBILLPOS2DOCPOS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   BILLPOS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ABONBILLPOS2DOCPOS
  ADD CONSTRAINT PK_ABONBILLPOS2DOC UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.ABONBILLPOS2DOCPOS
  ADD CONSTRAINT SYS_C004532 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONBILLPOS2DOCPOS
  ADD CONSTRAINT SYS_C004533 CHECK ("BILLPOS" IS NOT NULL);

CREATE TABLE INFORMIX.ABONENTBILLPOS
  (BILLPOS NUMBER(10, 0) NULL,
   LEASEBILL NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   ITEMID CHAR(60) NULL,
   ITEMNAME CHAR(120) NULL,
   UNITNAME CHAR(20) NULL,
   QTY NUMBER(15, 3) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   SUMMPURE NUMBER(15, 2) NULL,
   SUMPURENRI NUMBER(15, 2) NULL,
   SUMM NUMBER(15, 2) NULL,
   SUMMNRI NUMBER(15, 2) NULL,
   NDSSUMM NUMBER(15, 2) NULL,
   NDSSUMMNRI NUMBER(15, 2) NULL,
   NDSRATE NUMBER(15, 4) NULL,
   NSPSUMM NUMBER(15, 2) NULL,
   NSPSUMMNRI NUMBER(15, 2) NULL,
   NSPRATE NUMBER(15, 4) NULL,
   CARGOCOUNTRY CHAR(120) NULL,
   CARGONUMBER CHAR(280) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SUMBYHAND CHAR(4) NULL,
   IDBILLPOSAMDOCS CHAR(320) NULL);

ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT PK_ABONENTBILLPOS UNIQUE (BILLPOS);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT CKC_RECORDST_ABONE CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT CKC_SUMBYHAN_ABONE CHECK (sumbyhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003952 CHECK ("SUMMPURE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003953 CHECK ("SUMPURENRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003954 CHECK ("SUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003955 CHECK ("SUMMNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003956 CHECK ("NDSSUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003957 CHECK ("NDSSUMMNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003958 CHECK ("NSPSUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003959 CHECK ("NSPSUMMNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003960 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003961 CHECK ("SUMBYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003947 CHECK ("BILLPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003948 CHECK ("LEASEBILL" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003949 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003950 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLPOS
  ADD CONSTRAINT SYS_C003951 CHECK ("CURRENCY" IS NOT NULL);

CREATE TABLE INFORMIX.ABONENTBILLS
  (LEASEBILL NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   BILLDATE DATE NULL,
   BILLNUMBER CHAR(120) NULL,
   BILLPERIODSTART DATE NULL,
   BILLPERIODEND DATE NULL,
   FACTBILL NUMBER(10, 0) NULL,
   BILLSTATUS CHAR(4) NULL,
   BILLTYPE CHAR(4) NULL,
   BEN NUMBER(5, 0) NULL,
   USEINNRI CHAR(4) NULL,
   CHANGEUSEINNRI CHAR(4) NULL,
   BENSOURCE CHAR(4) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SUMMOPL NUMBER(15, 2) NULL,
   NOTESSUMMOPL VARCHAR2(1020) NULL,
   SUMCHANGEREASON VARCHAR2(1020) NULL,
   IDBILLAMDOCS CHAR(320) NULL,
   BILLEQPSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT PK_ABONENTBILLS UNIQUE (LEASEBILL);
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_BILLTYPE_ABONE CHECK ((billtype IS NULL ) OR (billtype IN ('U' ,'O' ,'S' )) );
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_USEINNRI_ABONE CHECK ((useinnri IS NULL ) OR (useinnri IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_CHANGEUS_ABONE CHECK ((changeuseinnri IS NULL ) OR (changeuseinnri IN ('A' ,'H' )) );
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_BENSOURC_ABONE CHECK (bensource IN ('A' ,'H' ));
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_FLAGWORK_ABONE CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT CKC_RECORDST_ABBL CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT SYS_C004358 CHECK ("LEASEBILL" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT SYS_C004359 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT SYS_C004360 CHECK ("BENSOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT SYS_C004361 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTBILLS
  ADD CONSTRAINT SYS_C004362 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.ABONENTHISTORY
  (IDHISTORYABONENT NUMBER(10, 0) NULL,
   IDHISTORYARENDA NUMBER(10, 0) NULL,
   CHARGEABONENT NUMBER(10, 0) NULL,
   PAYABONENT NUMBER(10, 0) NULL,
   RESOURCEABONENT NUMBER(10, 0) NULL,
   SUMMRUB NUMBER(15, 2) NULL,
   SUMM NUMBER(15, 2) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RATE NUMBER(15, 4) NULL,
   CSUMMBYHAND CHAR(4) NULL,
   CRATE NUMBER(15, 4) NULL);

ALTER TABLE INFORMIX.ABONENTHISTORY
  ADD CONSTRAINT PK_ABONENTHISTORY UNIQUE (IDHISTORYABONENT);
 
ALTER TABLE INFORMIX.ABONENTHISTORY
  ADD CONSTRAINT CKC_CSUMMBYH_ABONE CHECK ((csummbyhand IS NULL ) OR (csummbyhand IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ABONENTHISTORY
  ADD CONSTRAINT SYS_C004475 CHECK ("IDHISTORYABONENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTHISTORY
  ADD CONSTRAINT SYS_C004476 CHECK ("IDHISTORYARENDA" IS NOT NULL);

CREATE TABLE INFORMIX.ABONENTPAYMENTS
  (PAYPOS NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   NEEDPAY CHAR(4) NULL,
   TYPENAME CHAR(160) NULL,
   SUMPAYUSD NUMBER(15, 2) NULL,
   SUMPAYRUR NUMBER(15, 2) NULL,
   SUMNRIRUR NUMBER(15, 2) NULL,
   SUMNRIUSD NUMBER(15, 2) NULL,
   SUMFREERUR NUMBER(15, 2) NULL,
   SUMFREEUSD NUMBER(15, 2) NULL,
   BYHAND CHAR(4) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   BEN NUMBER(5, 0) NULL,
   PYM_TYPE CHAR(8) NULL,
   PAYDATE DATE NULL,
   PAYNUMBER CHAR(120) NULL,
   CHANGENEEDPAY CHAR(4) NULL,
   IDPAYAMDOCS CHAR(320) NULL,
   PAYPURPOSE CHAR(1200) NULL);

ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT PK_ABONENTPAYMENTS UNIQUE (PAYPOS);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT CKC_NEEDPAY_ABONE CHECK (needpay IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT CKC_BYHAND_ABONE CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT CKC_FLAGWORK_ABPAY CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT CKC_RECORDST_ABPAY CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT CKC_CHANGENE_ABONE CHECK (changeneedpay IN ('A' ,'H' ));
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004363 CHECK ("PAYPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004364 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004365 CHECK ("NEEDPAY" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004366 CHECK ("SUMPAYUSD" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004367 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004368 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004369 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004370 CHECK ("PAYDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONENTPAYMENTS
  ADD CONSTRAINT SYS_C004371 CHECK ("CHANGENEEDPAY" IS NOT NULL);

CREATE TABLE INFORMIX.ABONPAYS2DOCPOS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   PAYPOS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ABONPAYS2DOCPOS
  ADD CONSTRAINT PK_ABONPAYS2DOCPOS UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.ABONPAYS2DOCPOS
  ADD CONSTRAINT SYS_C004534 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.ABONPAYS2DOCPOS
  ADD CONSTRAINT SYS_C004535 CHECK ("PAYPOS" IS NOT NULL);

CREATE TABLE INFORMIX.ACCNRI2OWNER
  (ACCOUNTID NUMBER(10, 0) NULL,
   IDOWNERNFS NUMBER(10, 0) NULL,
   ORGNRI NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.ACCOUNTS
  (ACCOUNTID NUMBER(10, 0) NULL,
   BANK NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL,
   ACCOUNT CHAR(160) NULL,
   ACTIVE CHAR(4) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT PK_ACCOUNTS UNIQUE (ACCOUNTID);
 
ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT CKC_ACTIVE_ACCOU CHECK (active IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT SYS_C003863 CHECK ("ACCOUNTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT SYS_C003864 CHECK ("BANK" IS NOT NULL);
 
ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT SYS_C003865 CHECK ("ACCOUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ACCOUNTS
  ADD CONSTRAINT SYS_C003866 CHECK ("ACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.ACCUMRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   VOLTAGE NUMBER(4, 1) NULL,
   CAPACITY NUMBER(6, 0) NULL,
   ACCUTYPE CHAR(80) NULL,
   ACCUCOUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ACCUMRES
  ADD CONSTRAINT PK_ACCUMRES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.ACCUMRES
  ADD CONSTRAINT SYS_C005743 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.ADDRESSES
  (GSM NUMBER(10, 0) NULL,
   AMPS NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   ADDRESS CHAR(600) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.ADDRESSES_T
  (DCS NUMBER(10, 0) NULL,
   GSM NUMBER(10, 0) NULL,
   AMPS NUMBER(10, 0) NULL,
   WLAN CHAR(40) NULL,
   GD CHAR(40) NULL,
   NAME CHAR(200) NULL,
   ORGANIZATION_ CHAR(200) NULL,
   ADDRESS CHAR(600) NULL,
   RESPONSIBLE CHAR(100) NULL,
   PLACE CHAR(100) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.ADDRESS_INFO
  (RESOURCE_ NUMBER(10, 0) NULL,
   TYPEPORT NUMBER(5, 0) NULL,
   MAXCONNECT NUMBER(10, 0) NULL,
   E1_COUNT NUMBER(10, 0) NULL,
   ADDRESSHEAD CHAR(40) NULL,
   ADDRESSTYPE NUMBER(5, 0) NULL,
   STARTADDRESS NUMBER(10, 0) NULL,
   LASTADDRESS NUMBER(10, 0) NULL,
   ADDRESSSTEP NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ADDRESS_INFO
  ADD CONSTRAINT PK_ADDRESS_INFO UNIQUE (RESOURCE_, TYPEPORT);
 
ALTER TABLE INFORMIX.ADDRESS_INFO
  ADD CONSTRAINT CKC_TYPE_ADDRE CHECK (typeport IN (0 ,1 ,2 ));
 
ALTER TABLE INFORMIX.ADDRESS_INFO
  ADD CONSTRAINT CKC_ADDRESST_ADDRE CHECK ((addresstype IS NULL ) OR (addresstype IN (0 ,1 )) );
 
ALTER TABLE INFORMIX.ADDRESS_INFO
  ADD CONSTRAINT SYS_C004181 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADDRESS_INFO
  ADD CONSTRAINT SYS_C004182 CHECK ("TYPEPORT" IS NOT NULL);

CREATE TABLE INFORMIX.ADDRESS_INFO2
  (ADDRESSPORTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   TYPEPORT NUMBER(5, 0) NULL,
   ADDRESSNAME CHAR(40) NULL);

ALTER TABLE INFORMIX.ADDRESS_INFO2
  ADD CONSTRAINT PK_ADDRESS_INFO2 UNIQUE (ADDRESSPORTID);
 
ALTER TABLE INFORMIX.ADDRESS_INFO2
  ADD CONSTRAINT CKC_TYPEPORT_ADDR2 CHECK (typeport IN (0 ,1 ,2 ));
 
ALTER TABLE INFORMIX.ADDRESS_INFO2
  ADD CONSTRAINT SYS_C004562 CHECK ("ADDRESSPORTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADDRESS_INFO2
  ADD CONSTRAINT SYS_C004563 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADDRESS_INFO2
  ADD CONSTRAINT SYS_C004564 CHECK ("TYPEPORT" IS NOT NULL);

CREATE TABLE INFORMIX.ADDRESS_SPACE
  (PORTID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   TYPEPORT NUMBER(5, 0) NULL,
   ADDRESS CHAR(320) NULL,
   EXISTSTATE NUMBER(5, 0) NULL,
   DISABLETIME DATE NULL,
   ACTIVESTATE NUMBER(5, 0) NULL,
   INSEGMENT NUMBER(5, 0) NULL,
   REALCONNECT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ADDRESS_SPACE
  ADD CONSTRAINT PK_ADDRESS_SPACE UNIQUE (PORTID);
 
ALTER TABLE INFORMIX.ADDRESS_SPACE
  ADD CONSTRAINT CKC_TYPEPORT_ADR CHECK ((typeport IS NULL ) OR (typeport IN (0 ,1 ,2 )) );
 
ALTER TABLE INFORMIX.ADDRESS_SPACE
  ADD CONSTRAINT CKC_EXISTSTA_ADDRE CHECK ((existstate IS NULL ) OR (existstate IN (0 ,1 ,2 )) );
 
ALTER TABLE INFORMIX.ADDRESS_SPACE
  ADD CONSTRAINT CKC_ACTIVEST_ADDRE CHECK ((activestate IS NULL ) OR (activestate IN (0 ,1 )) );
 
ALTER TABLE INFORMIX.ADDRESS_SPACE
  ADD CONSTRAINT SYS_C004561 CHECK ("PORTID" IS NOT NULL);

CREATE TABLE INFORMIX.ADMINREGIONS
  (REGIONID NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   REGIONNAME VARCHAR2(1020) NULL,
   REGIONCOMMENT CHAR(2000) NULL,
   REGIONTYPE NUMBER(10, 0) NULL,
   REGIONPOPULATION NUMBER(10, 0) NULL,
   RURALPOPULATION NUMBER(10, 0) NULL,
   REGIONAREA NUMBER(15, 3) NULL,
   REGIONLON NUMBER(10, 6) NULL,
   REGIONLAT NUMBER(10, 6) NULL,
   REGIONKIND CHAR(200) NULL,
   FILIALNRI NUMBER(10, 0) NULL,
   PARENT_REGIONID NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL,
   REGIONNRI NUMBER(10, 0) NULL,
   REGIONMNC NUMBER(5, 0) NULL,
   REGIONMCC NUMBER(5, 0) NULL,
   KLADRCODE CHAR(52) NULL,
   AREANRI NUMBER(10, 0) NULL,
   COUNTRYNRI NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT PK_ADMINREGIONS UNIQUE (REGIONID);
 
ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT CKC_RECORDST_ADMIN CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT SYS_C005299 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT SYS_C005300 CHECK ("REGIONNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT SYS_C005301 CHECK ("REGIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS
  ADD CONSTRAINT SYS_C005302 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.ADMINREGIONS2
  (REGIONID NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   REGIONNAME VARCHAR2(1020) NULL,
   REGIONCOMMENT CHAR(2000) NULL,
   REGIONTYPE NUMBER(10, 0) NULL,
   REGIONPOPULATION NUMBER(10, 0) NULL,
   RURALPOPULATION NUMBER(10, 0) NULL,
   REGIONAREA NUMBER(15, 3) NULL,
   REGIONLON NUMBER(10, 6) NULL,
   REGIONLAT NUMBER(10, 6) NULL,
   REGIONKIND CHAR(200) NULL,
   FILIALNRI NUMBER(10, 0) NULL,
   PARENT_REGIONID NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL,
   REGIONNRI NUMBER(10, 0) NULL,
   REGIONMNC NUMBER(5, 0) NULL,
   REGIONMCC NUMBER(5, 0) NULL,
   KLADRCODE CHAR(52) NULL);

ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT PK_ADMINREGION2 UNIQUE (REGIONID);
 
ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT CKC_RECORDST_ADMI2 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT SYS_C003666 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT SYS_C003667 CHECK ("REGIONNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT SYS_C003668 CHECK ("REGIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONS2
  ADD CONSTRAINT SYS_C003669 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.ADMINREGIONTYPES
  (REGIONTYPE NUMBER(10, 0) NULL,
   NAMETYPE VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.ADMINREGIONTYPES
  ADD CONSTRAINT PK_ADMINREGIONTYPE UNIQUE (REGIONTYPE);
 
ALTER TABLE INFORMIX.ADMINREGIONTYPES
  ADD CONSTRAINT SYS_C005952 CHECK ("REGIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ADMINREGIONTYPES
  ADD CONSTRAINT SYS_C005953 CHECK ("NAMETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.AFSMOUNTACT
  (DOCUMENT NUMBER(10, 0) NULL,
   AFSTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.AFSMOUNTACT
  ADD CONSTRAINT PK_AFSMOUNTACT UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.AFSMOUNTACT
  ADD CONSTRAINT CKC_AFSTYPE_AFSMO CHECK (afstype IN ('O' ,'I' ));
 
ALTER TABLE INFORMIX.AFSMOUNTACT
  ADD CONSTRAINT SYS_C004656 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.AFSMOUNTACT
  ADD CONSTRAINT SYS_C004657 CHECK ("AFSTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.AFSMOUNTPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   DOCPOSTYPE CHAR(4) NULL,
   PARENTDOCPOS NUMBER(10, 0) NULL,
   NUM_ANT CHAR(128) NULL,
   KIND_ANT CHAR(4) NULL,
   NAKL NUMBER(4, 2) NULL,
   AZ_ANT NUMBER(6, 2) NULL,
   KSWN NUMBER(6, 2) NULL,
   H_SET1 NUMBER(6, 2) NULL,
   LEN_CABLE NUMBER(6, 2) NULL,
   AZ_VARIATION CHAR(80) NULL,
   NAKL_VARIATION CHAR(80) NULL,
   INPUT_POWER NUMBER(6, 2) NULL,
   DDK CHAR(4) NULL,
   HAS_FLT CHAR(4) NULL,
   HAS_LNA CHAR(4) NULL,
   HAS_BUSTER CHAR(4) NULL,
   GROUNDRESOURCE NUMBER(10, 0) NULL,
   GROUNDCNT NUMBER(10, 0) NULL,
   SECTORA CHAR(4) NULL,
   SECTORB CHAR(4) NULL,
   SECTORC CHAR(4) NULL,
   SECTORD CHAR(4) NULL,
   SECTORE CHAR(4) NULL,
   SECTORF CHAR(4) NULL,
   SECTORG CHAR(4) NULL,
   SECTORH CHAR(4) NULL,
   SECTORO1800 CHAR(4) NULL,
   SECTORO CHAR(4) NULL,
   KSVN1800 NUMBER(6, 2) NULL,
   KSVN900 NUMBER(6, 2) NULL,
   KSVN800 NUMBER(6, 2) NULL,
   KSVN2000 NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT PK_AFSMOUNTPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_KIND_ANT_AFSMO CHECK ((kind_ant IS NULL ) OR (kind_ant IN ('R' ,'T' ,'D' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_DDK_AFSMO CHECK ((ddk IS NULL ) OR (ddk IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_HAS_FLT_AFSMO CHECK ((has_flt IS NULL ) OR (has_flt IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_HAS_LNA_AFSMO CHECK ((has_lna IS NULL ) OR (has_lna IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_HAS_BUST_AFSMO CHECK ((has_buster IS NULL ) OR (has_buster IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORA_AFSMO CHECK ((sectora IS NULL ) OR (sectora IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORB_AFSMO CHECK ((sectorb IS NULL ) OR (sectorb IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORC_AFSMO CHECK ((sectorc IS NULL ) OR (sectorc IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORD_AFSMO CHECK ((sectord IS NULL ) OR (sectord IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORE_AFSMO CHECK ((sectore IS NULL ) OR (sectore IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORF_AFSMO CHECK ((sectorf IS NULL ) OR (sectorf IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORG_AFSMO CHECK ((sectorg IS NULL ) OR (sectorg IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORH_AFSMO CHECK ((sectorh IS NULL ) OR (sectorh IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORO1_AFSMO CHECK ((sectoro1800 IS NULL ) OR (sectoro1800 IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_SECTORO_AFSMO CHECK ((sectoro IS NULL ) OR (sectoro IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT CKC_DOCPOSTY_AFSMO CHECK ((docpostype IS NULL ) OR (docpostype IN ('A' ,'B' ,'C' ,'D' ,'E' )) );
 
ALTER TABLE INFORMIX.AFSMOUNTPOS
  ADD CONSTRAINT SYS_C004658 CHECK ("DOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.AGREGATECONTENTS
  (AGREGATE NUMBER(10, 0) NULL,
   AGREGATEPART NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.AGREGATECONTENTS
  ADD CONSTRAINT PK_AGREGATECONTENT UNIQUE (AGREGATE, AGREGATEPART);
 
ALTER TABLE INFORMIX.AGREGATECONTENTS
  ADD CONSTRAINT SYS_C004289 CHECK ("AGREGATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.AGREGATECONTENTS
  ADD CONSTRAINT SYS_C004290 CHECK ("AGREGATEPART" IS NOT NULL);

CREATE TABLE INFORMIX.ALCATELBTS
  (BTSID NUMBER(10, 0) NULL,
   DATALOADID NUMBER(10, 0) NULL,
   OMCR CHAR(120) NULL,
   BSMID CHAR(120) NULL,
   BTSLABEL CHAR(320) NULL,
   BSCLABEL CHAR(320) NULL,
   BSCUSERLABEL CHAR(320) NULL,
   BTSGENERATION CHAR(320) NULL);

ALTER TABLE INFORMIX.ALCATELBTS
  ADD CONSTRAINT PK_ALCATELBTS UNIQUE (BTSID);
 
ALTER TABLE INFORMIX.ALCATELBTS
  ADD CONSTRAINT SYS_C005204 CHECK ("BTSID" IS NOT NULL);

CREATE TABLE INFORMIX.ALCATELEQUIPDATA
  (DATAID NUMBER(10, 0) NULL,
   DATAHEADID NUMBER(10, 0) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   SCANDATE DATE NULL,
   LABELGEN CHAR(4) NULL,
   RACK NUMBER(10, 0) NULL,
   SHELF NUMBER(10, 0) NULL,
   SLOT NUMBER(10, 0) NULL,
   MNEMONIC CHAR(32) NULL,
   SERIAL CHAR(48) NULL,
   PARTNUMBER CHAR(56) NULL,
   ICS CHAR(12) NULL,
   ENDOFWARRDATE DATE NULL,
   FIRSTCOMMDATE DATE NULL,
   LASTREPDATE DATE NULL);

ALTER TABLE INFORMIX.ALCATELEQUIPDATA
  ADD CONSTRAINT PK_ALCATELEQUIPDAT UNIQUE (DATAID);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATA
  ADD CONSTRAINT SYS_C005139 CHECK ("DATAID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATA
  ADD CONSTRAINT SYS_C005140 CHECK ("DATAHEADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATA
  ADD CONSTRAINT SYS_C005141 CHECK ("LEVEL_" IS NOT NULL);

CREATE TABLE INFORMIX.ALCATELEQUIPDATAHEADER
  (DATAHEADID NUMBER(10, 0) NULL,
   DATALOADID NUMBER(10, 0) NULL,
   FILENAME CHAR(48) NULL,
   BSCID NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   BSCUSERLABEL CHAR(320) NULL,
   BTSUSERLABEL CHAR(320) NULL,
   NETID CHAR(12) NULL,
   CYPHER CHAR(16) NULL,
   LOCATION CHAR(120) NULL,
   NETELEMENT CHAR(12) NULL,
   LOADTIME DATE NULL,
   FIRSTCOMMDATE DATE NULL);

ALTER TABLE INFORMIX.ALCATELEQUIPDATAHEADER
  ADD CONSTRAINT PK_ALCATELEQUIPDH UNIQUE (DATAHEADID);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATAHEADER
  ADD CONSTRAINT SYS_C005215 CHECK ("DATAHEADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATAHEADER
  ADD CONSTRAINT SYS_C005216 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALCATELEQUIPDATAHEADER
  ADD CONSTRAINT SYS_C005217 CHECK ("FILENAME" IS NOT NULL);

CREATE TABLE INFORMIX.ALCATELSECTOR
  (SECTORID NUMBER(10, 0) NULL,
   DATALOADID NUMBER(10, 0) NULL,
   OMCR CHAR(120) NULL,
   BSMID CHAR(120) NULL,
   CI NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ALCATELSECTOR
  ADD CONSTRAINT PK_ALCATELSECTOR UNIQUE (SECTORID);
 
ALTER TABLE INFORMIX.ALCATELSECTOR
  ADD CONSTRAINT SYS_C005205 CHECK ("SECTORID" IS NOT NULL);

CREATE TABLE INFORMIX.ALCRES2NRIRES
  (PARTNUMBER CHAR(56) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ALCRES2NRIRES
  ADD CONSTRAINT PK_ALCRES2NRIRES UNIQUE (PARTNUMBER);
 
ALTER TABLE INFORMIX.ALCRES2NRIRES
  ADD CONSTRAINT SYS_C005192 CHECK ("PARTNUMBER" IS NOT NULL);

CREATE TABLE INFORMIX.ALLEQPONPOSITION
  (IDRECORD NUMBER(10, 0) NULL,
   IDPOSITION NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   IDCONTROLLER NUMBER(10, 0) NULL,
   IDSWITCH NUMBER(10, 0) NULL,
   IDSECTOR NUMBER(10, 0) NULL,
   IDANTENA NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.ALLEQPONPOSITION
  ADD CONSTRAINT SYS_C004682 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALLEQPONPOSITION
  ADD CONSTRAINT SYS_C004683 CHECK ("IDPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.ALLINFARCONTRACTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(160) NULL,
   DOCDATE DATE NULL,
   CONTRACTSTATE CHAR(4) NULL,
   CONTRACTSTATENAME CHAR(160) NULL,
   ORGCUSTOMER NUMBER(10, 0) NULL,
   ORGEXECUTOR NUMBER(10, 0) NULL,
   CUSTNAME VARCHAR2(320) NULL,
   EXECNAME VARCHAR2(320) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL,
   DOCCOMMENT VARCHAR2(1020) NULL,
   DOCSUBJECT VARCHAR2(1020) NULL,
   EXTENDTYPE CHAR(4) NULL,
   EXTENDPERIOD CHAR(4) NULL,
   ECONOMIST NUMBER(10, 0) NULL,
   ECONOMISTNAME VARCHAR2(320) NULL,
   CURRENCY1 NUMBER(10, 0) NULL,
   CURRENCY2 NUMBER(10, 0) NULL,
   SUMM1 NUMBER(15, 2) NULL,
   SUMM2 NUMBER(15, 2) NULL,
   RATECALCRULE CHAR(4) NULL,
   RATECALCRULEDAY NUMBER(5, 0) NULL,
   RATEDELTA NUMBER(15, 2) NULL,
   MANAGER NUMBER(10, 0) NULL,
   MANAGERNAME VARCHAR2(320) NULL,
   DATECLOSE DATE NULL,
   CHARGENDS CHAR(4) NULL,
   MAINPOSITION NUMBER(10, 0) NULL,
   MAINPOSITIONNAME VARCHAR2(320) NULL);
 
ALTER TABLE INFORMIX.ALLINFARCONTRACTS
  ADD CONSTRAINT SYS_C004783 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALLINFARCONTRACTS
  ADD CONSTRAINT SYS_C004784 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ALLINFARCONTRACTS
  ADD CONSTRAINT SYS_C004785 CHECK ("ENDDATE" IS NOT NULL);

CREATE TABLE INFORMIX.ALLPOSFORBELYAKOV
  (ID NUMBER(10, 0) NULL,
   GSM NUMBER(10, 0) NULL,
   DCS NUMBER(10, 0) NULL,
   DAMPS NUMBER(10, 0) NULL,
   GSM_NAME VARCHAR2(320) NULL,
   DAMPS_NAME VARCHAR2(320) NULL,
   REGION VARCHAR2(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   BRIEF VARCHAR2(1020) NULL,
   RESPONSIB VARCHAR2(320) NULL,
   FINDER VARCHAR2(320) NULL);

CREATE TABLE INFORMIX.ANTENNACABLES
  (ID_CABLE NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   LEN_CABLE NUMBER(6, 2) NULL,
   CABLERES NUMBER(10, 0) NULL,
   GROUNDRESOURCE NUMBER(10, 0) NULL,
   GROUNDCNT NUMBER(10, 0) NULL,
   KSWN NUMBER(6, 2) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.ANTENNACABLES
  ADD CONSTRAINT PK_ANTENNACABLES UNIQUE (ID_CABLE);
 
ALTER TABLE INFORMIX.ANTENNACABLES
  ADD CONSTRAINT SYS_C004969 CHECK ("ID_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNACABLES
  ADD CONSTRAINT SYS_C004970 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNACABLES
  ADD CONSTRAINT SYS_C004971 CHECK ("LEN_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNACABLES
  ADD CONSTRAINT SYS_C004972 CHECK ("CABLERES" IS NOT NULL);

CREATE TABLE INFORMIX.ANTENNARES
  (RESOURCE_ NUMBER(10, 0) NULL,
   ANTTYPE CHAR(4) NULL,
   ISOMNI CHAR(4) NULL,
   FREQRANGE CHAR(80) NULL,
   POLARIZATION CHAR(4) NULL,
   ELECTRICANGLE NUMBER(6, 2) NULL,
   CONNECTOR CHAR(80) NULL,
   LENGTH NUMBER(10, 0) NULL,
   WIDTH NUMBER(10, 0) NULL,
   HEIGHT NUMBER(10, 0) NULL,
   WEIGHT NUMBER(7, 3) NULL,
   KSVN NUMBER(6, 2) NULL,
   ENTRIESCOUNT NUMBER(10, 0) NULL,
   ISINDOOR CHAR(4) NULL);

ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT PK_ANTENNARES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT CKC_ENTRISCOUNT_ANTEN CHECK (entriescount > 0 );
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT SYS_C003977 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT SYS_C003978 CHECK ("ISINDOOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT CKC_ANTTYPE_ANTEN CHECK ((anttype IS NULL ) OR (anttype IN ('R' ,'T' )) );
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT CKC_ISOMNI_ANTEN CHECK ((isomni IS NULL ) OR (isomni IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT CKC_POLARIZA_ANTEN CHECK ((polarization IS NULL ) OR (polarization IN ('V' ,'C' )) );
 
ALTER TABLE INFORMIX.ANTENNARES
  ADD CONSTRAINT CKC_ISINDOOR_ANTEN CHECK (isindoor IN ('Y' ,'N' ));

CREATE TABLE INFORMIX.ANTENNARESBAND
  (RESOURCE_ NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   HORZWIDTH NUMBER(6, 2) NULL,
   VERTWIDTH NUMBER(6, 2) NULL,
   AMPLIFICATION NUMBER(6, 2) NULL,
   ELECTRICANGLE NUMBER(6, 2) NULL,
   KSVN NUMBER(6, 2) NULL,
   HASMAXELECTRICANGLE CHAR(4) NULL,
   MAXELECTRICANGLE NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT PK_ANTENNARESBAND UNIQUE (RESOURCE_, BAND);
 
ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT CKC_HASMAXEL_ANTEN CHECK (hasmaxelectricangle IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT CKC_BAND_ANTEN CHECK (band IN (800 ,900 ,1800 ,2100 ));
 
ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT SYS_C004591 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT SYS_C004592 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNARESBAND
  ADD CONSTRAINT SYS_C004593 CHECK ("HASMAXELECTRICANGLE" IS NOT NULL);

CREATE TABLE INFORMIX.ANTENNES
  (ID_ANTEN NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   NUM_ANT CHAR(128) NULL,
   KIND_ANT CHAR(4) NULL,
   NAKL NUMBER(4, 2) NULL,
   AZ_ANT NUMBER(6, 2) NULL,
   KSWN NUMBER(6, 2) NULL,
   H_SET1 NUMBER(6, 2) NULL,
   LEN_CABLE NUMBER(6, 2) NULL,
   CABLERES NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   AZ_VARIATION CHAR(80) NULL,
   NAKL_VARIATION CHAR(80) NULL,
   INPUT_POWER NUMBER(6, 2) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   GROUNDRESOURCE NUMBER(10, 0) NULL,
   GROUNDCNT NUMBER(10, 0) NULL,
   LOCATIONTYPE CHAR(4) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   ELECTRICALTILT NUMBER(4, 2) NULL,
   PLANFACTTYPE NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   QTY NUMBER(15, 3) NULL,
   COMMCABLE CHAR(4) NULL);

ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT PK_ANTENNES UNIQUE (ID_ANTEN);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_BYHAND_ANTEN CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_LOCATION_ANTEN CHECK (locationtype IN ('I' ,'O' ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_KIND_ANT_ANTEN CHECK (kind_ant IN ('R' ,'T' ,'D' ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_DATASOUR_ANTEN CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_PLANFACT_ANTEN CHECK (planfacttype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT CKC_COMMCABL_ANTEN CHECK (commcable IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003896 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003897 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003898 CHECK ("NUM_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003899 CHECK ("KIND_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003900 CHECK ("NAKL" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003901 CHECK ("AZ_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003902 CHECK ("H_SET1" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003903 CHECK ("LEN_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003904 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003905 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003906 CHECK ("LOCATIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003907 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003908 CHECK ("PLANFACTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNES
  ADD CONSTRAINT SYS_C003909 CHECK ("COMMCABLE" IS NOT NULL);

CREATE TABLE INFORMIX.ANTENNESWORKBANDS
  (ID_ANTEN NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ELECTRICANGLE NUMBER(4, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   KSWN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.ANTENNESWORKBANDS
  ADD CONSTRAINT PK_ANTENNESWORKBAN UNIQUE (ID_ANTEN, BAND);
 
ALTER TABLE INFORMIX.ANTENNESWORKBANDS
  ADD CONSTRAINT CKC_BAND_ANTE1 CHECK (band IN (800 ,900 ,1800 ,2000 ));
 
ALTER TABLE INFORMIX.ANTENNESWORKBANDS
  ADD CONSTRAINT CKC_KIND_ANT_ANTE1 CHECK ((kind_ant IS NULL ) OR (kind_ant IN ('R' ,'T' ,'D' )) );
 
ALTER TABLE INFORMIX.ANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C004594 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C004595 CHECK ("BAND" IS NOT NULL);

CREATE TABLE INFORMIX.ANTENNPLACES
  (ANTPLACEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ISVC CHAR(4) NULL);

ALTER TABLE INFORMIX.ANTENNPLACES
  ADD CONSTRAINT PK_ANTENNPLACES UNIQUE (ANTPLACEID);
 
ALTER TABLE INFORMIX.ANTENNPLACES
  ADD CONSTRAINT CKC_ISVC_ANTEN CHECK (isvc IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTENNPLACES
  ADD CONSTRAINT SYS_C004511 CHECK ("ANTPLACEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNPLACES
  ADD CONSTRAINT SYS_C004512 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTENNPLACES
  ADD CONSTRAINT SYS_C004513 CHECK ("ISVC" IS NOT NULL);

CREATE TABLE INFORMIX.ANTEN2SECTORS
  (ID_ANTEN NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL);

ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT PK_ANTEN2SECTORS UNIQUE (ID_ANTEN, ID_SECT);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT CKC_BYHAND_AN2S CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT CKC_DATASOUR_ANT2S CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT SYS_C004572 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT SYS_C004573 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT SYS_C004574 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS
  ADD CONSTRAINT SYS_C004575 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.ANTEN2SECTORS_COPY
  (ID_ANTEN NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT PK_ANTEN2SECTORSCP UNIQUE (ID_ANTEN, ID_SECT);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT CKC_BYHAND_AN2SCP CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT CKC_DATASOUR_ANTENCP CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT SYS_C005380 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT SYS_C005381 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT SYS_C005382 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.ANTEN2SECTORS_COPY
  ADD CONSTRAINT SYS_C005383 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.APARTMENTS
  (APARTMENTID NUMBER(10, 0) NULL,
   APARTNAME CHAR(320) NULL,
   POSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.APARTMENTS
  ADD CONSTRAINT PK_APARTMENTS UNIQUE (APARTMENTID);
 
ALTER TABLE INFORMIX.APARTMENTS
  ADD CONSTRAINT SYS_C005954 CHECK ("APARTMENTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APARTMENTS
  ADD CONSTRAINT SYS_C005955 CHECK ("APARTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.APARTMENTS
  ADD CONSTRAINT SYS_C005956 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.APPARATPLACES
  (APPLACEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.APPARATPLACES
  ADD CONSTRAINT PK_APPARATPLACES UNIQUE (APPLACEID);
 
ALTER TABLE INFORMIX.APPARATPLACES
  ADD CONSTRAINT SYS_C004516 CHECK ("APPLACEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APPARATPLACES
  ADD CONSTRAINT SYS_C004517 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.APPARATTYPES
  (APTYPEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   APTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.APPARATTYPES
  ADD CONSTRAINT PK_APPARATTYPES UNIQUE (APTYPEID);
 
ALTER TABLE INFORMIX.APPARATTYPES
  ADD CONSTRAINT CKC_APTYPE_APPAR CHECK (aptype IN ('K' ,'P' ,'O' ));
 
ALTER TABLE INFORMIX.APPARATTYPES
  ADD CONSTRAINT SYS_C004518 CHECK ("APTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APPARATTYPES
  ADD CONSTRAINT SYS_C004519 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.APPARATTYPES
  ADD CONSTRAINT SYS_C004520 CHECK ("APTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.APPLACETYPES
  (APPLACETYPEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.APPLACETYPES
  ADD CONSTRAINT PK_APPLACETYPES UNIQUE (APPLACETYPEID);
 
ALTER TABLE INFORMIX.APPLACETYPES
  ADD CONSTRAINT SYS_C004521 CHECK ("APPLACETYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APPLACETYPES
  ADD CONSTRAINT SYS_C004522 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_COMMENT_OBJECT
  (ID NUMBER(19, 0) NULL,
   SHEME VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.APRIL_COMMENT_OBJECT
  ADD CONSTRAINT PK_APRIL_COMMENT_O UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_COMMENT_OBJECT
  ADD CONSTRAINT SYS_C003650 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_COMMENT_OBJECT
  ADD CONSTRAINT SYS_C003651 CHECK ("SHEME" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_COMMENTS
  (ID NUMBER(19, 0) NULL,
   TYPE_ CHAR(4) NULL,
   COMMENTOBJECTID NUMBER(19, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   COMMENTTEXT VARCHAR2(1020) NULL,
   DATE_ DATE NULL,
   RESOLUTION VARCHAR2(200) NULL,
   VISAPROCESSID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT PK_APRIL_COMMENTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT CKC_TYPE_APRIL_COMMENT_CHECK CHECK (TYPE_ IN ('C' ,'V' ));
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT SYS_C003652 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT SYS_C003653 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT SYS_C003654 CHECK ("COMMENTOBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT SYS_C003655 CHECK ("PEOPLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_COMMENTS
  ADD CONSTRAINT SYS_C003656 CHECK ("COMMENTTEXT" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PERM_ACTION_JULY_ROLE
  (ACTIONID NUMBER(19, 0) NULL,
   ROLE VARCHAR2(80) NULL);

ALTER TABLE INFORMIX.APRIL_PERM_ACTION_JULY_ROLE
  ADD CONSTRAINT PK_PERM_ACTION_ROLE UNIQUE (ACTIONID, ROLE);
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTION_JULY_ROLE
  ADD CONSTRAINT SYS_C003670 CHECK ("ACTIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTION_JULY_ROLE
  ADD CONSTRAINT SYS_C003671 CHECK ("ROLE" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PERM_ACTIONS
  (ID NUMBER(19, 0) NULL,
   KEY VARCHAR2(1020) NULL,
   TYPE_ VARCHAR2(200) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   SHEME NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.APRIL_PERM_ACTIONS
  ADD CONSTRAINT PK_APRIL_PERM_ACTIONS UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTIONS
  ADD CONSTRAINT CKC_TYPE_PERMACTION CHECK (TYPE_ IN ('action' ,'visa' ,'notification' ));
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTIONS
  ADD CONSTRAINT SYS_C003632 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTIONS
  ADD CONSTRAINT SYS_C003633 CHECK ("KEY" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERM_ACTIONS
  ADD CONSTRAINT SYS_C003634 CHECK ("SHEME" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PERMISSION
  (ID NUMBER(19, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   OBJECTID NUMBER(19, 0) NULL,
   TYPE_ VARCHAR2(4) NULL,
   SHEME NUMBER(10, 0) NULL,
   ROLE CHAR(80) NULL,
   OPERATORID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT PK_APRIL_PERMISSION UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT CKC_TYPE_APRIL CHECK (TYPE_ IN ('G' ,'R' ,'S' ,'O' ));
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT SYS_C003635 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT SYS_C003636 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT SYS_C003637 CHECK ("SHEME" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT SYS_C003638 CHECK ("ROLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERMISSION
  ADD CONSTRAINT SYS_C003639 CHECK ("OPERATORID" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PERM_OBJECT
  (ID NUMBER(19, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   SHEME NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.APRIL_PERM_OBJECT
  ADD CONSTRAINT PK_APRIL_PERM_OBJE UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_PERM_OBJECT
  ADD CONSTRAINT SYS_C003630 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PERM_OBJECT
  ADD CONSTRAINT SYS_C003631 CHECK ("SHEME" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PROPERTIES
  (OBJECTTYPE CHAR(500) NULL,
   OBJECTID NUMBER(10, 0) NULL,
   KEY CHAR(1020) NULL,
   PARENTKEY CHAR(1020) NULL,
   VALUETYPE CHAR(2000) NULL,
   VALUEASSTR CHAR(2000) NULL,
   VALUEASINT NUMBER(10, 0) NULL,
   VALUEASDECIMAL NUMBER(15, 6) NULL,
   VALUEASDATE DATE NULL);

ALTER TABLE INFORMIX.APRIL_PROPERTIES
  ADD CONSTRAINT PK_APRIL_PROPERTNEW_KEY UNIQUE (OBJECTTYPE, OBJECTID, KEY);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES
  ADD CONSTRAINT SYS_C003516 CHECK ("OBJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES
  ADD CONSTRAINT SYS_C003517 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES
  ADD CONSTRAINT SYS_C003518 CHECK ("KEY" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES
  ADD CONSTRAINT SYS_C003519 CHECK ("VALUETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_PROPERTIES_OLD
  (OBJECTTYPE VARCHAR2(500) NULL,
   OBJECTID NUMBER(10, 0) NULL,
   KEY VARCHAR2(1020) NULL,
   VALUE BLOB NULL);

ALTER TABLE INFORMIX.APRIL_PROPERTIES_OLD
  ADD CONSTRAINT PK_APRIL_PROPERTIES_KEY UNIQUE (OBJECTTYPE, OBJECTID, KEY);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES_OLD
  ADD CONSTRAINT SYS_C006051 CHECK ("OBJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES_OLD
  ADD CONSTRAINT SYS_C006052 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_PROPERTIES_OLD
  ADD CONSTRAINT SYS_C006053 CHECK ("KEY" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_VISA_COMMENTS
  (ID NUMBER(19, 0) NULL,
   VISAPROCESSID NUMBER(19, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   COMMENTTEXT VARCHAR2(1020) NULL,
   RESOLUTION VARCHAR2(200) NULL,
   DATE_ DATE NULL);

ALTER TABLE INFORMIX.APRIL_VISA_COMMENTS
  ADD CONSTRAINT PK_APRIL_VISA_COMMENTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003375 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003376 CHECK ("VISAPROCESSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003377 CHECK ("PEOPLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003378 CHECK ("RESOLUTION" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_VISA_PERSONS
  (ID NUMBER(19, 0) NULL,
   VISAPROCESSID NUMBER(19, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   RESOLUTION VARCHAR2(200) NULL,
   DATE_ DATE NULL);

ALTER TABLE INFORMIX.APRIL_VISA_PERSONS
  ADD CONSTRAINT PK_APRIL_VISA_PERSONS UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_VISA_PERSONS
  ADD CONSTRAINT SYS_C003379 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_PERSONS
  ADD CONSTRAINT SYS_C003380 CHECK ("VISAPROCESSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_PERSONS
  ADD CONSTRAINT SYS_C003381 CHECK ("PEOPLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_PERSONS
  ADD CONSTRAINT SYS_C003382 CHECK ("RESOLUTION" IS NOT NULL);

CREATE TABLE INFORMIX.APRIL_VISA_PROCESS
  (ID NUMBER(19, 0) NULL,
   STATUS VARCHAR2(200) NULL,
   RESOLUTION VARCHAR2(200) NULL,
   PROCESSID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.APRIL_VISA_PROCESS
  ADD CONSTRAINT PK_APRIL_VISA_PROCESS UNIQUE (ID);
 
ALTER TABLE INFORMIX.APRIL_VISA_PROCESS
  ADD CONSTRAINT SYS_C003372 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_PROCESS
  ADD CONSTRAINT SYS_C003373 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.APRIL_VISA_PROCESS
  ADD CONSTRAINT SYS_C003374 CHECK ("RESOLUTION" IS NOT NULL);

CREATE TABLE INFORMIX.ARENDA_CHANNELS
  (LINEID NUMBER(10, 0) NULL,
   FROM_ NUMBER(10, 0) NULL,
   TO_ NUMBER(10, 0) NULL,
   PM_A CHAR(320) NULL,
   PM_B CHAR(320) NULL,
   APPOINTMENT CHAR(320) NULL,
   CAPACITY NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   SINGLE_COST NUMBER(10, 2) NULL,
   MONTHLY_COST NUMBER(10, 2) NULL,
   RENTER NUMBER(10, 0) NULL,
   CONTRAGENT CHAR(1020) NULL,
   CONTRACT_NUMBER CHAR(320) NULL,
   CONTRACT_DATE DATE NULL,
   EXPIRATION_DATE DATE NULL,
   SUBARENDA_ACT CHAR(320) NULL,
   VKR_ACT_DATE DATE NULL,
   VKR_EXP_DATE DATE NULL,
   USE_KOEFF NUMBER(5, 2) NULL,
   MONTHLY_COST_VKR NUMBER(10, 2) NULL,
   COMMENT_ CHAR(1020) NULL,
   CONTACT_FIO CHAR(1020) NULL,
   CONTACT_PHONE CHAR(1020) NULL,
   CONTACT_VKR NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   ORDERINFO CHAR(320) NULL);

ALTER TABLE INFORMIX.ARENDA_CHANNELS
  ADD CONSTRAINT PK_ARENDA_CHANNELS UNIQUE (LINEID);
 
ALTER TABLE INFORMIX.ARENDA_CHANNELS
  ADD CONSTRAINT SYS_C005185 CHECK ("LINEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ARENDA_CHANNELS
  ADD CONSTRAINT SYS_C005186 CHECK ("FROM_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ARENDA_CHANNELS
  ADD CONSTRAINT SYS_C005187 CHECK ("TO_" IS NOT NULL);

CREATE TABLE INFORMIX.ARENDAHISTORY
  (IDHISTORYARENDA NUMBER(10, 0) NULL,
   NUMORDER NUMBER(10, 0) NULL,
   PERIOD NUMBER(10, 0) NULL,
   CHARGEARENDA NUMBER(10, 0) NULL,
   PAYARENDA NUMBER(10, 0) NULL,
   RESOURCEABONENT NUMBER(10, 0) NULL,
   SUMCHARGEABONENT NUMBER(15, 2) NULL,
   CHARGEABONENT NUMBER(10, 0) NULL,
   SUMPAYABONENT NUMBER(15, 2) NULL,
   PAYABONENT NUMBER(10, 0) NULL,
   TEMPSLDSUM NUMBER(15, 2) NULL,
   TEMPSLDCURR NUMBER(10, 0) NULL,
   CODEACT NUMBER(10, 0) NULL,
   ACTSALDO NUMBER(15, 2) NULL,
   ACTCURR NUMBER(10, 0) NULL,
   SLDBYHAND CHAR(4) NULL,
   SLDNOTES VARCHAR2(1020) NULL,
   ACTSLDCONTRACTSUM NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.ARENDAHISTORY
  ADD CONSTRAINT PK_ARENDAHISTORY UNIQUE (IDHISTORYARENDA);
 
ALTER TABLE INFORMIX.ARENDAHISTORY
  ADD CONSTRAINT CKC_SLDBYHAN_AREND CHECK ((sldbyhand IS NULL ) OR (sldbyhand IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ARENDAHISTORY
  ADD CONSTRAINT SYS_C005312 CHECK ("IDHISTORYARENDA" IS NOT NULL);
 
ALTER TABLE INFORMIX.ARENDAHISTORY
  ADD CONSTRAINT SYS_C005313 CHECK ("NUMORDER" IS NOT NULL);
 
ALTER TABLE INFORMIX.ARENDAHISTORY
  ADD CONSTRAINT SYS_C005314 CHECK ("PERIOD" IS NOT NULL);

CREATE TABLE INFORMIX.ARENDANRI
  (DOGOVORID FLOAT(126) NULL,
   DOGOVORDATE DATE NULL,
   DOGOVORNUM VARCHAR2(1020) NULL,
   DOGOVORSTART DATE NULL,
   DOGOVOREND DATE NULL,
   DOGOVORTYPE VARCHAR2(1020) NULL,
   GSM FLOAT(126) NULL,
   DAMPS FLOAT(126) NULL,
   BS VARCHAR2(1020) NULL,
   USLUGA VARCHAR2(1020) NULL,
   SUPPLIER VARCHAR2(1020) NULL,
   CUSTOMER VARCHAR2(1020) NULL,
   INN VARCHAR2(1020) NULL,
   SUMDOGOVOR FLOAT(126) NULL,
   SUMTRAFFIC FLOAT(126) NULL,
   SUMDOGOVORWITHOUTNDS FLOAT(126) NULL,
   SUMPAY FLOAT(126) NULL,
   SUMPAYWITHOUTNDS FLOAT(126) NULL,
   VALUTA VARCHAR2(1020) NULL,
   OTV1 VARCHAR2(1020) NULL,
   OTV2 VARCHAR2(1020) NULL,
   STATUS VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.ARENDA_POSITIONS
  (STORAGEPLACE NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   OBLAST CHAR(320) NULL,
   CITYID NUMBER(10, 0) NULL,
   CITY CHAR(320) NULL,
   ADDRESS CHAR(1020) NULL);

ALTER TABLE INFORMIX.ARENDA_POSITIONS
  ADD CONSTRAINT PK_ARENDA_POSITION UNIQUE (STORAGEPLACE);
 
ALTER TABLE INFORMIX.ARENDA_POSITIONS
  ADD CONSTRAINT SYS_C005176 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.ARTERIES
  (ARTERYID NUMBER(10, 0) NULL,
   NAME CHAR(1020) NULL,
   DESCRIPTION CHAR(1020) NULL,
   CREATOR NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ARTERIES
  ADD CONSTRAINT PK_ARTERIES UNIQUE (ARTERYID);
 
ALTER TABLE INFORMIX.ARTERIES
  ADD CONSTRAINT SYS_C004897 CHECK ("ARTERYID" IS NOT NULL);

CREATE TABLE INFORMIX.ASEMBLINGACTS
  (DOCUMENT NUMBER(10, 0) NULL,
   MONTER NUMBER(10, 0) NULL,
   AGREGAT NUMBER(10, 0) NULL,
   OLDCONFIGURATION CHAR(320) NULL,
   NEWCONFIGURATION CHAR(320) NULL,
   OPERATIONTYPE CHAR(4) NULL,
   AGREGATESERIAL CHAR(80) NULL,
   UNMOUNTBLOCKS CHAR(4) NULL,
   AGREGATERESOURCE NUMBER(10, 0) NULL,
   INVENTSERIAL CHAR(80) NULL,
   LOCALSERIAL CHAR(80) NULL);

ALTER TABLE INFORMIX.ASEMBLINGACTS
  ADD CONSTRAINT PK_ASEMBLINGACTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.ASEMBLINGACTS
  ADD CONSTRAINT CKC_OPERATIO_ASEMB CHECK (operationtype IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.ASEMBLINGACTS
  ADD CONSTRAINT CKC_UNMOUNTB_ASEMB CHECK ((unmountblocks IS NULL ) OR (unmountblocks IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ASEMBLINGACTS
  ADD CONSTRAINT SYS_C004206 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.ASEMBLINGACTS
  ADD CONSTRAINT SYS_C004207 CHECK ("OPERATIONTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.A_SVERKACHRGANDPAY
  (IDRECORD NUMBER(10, 0) NULL,
   IDTASKSTART NUMBER(10, 0) NULL,
   CODERESOURCE NUMBER(10, 0) NULL,
   CODECONTRACT NUMBER(10, 0) NULL,
   CODEAKT NUMBER(10, 0) NULL,
   CUSTOMER CHAR(320) NULL,
   EXECUTOR CHAR(320) NULL,
   IDMAINCURR NUMBER(10, 0) NULL,
   MAINCURR CHAR(120) NULL,
   DOPCURR CHAR(120) NULL,
   RESNAME CHAR(320) NULL,
   PERIODCONTRACT NUMBER(10, 0) NULL,
   PERIODRESOURCE NUMBER(10, 0) NULL,
   PERIODSTART DATE NULL,
   PERIODEND DATE NULL,
   BILLNUMBER CHAR(120) NULL,
   BILLDATE DATE NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   NDSCHARGE NUMBER(15, 2) NULL,
   IDCURRCHARGE NUMBER(10, 0) NULL,
   CURRCHARGE CHAR(120) NULL,
   RATECHARGE NUMBER(15, 4) NULL,
   MAINSUMCHARGE NUMBER(15, 2) NULL,
   MAINNDSCHARGE NUMBER(15, 2) NULL,
   PAYNUMBER CHAR(120) NULL,
   PAYDATE DATE NULL,
   SUMRUBPAY NUMBER(15, 2) NULL,
   NDSRUBPAY NUMBER(15, 2) NULL,
   RATECONTRACTPAY NUMBER(15, 4) NULL,
   SUMCONTRACTPAY NUMBER(15, 2) NULL,
   NDSCONTRACTPAY NUMBER(15, 2) NULL,
   RATEMAINPAY NUMBER(15, 4) NULL,
   SUMMAINPAY NUMBER(15, 2) NULL,
   NDSMAINPAY NUMBER(15, 2) NULL,
   STARTSALDOMAIN NUMBER(15, 2) NULL,
   STARTNDSSALDOMAIN NUMBER(15, 2) NULL,
   ENDSALDOMAIN NUMBER(15, 2) NULL,
   ENDNDSSALDOMAIN NUMBER(15, 2) NULL,
   ENDSALDODOP NUMBER(15, 2) NULL,
   ENDNDSSALDODOP NUMBER(15, 2) NULL,
   SUMRUBDIFFERENCE NUMBER(15, 2) NULL,
   DATESTARTAKT DATE NULL,
   DATEENDAKT DATE NULL);

ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT PK__SVERKACHRGANDP UNIQUE (IDRECORD);
 
ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT SYS_C004614 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT SYS_C004615 CHECK ("IDTASKSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT SYS_C004616 CHECK ("CODERESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT SYS_C004617 CHECK ("CODECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACHRGANDPAY
  ADD CONSTRAINT SYS_C004618 CHECK ("CODEAKT" IS NOT NULL);

CREATE TABLE INFORMIX.A_SVERKACONTRRES
  (IDTASKSTART NUMBER(10, 0) NULL,
   CODECONTRACT NUMBER(10, 0) NULL,
   CODERESOURCE NUMBER(10, 0) NULL,
   CODEAKT NUMBER(10, 0) NULL,
   NUMBERCONTRACT CHAR(120) NULL,
   DATECONTRACT DATE NULL,
   CUSTOMER CHAR(320) NULL,
   EXECUTOR CHAR(320) NULL,
   RESNAME CHAR(200) NULL,
   MAINCURR CHAR(120) NULL,
   STARTSUMMAINCURR NUMBER(15, 2) NULL,
   STARTNDSMAINCURR NUMBER(15, 2) NULL,
   ENDSUMMAINCURR NUMBER(15, 2) NULL,
   ENDNDSMAINCURR NUMBER(15, 2) NULL,
   DOPCURR CHAR(120) NULL,
   STARTSUMDOPCURR NUMBER(15, 2) NULL,
   STARTNDSDOPCURR NUMBER(15, 2) NULL,
   ENDSUMDOPCURR NUMBER(15, 2) NULL,
   ENDNDSDOPCURR NUMBER(15, 2) NULL,
   SUMRUBDIFFERENCE NUMBER(15, 2) NULL,
   DATESTARTAKT DATE NULL,
   DATEENDAKT DATE NULL);

ALTER TABLE INFORMIX.A_SVERKACONTRRES
  ADD CONSTRAINT PK__SVERKACONTRRES UNIQUE (IDTASKSTART, CODECONTRACT, CODERESOURCE);
 
ALTER TABLE INFORMIX.A_SVERKACONTRRES
  ADD CONSTRAINT SYS_C004619 CHECK ("IDTASKSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACONTRRES
  ADD CONSTRAINT SYS_C004620 CHECK ("CODECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACONTRRES
  ADD CONSTRAINT SYS_C004621 CHECK ("CODERESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKACONTRRES
  ADD CONSTRAINT SYS_C004622 CHECK ("CODEAKT" IS NOT NULL);

CREATE TABLE INFORMIX.A_SVERKAHEADER
  (IDTASKSTART NUMBER(10, 0) NULL,
   CODEAKT NUMBER(10, 0) NULL,
   NUMBERAKT CHAR(120) NULL,
   DATEAKT DATE NULL,
   POSITION CHAR(120) NULL,
   HEADER1 CHAR(2000) NULL,
   HEADER2 CHAR(2000) NULL,
   DATESTARTAKT DATE NULL,
   DATEENDAKT DATE NULL,
   ISCOMMONRATE CHAR(4) NULL,
   COMMONRATE NUMBER(15, 4) NULL,
   COMMONRATEDATE DATE NULL,
   USERHEADER CHAR(320) NULL,
   USERFOOTER CHAR(320) NULL,
   OTVUSER CHAR(320) NULL,
   IDMAINCURR NUMBER(10, 0) NULL,
   MAINCURR CHAR(120) NULL,
   DOPCURR CHAR(120) NULL,
   CONTRACTNUMBER CHAR(120) NULL,
   CONTRACTDATE DATE NULL,
   CUSTOMER CHAR(320) NULL,
   EXECUTOR CHAR(320) NULL,
   JOBCUSTOMER CHAR(320) NULL,
   JOBEXECUTOR CHAR(320) NULL,
   FIOCUSTOMER CHAR(320) NULL,
   FIOEXECUTOR CHAR(320) NULL,
   OTVECONOMIST CHAR(320) NULL,
   HIGHCOLONTITUL VARCHAR2(1020) NULL,
   TYPEVIEW NUMBER(10, 0) NULL,
   TOWN VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.A_SVERKAHEADER
  ADD CONSTRAINT PK__SVERKAHEADER UNIQUE (IDTASKSTART);
 
ALTER TABLE INFORMIX.A_SVERKAHEADER
  ADD CONSTRAINT SYS_C004623 CHECK ("IDTASKSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.A_SVERKAHEADER
  ADD CONSTRAINT SYS_C004624 CHECK ("CODEAKT" IS NOT NULL);

CREATE TABLE INFORMIX.ATTRIBUTES
  (ID NUMBER(10, 0) NULL,
   LAYERID NUMBER(10, 0) NULL,
   MAPID NUMBER(10, 0) NULL,
   NAME CHAR(256) NULL,
   VALUE CHAR(256) NULL);

ALTER TABLE INFORMIX.ATTRIBUTES
  ADD CONSTRAINT PK_ATTRIB_VAL UNIQUE (ID);
 
ALTER TABLE INFORMIX.ATTRIBUTES
  ADD CONSTRAINT SYS_C004957 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BAD_BILL
  (BILL NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.BAD_NFSRES2NRIRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   ITEM_ID CHAR(160) NULL);
 
ALTER TABLE INFORMIX.BAD_NFSRES2NRIRES
  ADD CONSTRAINT SYS_C006030 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BAD_NFSRES2NRIRES
  ADD CONSTRAINT SYS_C006031 CHECK ("ITEM_ID" IS NOT NULL);

CREATE TABLE INFORMIX.BALANCESTOREDATA
  (ID_REC NUMBER(10, 0) NULL,
   ID_FILE NUMBER(10, 0) NULL,
   SET_SIGN CHAR(200) NULL,
   SET_NUMBER NUMBER(10, 0) NULL,
   NFS_CODE CHAR(200) NULL,
   GOODS_CODE CHAR(200) NULL,
   GOOD_MARKING VARCHAR2(1020) NULL,
   GOODS_NAME VARCHAR2(1020) NULL,
   QTY NUMBER(15, 3) NULL,
   IN_USE_SIGN CHAR(200) NULL,
   WASTE_SIGN CHAR(200) NULL);

ALTER TABLE INFORMIX.BALANCESTOREDATA
  ADD CONSTRAINT PK_BALANCESTOREDAT UNIQUE (ID_REC);
 
ALTER TABLE INFORMIX.BALANCESTOREDATA
  ADD CONSTRAINT SYS_C004976 CHECK ("ID_REC" IS NOT NULL);
 
ALTER TABLE INFORMIX.BALANCESTOREDATA
  ADD CONSTRAINT SYS_C004977 CHECK ("ID_FILE" IS NOT NULL);

CREATE TABLE INFORMIX.BALANCESTOREFILES
  (ID_FILE NUMBER(10, 0) NULL,
   FILE_NAME CHAR(200) NULL,
   SHEET_NAME CHAR(200) NULL,
   NAMESKLAD VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.BALANCESTOREFILES
  ADD CONSTRAINT PK_BALANCESTOREFIL UNIQUE (ID_FILE);
 
ALTER TABLE INFORMIX.BALANCESTOREFILES
  ADD CONSTRAINT SYS_C004973 CHECK ("ID_FILE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BALANCESTOREFILES
  ADD CONSTRAINT SYS_C004974 CHECK ("FILE_NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.BALANCESTOREFILES
  ADD CONSTRAINT SYS_C004975 CHECK ("SHEET_NAME" IS NOT NULL);

CREATE TABLE INFORMIX.BANKS
  (IDBANK NUMBER(10, 0) NULL,
   NAME CHAR(1020) NULL,
   BIK CHAR(160) NULL,
   KORACCOUNT CHAR(160) NULL,
   LEGALADDRESS CHAR(1020) NULL,
   SWIFT CHAR(160) NULL,
   SOURCE NUMBER(10, 0) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   RECORDSTATUS CHAR(4) NULL,
   IDBANKNFS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT PK_BANKS UNIQUE (IDBANK);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT CKC_SOURCE_BANKS CHECK (source IN (1 ,2 ));
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT CKC_RECORDST_BANKS CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005683 CHECK ("IDBANK" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005684 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005685 CHECK ("BIK" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005686 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005687 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005688 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005689 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005690 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.BANKS
  ADD CONSTRAINT SYS_C005691 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.BASEAGREEMENTS
  (BASEAGREEMENT NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.BASEAGREEMENTS
  ADD CONSTRAINT PK_BASEAGREEMENTS UNIQUE (BASEAGREEMENT);
 
ALTER TABLE INFORMIX.BASEAGREEMENTS
  ADD CONSTRAINT SYS_C004148 CHECK ("BASEAGREEMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BASEAGREEMENTS
  ADD CONSTRAINT SYS_C004149 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.BASESTATIONRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   PRODUCTLINE CHAR(200) NULL,
   GENERATION CHAR(40) NULL,
   MODIFICATION CHAR(40) NULL,
   STANDARD CHAR(4) NULL,
   LENGTH NUMBER(10, 0) NULL,
   WIDTH NUMBER(10, 0) NULL,
   HEIGHT NUMBER(10, 0) NULL,
   MAKEYEAR NUMBER(5, 0) NULL,
   MAXSECTORSCOUNT NUMBER(10, 0) NULL,
   MAXTRXCOUNT NUMBER(10, 0) NULL,
   BSTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.BASESTATIONRES
  ADD CONSTRAINT PK_BASESTATIONRES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.BASESTATIONRES
  ADD CONSTRAINT CKC_BSTYPE_BASES CHECK ((bstype IS NULL ) OR (bstype IN ('I' ,'O' ,'M' )) );
 
ALTER TABLE INFORMIX.BASESTATIONRES
  ADD CONSTRAINT CKC_STANDARD_BASES CHECK ((standard IS NULL ) OR (standard IN ('G' ,'D' ,'U' )) );
 
ALTER TABLE INFORMIX.BASESTATIONRES
  ADD CONSTRAINT SYS_C004571 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.BASESTATIONS
  (EQUIPMENT NUMBER(10, 0) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   SWITCH NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   REPEATER CHAR(4) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL,
   N_STOEK NUMBER(5, 0) NULL,
   ST_TRANSP CHAR(320) NULL,
   TIME_BACKUP CHAR(20) NULL,
   DATE_ASSEMB_AFS DATE NULL,
   DATE_ASSEMB_AFS2 DATE NULL,
   DATE_CONNECT DATE NULL,
   DATE_CONNECT2 DATE NULL,
   DATE_ONAIR DATE NULL,
   DATE_ONAIR2 DATE NULL,
   NET_STAGE NUMBER(5, 0) NULL,
   CON_TYPE CHAR(4) NULL,
   E1_QTY NUMBER(5, 0) NULL,
   ON_AIR CHAR(4) NULL,
   DATE_BLDBEG2 DATE NULL,
   DATE_ASSEMB2 DATE NULL,
   DATE_TEST2 DATE NULL,
   DATE_PR2 DATE NULL,
   PREFIXCELLID NUMBER(10, 0) NULL,
   SOFTVERSION CHAR(200) NULL,
   STAND_RESOURCE NUMBER(10, 0) NULL,
   ISARENDATS CHAR(4) NULL,
   STATE900 CHAR(4) NULL,
   STATE1800 CHAR(4) NULL,
   H_OBJ_ANT NUMBER(6, 2) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   NUMDCSPERMIT CHAR(160) NULL,
   NUMGSMPERMIT CHAR(160) NULL,
   IBP_RESOURCE NUMBER(10, 0) NULL,
   CON_IMPEDANCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT PK_BASESTATIONS UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_CON_TYPE_BASES CHECK ((con_type IS NULL ) OR (con_type IN ('R' ,'O' )) );
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_ON_AIR_BASES CHECK ((on_air IS NULL ) OR (on_air IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_ISARENDA_BASES CHECK ((isarendats IS NULL ) OR (isarendats IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_STATE900_BASES CHECK ((state900 IS NULL ) OR (state900 IN ('P' ,'M' ,'W' ,'D' )) );
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_STATE180_BASES CHECK ((state1800 IS NULL ) OR (state1800 IN ('P' ,'M' ,'W' ,'D' )) );
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_TYPE_BASES CHECK (TYPE_ IN ('D' ,'S' ,'C' ,'G' ));
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT CKC_REPEATER_BASES CHECK (repeater IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT SYS_C003884 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT SYS_C003885 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT SYS_C003886 CHECK ("REPEATER" IS NOT NULL);
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT SYS_C003887 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BASESTATIONS
  ADD CONSTRAINT SYS_C003888 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.BCHKDOCPOSITIONS
  (POSCODE NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   RESOURCENAME CHAR(200) NULL,
   QTY NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   SERIALS CHAR(400) NULL,
   COMMENT_ CHAR(400) NULL,
   BSNUM NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT PK_BCHKDOCPOSITION UNIQUE (POSCODE);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C004998 CHECK ("POSCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C004999 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C005000 CHECK ("RESOURCENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C005001 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C005002 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCPOSITIONS
  ADD CONSTRAINT SYS_C005003 CHECK ("BSNUM" IS NOT NULL);

CREATE TABLE INFORMIX.BCHKDOCUMENTS
  (DOCUMENT NUMBER(10, 0) NULL,
   BSNUM NUMBER(10, 0) NULL,
   CALCDATE DATE NULL,
   AFS1800DATE DATE NULL,
   AFS900DATE DATE NULL,
   BTS1800DATE DATE NULL,
   BTS900DATE DATE NULL,
   CNTRDATE DATE NULL);

ALTER TABLE INFORMIX.BCHKDOCUMENTS
  ADD CONSTRAINT PK_BCHKDOCUMENTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.BCHKDOCUMENTS
  ADD CONSTRAINT SYS_C004995 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCUMENTS
  ADD CONSTRAINT SYS_C004996 CHECK ("BSNUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.BCHKDOCUMENTS
  ADD CONSTRAINT SYS_C004997 CHECK ("CALCDATE" IS NOT NULL);

CREATE TABLE INFORMIX.BDV_TMP1
  (IDRECORD NUMBER(10, 0) NULL,
   REGIONNRI VARCHAR2(1020) NULL,
   FILIALNRI VARCHAR2(1020) NULL,
   NUMBS NUMBER(10, 0) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   STATUSPRJ VARCHAR2(320) NULL,
   TYPEPRJ VARCHAR2(320) NULL,
   CODEPOSITION VARCHAR2(44) NULL,
   DATEPRJ DATE NULL,
   IDREGIONNFS VARCHAR2(80) NULL,
   REGIONNFS VARCHAR2(1020) NULL,
   IDFILIALNFS VARCHAR2(80) NULL,
   FILIALNFS VARCHAR2(1020) NULL,
   OLDCODEBEENET VARCHAR2(80) NULL,
   NEWCODEBEENET VARCHAR2(80) NULL);
 
ALTER TABLE INFORMIX.BDV_TMP1
  ADD CONSTRAINT SYS_C003696 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.BDV_TMP2
  (IDRECORD NUMBER(10, 0) NULL,
   REGIONNRI VARCHAR2(1020) NULL,
   FILIALNRI VARCHAR2(1020) NULL,
   CODEBEENET VARCHAR2(80) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   STATUSPRJ VARCHAR2(320) NULL,
   TYPEPRJ VARCHAR2(320) NULL,
   CODEPOSITION VARCHAR2(44) NULL,
   DATEPRJ DATE NULL,
   IDREGIONNFS VARCHAR2(80) NULL,
   REGIONNFS VARCHAR2(1020) NULL,
   IDFILIALNFS VARCHAR2(80) NULL,
   FILIALNFS VARCHAR2(1020) NULL);
 
ALTER TABLE INFORMIX.BDV_TMP2
  ADD CONSTRAINT SYS_C003697 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.BEENETCATEGORY
  (CATEGID NUMBER(10, 0) NULL,
   CATEGNAME CHAR(240) NULL,
   PATTERN CHAR(32) NULL);

ALTER TABLE INFORMIX.BEENETCATEGORY
  ADD CONSTRAINT PK_BEENETCATEGORY UNIQUE (CATEGID);
 
ALTER TABLE INFORMIX.BEENETCATEGORY
  ADD CONSTRAINT SYS_C004761 CHECK ("CATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BEENETCATEGORY
  ADD CONSTRAINT SYS_C004762 CHECK ("CATEGNAME" IS NOT NULL);

CREATE TABLE INFORMIX.BEENETOBJECTS
  (BEENETID CHAR(48) NULL,
   CATEGID NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.BEENETOBJECTS
  ADD CONSTRAINT SYS_C004763 CHECK ("BEENETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BEENETOBJECTS
  ADD CONSTRAINT SYS_C004764 CHECK ("CATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BEENETOBJECTS
  ADD CONSTRAINT SYS_C004765 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.BEENET2EQUIP
  (BEENETID CHAR(48) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BEENET2EQUIP
  ADD CONSTRAINT PK_BEENET2EQUIP UNIQUE (BEENETID, EQUIPMENT);
 
ALTER TABLE INFORMIX.BEENET2EQUIP
  ADD CONSTRAINT SYS_C004766 CHECK ("BEENETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BEENET2EQUIP
  ADD CONSTRAINT SYS_C004767 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.BILLINGSERVICES
  (IDSERVICE NUMBER(10, 0) NULL,
   NAMESERVICE VARCHAR2(1020) NULL,
   CODESERVICE CHAR(24) NULL,
   USEINNRI CHAR(4) NULL);

ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT PK_BILLINGSERVICES UNIQUE (IDSERVICE);
 
ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT CKC_USEINNRI_BILLI CHECK (useinnri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT SYS_C004788 CHECK ("IDSERVICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT SYS_C004789 CHECK ("NAMESERVICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT SYS_C004790 CHECK ("CODESERVICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLINGSERVICES
  ADD CONSTRAINT SYS_C004791 CHECK ("USEINNRI" IS NOT NULL);

CREATE TABLE INFORMIX.BILLS2CHARGES
  (LEASEBILL NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   LEASEDOCPOSITION NUMBER(10, 0) NULL,
   BILLPOS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BILLS2CHARGES
  ADD CONSTRAINT PK_BILLS2CHARGES UNIQUE (BILLPOS);
 
ALTER TABLE INFORMIX.BILLS2CHARGES
  ADD CONSTRAINT SYS_C004643 CHECK ("LEASEBILL" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES
  ADD CONSTRAINT SYS_C004644 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES
  ADD CONSTRAINT SYS_C004645 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES
  ADD CONSTRAINT SYS_C004646 CHECK ("BILLPOS" IS NOT NULL);

CREATE TABLE INFORMIX.BILLS2CHARGES2
  (LEASEBILL NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   LEASEDOCPOSITION NUMBER(10, 0) NULL,
   BILLPOS NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES2
  ADD CONSTRAINT SYS_C004820 CHECK ("LEASEBILL" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES2
  ADD CONSTRAINT SYS_C004821 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BILLS2CHARGES2
  ADD CONSTRAINT SYS_C004822 CHECK ("LEASEDOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.BSAGREELEVELS
  (LEVELID NUMBER(10, 0) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   LEVELNAME CHAR(200) NULL);

ALTER TABLE INFORMIX.BSAGREELEVELS
  ADD CONSTRAINT PK_BSAGREELEVELS UNIQUE (LEVELID);
 
ALTER TABLE INFORMIX.BSAGREELEVELS
  ADD CONSTRAINT SYS_C006011 CHECK ("LEVELID" IS NOT NULL);

CREATE TABLE INFORMIX.BSBANDS
  (EQUIPMENT NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   DATE_BLDBEG DATE NULL,
   DATE_ASSEMB DATE NULL,
   DATE_TEST DATE NULL,
   DATE_PR DATE NULL,
   DATE_ASSEMB_AFS DATE NULL,
   DATE_CONNECT DATE NULL,
   DATE_ONAIR DATE NULL,
   STATE CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT PK_BSBANDS UNIQUE (EQUIPMENT, BAND);
 
ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT CKC_STATE_BSBAN CHECK (state IN ('P' ,'W' ,'M' ,'D' ));
 
ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT CKC_BAND_BSBAN CHECK (band IN (900 ,1800 ,800 ,2100 ));
 
ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT SYS_C003513 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT SYS_C003514 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSBANDS
  ADD CONSTRAINT SYS_C003515 CHECK ("STATE" IS NOT NULL);

CREATE TABLE INFORMIX.BSBEFOREUPDATE
  (EQUIPMENT NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.BSC_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL,
   BSCTYPE CHAR(4) NULL,
   RACK_COUNT NUMBER(10, 0) NULL,
   BTS_COUNT NUMBER(10, 0) NULL,
   TRX_FR NUMBER(10, 0) NULL,
   TRX_HR NUMBER(10, 0) NULL,
   E1_COUNT NUMBER(10, 0) NULL,
   POWER_SUPPLY_CATEGORY NUMBER(10, 0) NULL,
   ENERGY_CONSUMPTION_NOMINAL_MOD NUMBER(4, 1) NULL,
   ENERGY_CONSUMPTION_NOMINAL_ACC NUMBER(4, 1) NULL,
   HAVEDDF CHAR(4) NULL,
   LOCATION_AREA NUMBER(6, 1) NULL,
   LENGTH NUMBER(6, 0) NULL,
   HEIGHT NUMBER(6, 0) NULL,
   WIDTH NUMBER(6, 0) NULL,
   WEIGHT NUMBER(4, 1) NULL,
   POWER NUMBER(4, 1) NULL,
   RECYCLING_TERM_EMISSION CHAR(4) NULL,
   RECYCLING_TERM_EMISSION_MIN NUMBER(3, 0) NULL,
   RECYCLING_TERM_EMISSION_MAX NUMBER(3, 0) NULL,
   AIR_TEMPERATURE_MIN NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_MAX NUMBER(2, 0) NULL,
   AIR_HUMIDITY_MIN NUMBER(2, 0) NULL,
   AIR_HUMIDITY_MAX NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_WITHOUT_ENERGY NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_WITHOUT_ENER_1 NUMBER(2, 0) NULL);

ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT PK_BSC_CONFIGUR UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT CKC_BSCTYPE_BSC_C CHECK (bsctype IN ('A' ,'B' ,'C' ));
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT CKC_HAVEDDF_BSC_C CHECK ((haveddf IS NULL ) OR (haveddf IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003842 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003843 CHECK ("BSCTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003844 CHECK ("RACK_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003845 CHECK ("BTS_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003846 CHECK ("TRX_FR" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003847 CHECK ("TRX_HR" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003848 CHECK ("E1_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003849 CHECK ("RECYCLING_TERM_EMISSION" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_CONFIGURATIONS_ALCATEL
  (CONFIGID NUMBER(10, 0) NULL,
   NSUBCATCA NUMBER(10, 0) NULL,
   CONNECTION_TYPE CHAR(4) NULL,
   A_INTERFACES NUMBER(10, 0) NULL,
   CELL_MAX NUMBER(10, 0) NULL,
   ABIS_TSU_COUNT NUMBER(10, 0) NULL,
   ATER_TSU_COUNT NUMBER(10, 0) NULL,
   E1_VOICE_STREAM_COUNT NUMBER(10, 0) NULL,
   E1_ABIS_STREAM_COUNT NUMBER(10, 0) NULL,
   E1_DATA_STREAM_COUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT PK_BSC_CONF_ALCA UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT CKC_CONNECTI_BSC_C CHECK ((connection_type IS NULL ) OR (connection_type IN ('V' ,'C' )) );
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT SYS_C003691 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT SYS_C003692 CHECK ("NSUBCATCA" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_CONFIGURATIONS_ERICSSON
  (CONFIGID NUMBER(10, 0) NULL,
   CONTROLLER_TYPE CHAR(500) NULL,
   PROC_TYPE CHAR(128) NULL,
   GS_TYPE CHAR(128) NULL,
   NET_FLOOR_SPACE NUMBER(15, 4) NULL,
   CELL_MAX NUMBER(10, 0) NULL,
   TRX_FR_USE NUMBER(10, 0) NULL,
   RPG_TRX_PLAT_COUNT NUMBER(10, 0) NULL,
   RPG_C7_LINKS NUMBER(10, 0) NULL,
   RPG_C7_LINKS_PLAT_COUNT NUMBER(10, 0) NULL,
   HSL_C7_LINKS NUMBER(10, 0) NULL,
   HSL_C7_LINKS_PLAT_COUNT NUMBER(10, 0) NULL,
   ETC_PLAT_COUNT NUMBER(10, 0) NULL,
   ET155_PLAT_COUNT NUMBER(10, 0) NULL,
   VOICE_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   VOICE_TRAFFIC_CAPACITY_CHANNEL NUMBER(10, 0) NULL,
   TRA_MAG_COUNT NUMBER(10, 0) NULL,
   TRA_PLAT_COUNT NUMBER(10, 0) NULL,
   DATA_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   PCU_SUB NUMBER(10, 0) NULL,
   RPP_PLAT_COUNT NUMBER(10, 0) NULL,
   ET155_POWER NUMBER(15, 4) NULL,
   ETC5_POWER NUMBER(15, 4) NULL);

ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ERICSSON
  ADD CONSTRAINT PK_BSC_CONF_ERIC UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_ERICSSON
  ADD CONSTRAINT SYS_C003690 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_CONFIGURATIONS_NOKIA
  (CONFIGID NUMBER(10, 0) NULL,
   MAZAG_COUNT NUMBER(10, 0) NULL,
   BCSU_SUBR_COUNT NUMBER(10, 0) NULL,
   DATA_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   TCSM_CHANNEL_COUNT NUMBER(10, 0) NULL,
   LAPD_LINKS_COUNT NUMBER(10, 0) NULL,
   SS7_LINKS_COUNT NUMBER(10, 0) NULL,
   PHYSICAL_PCU_COUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT PK_BSC_CONF_NOKIA UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT SYS_C003693 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT SYS_C003694 CHECK ("MAZAG_COUNT" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DEF_OBJECTTYPES
  (ID VARCHAR2(200) NULL,
   NAME VARCHAR2(1020) NULL,
   TYPE_ VARCHAR2(200) NULL,
   PROJECTTYPEID VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_DEF_OBJECTTYPES
  ADD CONSTRAINT PK_BSC_DEF_OBJECTT UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DEF_OBJECTTYPES
  ADD CONSTRAINT CKC_DEF_OBJECT_TYPE_TYPE CHECK (TYPE_ IN ('document' ,'file' ,'work' ));
 
ALTER TABLE INFORMIX.BSC_DEF_OBJECTTYPES
  ADD CONSTRAINT SYS_C006047 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DEF_OBJECTTYPES
  ADD CONSTRAINT SYS_C006048 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DEF_PROJECTTYPES
  (ID VARCHAR2(200) NULL,
   NAME VARCHAR2(1020) NULL,
   XMLDEFENITION VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_DEF_PROJECTTYPES
  ADD CONSTRAINT PK_BSC_DEF_PROJECT UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DEF_PROJECTTYPES
  ADD CONSTRAINT SYS_C003396 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOC_ACTPOSITIONSELECT
  (ID NUMBER(19, 0) NULL,
   POSITIONID NUMBER(10, 0) NULL,
   FILEID NUMBER(10, 0) NULL,
   CONTROLLERID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_DOC_ACTPOSITIONSELECT
  ADD CONSTRAINT PK_BSC_DOC_ACTPOSI UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DOC_ACTPOSITIONSELECT
  ADD CONSTRAINT SYS_C006050 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOC_IDTOINSTALLBSC
  (ID NUMBER(19, 0) NULL,
   RPPPLATCOUNTSTART NUMBER(10, 0) NULL,
   RPPPLATCOUNTEVOLUTION NUMBER(10, 0) NULL,
   IKMTIMESLOTCOUNTSTART NUMBER(10, 0) NULL,
   IKMTIMESLOTCOUNTEVOLUTION NUMBER(10, 0) NULL,
   CABLELENGTHSTART NUMBER(15, 4) NULL,
   CABLELENGTHEVOLUTION NUMBER(15, 4) NULL,
   IKMEVOLUTION NUMBER(10, 0) NULL,
   IKMAEVOLUTION NUMBER(10, 0) NULL,
   IKMABISEVOLUTION NUMBER(10, 0) NULL,
   FILETABLECONNECTBSID NUMBER(10, 0) NULL,
   FILEEQUIPTRANSPORTNETID NUMBER(10, 0) NULL,
   FILEEQUIPDISPOSITIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_DOC_IDTOINSTALLBSC
  ADD CONSTRAINT PK_BSC_DOC_IDTOINS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DOC_IDTOINSTALLBSC
  ADD CONSTRAINT SYS_C003553 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOC_ROLLOUT
  (ID NUMBER(19, 0) NULL,
   AREAID NUMBER(10, 0) NULL,
   CITYID NUMBER(10, 0) NULL,
   BSCTYPEID NUMBER(10, 0) NULL,
   BSCNUMBER VARCHAR2(200) NULL,
   BSCPROVIDERID NUMBER(10, 0) NULL,
   ORDERNUMBER VARCHAR2(200) NULL,
   ORDERNUMBERSERVICES VARCHAR2(200) NULL,
   ORDERDATE DATE NULL,
   ORDERPRICE NUMBER(16, 2) NULL);

ALTER TABLE INFORMIX.BSC_DOC_ROLLOUT
  ADD CONSTRAINT PK_BSC_DOC_ROLLOUT UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DOC_ROLLOUT
  ADD CONSTRAINT SYS_C006049 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOC_TASKFORSEARCH
  (ID NUMBER(19, 0) NULL,
   VOLSSTANDSDM4 NUMBER(10, 0) NULL,
   VOLSUPS NUMBER(10, 0) NULL,
   RRSSTANDRRL NUMBER(10, 0) NULL,
   RRSUPS NUMBER(10, 0) NULL,
   COMPLECT_OOC NUMBER(10, 0) NULL,
   IKM_TOTAL_COUNT NUMBER(10, 0) NULL,
   IKM_ATER_COUNT NUMBER(10, 0) NULL,
   IKM_ABIS_COUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_DOC_TASKFORSEARCH
  ADD CONSTRAINT PK_BSC_DOC_TASKFOR UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DOC_TASKFORSEARCH
  ADD CONSTRAINT SYS_C006046 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOC_TASKFORSEARCH_EXTRA_RE
  (RESOURCEID NUMBER(10, 0) NULL,
   DOCUMENTID NUMBER(19, 0) NULL);
 
ALTER TABLE INFORMIX.BSC_DOC_TASKFORSEARCH_EXTRA_RE
  ADD CONSTRAINT SYS_C003551 CHECK ("RESOURCEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DOC_TASKFORSEARCH_EXTRA_RE
  ADD CONSTRAINT SYS_C003552 CHECK ("DOCUMENTID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_DOCUMENTS
  (ID NUMBER(19, 0) NULL,
   PROJECTID NUMBER(19, 0) NULL,
   DOCUMENTTYPE VARCHAR2(200) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   REMOTEFILEID NUMBER(10, 0) NULL,
   COMMENTOBJECTID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT PK_BSC_DOCUMENTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT CKC_TYPE_BSC_D CHECK (TYPE_ IN (1 ,2 ,3 ,4 ,5 ));
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT CKC_STATE_BSC_D CHECK (state IN (0 ,1 ,2 ));
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT SYS_C006040 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT SYS_C006041 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT SYS_C006042 CHECK ("DOCUMENTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT SYS_C006043 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_DOCUMENTS
  ADD CONSTRAINT SYS_C006044 CHECK ("STATE" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_NOTIFICATION_ACCESS
  (ID NUMBER(19, 0) NULL,
   ACTIONID NUMBER(19, 0) NULL,
   ROLEID VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACCESS
  ADD CONSTRAINT PK_BSC_NOTIF_ACCESS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACCESS
  ADD CONSTRAINT SYS_C003569 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACCESS
  ADD CONSTRAINT SYS_C003570 CHECK ("ACTIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACCESS
  ADD CONSTRAINT SYS_C003571 CHECK ("ROLEID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_NOTIFICATION_ACTIONS
  (ID NUMBER(19, 0) NULL,
   ACTIONKEY VARCHAR2(1020) NULL,
   TEMPLATENAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACTIONS
  ADD CONSTRAINT PK_BSC_NOTIF_ACTIONS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACTIONS
  ADD CONSTRAINT SYS_C006036 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACTIONS
  ADD CONSTRAINT SYS_C006037 CHECK ("ACTIONKEY" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_NOTIFICATION_ACTIONS
  ADD CONSTRAINT SYS_C006038 CHECK ("TEMPLATENAME" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PERMISSION
  (ID NUMBER(19, 0) NULL,
   ROLEID VARCHAR2(200) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.BSC_PERMISSION
  ADD CONSTRAINT PK_BSC_PERMISSION UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PERMISSION
  ADD CONSTRAINT SYS_C003554 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PERMISSION
  ADD CONSTRAINT SYS_C003555 CHECK ("ROLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PERMISSION
  ADD CONSTRAINT SYS_C003556 CHECK ("PEOPLEID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PERMISSION_SETTINGS
  (ID NUMBER(19, 0) NULL,
   PROJECTTYPE VARCHAR2(200) NULL,
   ROLEID VARCHAR2(200) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   PERSONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_PERMISSION_SETTINGS
  ADD CONSTRAINT PK_BSC_PERMISSION_SETTINGS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PERMISSION_SETTINGS
  ADD CONSTRAINT SYS_C003388 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PERMISSION_SETTINGS
  ADD CONSTRAINT SYS_C003389 CHECK ("ROLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PERMISSION_SETTINGS
  ADD CONSTRAINT SYS_C003390 CHECK ("PERSONID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PERMIT_ACTIONPERMISSION
  (ID NUMBER(19, 0) NULL,
   ACTIONID NUMBER(19, 0) NULL,
   ROLEID VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_PERMIT_ACTIONPERMISSION
  ADD CONSTRAINT PK_BSC_PERMIT_ACTION_PERM UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PERMIT_ACTIONPERMISSION
  ADD CONSTRAINT SYS_C003557 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PERMIT_ACTIONS
  (ID NUMBER(19, 0) NULL,
   ACTIONKEY VARCHAR2(1020) NULL,
   DESCRIPTION VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.BSC_PERMIT_ACTIONS
  ADD CONSTRAINT PK_BSC_PERMIT_ACTI UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PERMIT_ACTIONS
  ADD CONSTRAINT SYS_C006032 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PERMIT_ACTIONS
  ADD CONSTRAINT SYS_C006033 CHECK ("ACTIONKEY" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PLAN
  (ID NUMBER(19, 0) NULL,
   NAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.BSC_PLAN
  ADD CONSTRAINT PK_BSC_PLAN UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PLAN
  ADD CONSTRAINT SYS_C003394 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PROJECT
  (ID NUMBER(19, 0) NULL,
   PROJECTSETID NUMBER(19, 0) NULL,
   PLANID NUMBER(19, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   PROCESSID NUMBER(19, 0) NULL,
   PROJECTTYPE VARCHAR2(200) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   STARTDATE DATE NULL,
   FINISHDATE DATE NULL,
   PLANNEDSTARTDATE DATE NULL,
   PLANNEDFINISHDATE DATE NULL,
   PERMISSIONOBJECTID NUMBER(19, 0) NULL,
   EXISTINGBSCOUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSC_PROJECT
  ADD CONSTRAINT PK_BSC_PROJECT_KEY UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PROJECT
  ADD CONSTRAINT SYS_C006039 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_PROJECT_SET
  (ID NUMBER(19, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   PROCESSID NUMBER(19, 0) NULL,
   PERMISSIONOBJECTID NUMBER(19, 0) NULL,
   PLANID NUMBER(19, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   STATE VARCHAR2(200) NULL,
   COMMENTOBJECTID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.BSC_PROJECT_SET
  ADD CONSTRAINT PK_BSC_PROJECT_SET_KEY UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_PROJECT_SET
  ADD CONSTRAINT SYS_C003391 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PROJECT_SET
  ADD CONSTRAINT SYS_C003392 CHECK ("PLANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_PROJECT_SET
  ADD CONSTRAINT SYS_C003393 CHECK ("SUBSIDIARYID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_ROLES
  (ID VARCHAR2(200) NULL,
   NAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.BSC_ROLES
  ADD CONSTRAINT PK_BSC_ROLES UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_ROLES
  ADD CONSTRAINT SYS_C003395 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_VISA_ACCESS
  (ID NUMBER(19, 0) NULL,
   ACTIONID NUMBER(19, 0) NULL,
   ROLEID VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_VISA_ACCESS
  ADD CONSTRAINT PK_BSC_VISA_ACCESS UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_VISA_ACCESS
  ADD CONSTRAINT SYS_C003566 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_ACCESS
  ADD CONSTRAINT SYS_C003567 CHECK ("ACTIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_ACCESS
  ADD CONSTRAINT SYS_C003568 CHECK ("ROLEID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_VISA_ACTIONS
  (ID NUMBER(19, 0) NULL,
   ACTIONKEY VARCHAR2(1020) NULL,
   DESCRIPTION VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.BSC_VISA_ACTIONS
  ADD CONSTRAINT PK_BSC_VISA_ACTION UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_VISA_ACTIONS
  ADD CONSTRAINT SYS_C006034 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_ACTIONS
  ADD CONSTRAINT SYS_C006035 CHECK ("ACTIONKEY" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_VISA_COMMENTS
  (ID NUMBER(19, 0) NULL,
   OBJECTID NUMBER(19, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   COMMENTTEXT VARCHAR2(1020) NULL,
   RESOLUTION VARCHAR2(200) NULL,
   DATE_ DATE NULL);

ALTER TABLE INFORMIX.BSC_VISA_COMMENTS
  ADD CONSTRAINT PK_BSC_VISA_COMMEN UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003558 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003559 CHECK ("PEOPLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_COMMENTS
  ADD CONSTRAINT SYS_C003560 CHECK ("RESOLUTION" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_VISA_OBJECTS
  (ID NUMBER(19, 0) NULL,
   PROJECTID NUMBER(19, 0) NULL,
   DOCUMENTTYPE VARCHAR2(200) NULL,
   STATUS VARCHAR2(200) NULL,
   RESOLUTION VARCHAR2(200) NULL);

ALTER TABLE INFORMIX.BSC_VISA_OBJECTS
  ADD CONSTRAINT PK_BSC_VISA_OBJECT UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_VISA_OBJECTS
  ADD CONSTRAINT SYS_C006045 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSC_VISA_PERSONS
  (ID NUMBER(19, 0) NULL,
   OBJECTID NUMBER(19, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL,
   RESOLUTION VARCHAR2(200) NULL,
   DATE_ DATE NULL);

ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT PK_BSC_VISA_PERSON UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT SYS_C003561 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT SYS_C003562 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT SYS_C003563 CHECK ("PEOPLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT SYS_C003564 CHECK ("RESOLUTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSC_VISA_PERSONS
  ADD CONSTRAINT SYS_C003565 CHECK ("DATE_" IS NOT NULL);

CREATE TABLE INFORMIX.BSINSTCOMPLECTRESOURCESET
  (RESOURCESET NUMBER(10, 0) NULL,
   TCRESISTANCE NUMBER(6, 0) NULL);

ALTER TABLE INFORMIX.BSINSTCOMPLECTRESOURCESET
  ADD CONSTRAINT PK_BSINSTCOMPLECTR UNIQUE (RESOURCESET);
 
ALTER TABLE INFORMIX.BSINSTCOMPLECTRESOURCESET
  ADD CONSTRAINT SYS_C003371 CHECK ("RESOURCESET" IS NOT NULL);

CREATE TABLE INFORMIX.BSNUMBERS
  (STORAGEPLACE NUMBER(10, 0) NULL,
   NUMTYPE NUMBER(10, 0) NULL,
   BSNUMBER CHAR(160) NULL,
   CREATED DATE NULL);

ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT PK_BSNUMBERS UNIQUE (STORAGEPLACE, NUMTYPE);
 
ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT CKC_NUMTYPE_BSNUM CHECK (numtype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT SYS_C005498 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT SYS_C005499 CHECK ("NUMTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT SYS_C005500 CHECK ("BSNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSNUMBERS
  ADD CONSTRAINT SYS_C005501 CHECK ("CREATED" IS NOT NULL);

CREATE TABLE INFORMIX.BSPRJMAILLIST_CFG
  (ID NUMBER(10, 0) NULL,
   RECEIVER NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   EMAIL CHAR(320) NULL,
   RECEIVNAME CHAR(1020) NULL,
   CREATOR NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL,
   PRJTYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSPRJMAILLIST_CFG
  ADD CONSTRAINT PK_BSPRJMAILLIST_C UNIQUE (ID);
 
ALTER TABLE INFORMIX.BSPRJMAILLIST_CFG
  ADD CONSTRAINT SYS_C004940 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.BSPROJECTS
  (PROJECTID NUMBER(10, 0) NULL,
   BSNAME CHAR(2000) NULL,
   GSMID NUMBER(10, 0) NULL,
   ADDRESS CHAR(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   ANTPLACE CHAR(320) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   RESTYPE NUMBER(10, 0) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   CASE_COUNT NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   SETTLEMENTID NUMBER(10, 0) NULL,
   AUTOADDRESS CHAR(1020) NULL,
   FORMTYPE NUMBER(10, 0) NULL,
   BEENETID CHAR(48) NULL,
   TSCONTYPE NUMBER(10, 0) NULL,
   APPLACETYPEID NUMBER(10, 0) NULL,
   H_OBJ NUMBER(6, 2) NULL,
   SUPPLY_CATEGORY NUMBER(10, 0) NULL,
   ISARENDADOC NUMBER(10, 0) NULL,
   TU_RECEIVED NUMBER(10, 0) NULL,
   GEOSYSTEM NUMBER(10, 0) NULL,
   OPORAOWNER NUMBER(10, 0) NULL,
   OPORATYPEID NUMBER(10, 0) NULL,
   OPORPLACEID NUMBER(10, 0) NULL,
   OPORAHEIGHT NUMBER(6, 2) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   MAINCONTRACTOR NUMBER(10, 0) NULL,
   APPLACEID NUMBER(10, 0) NULL,
   COMPLETEIDTS NUMBER(10, 0) NULL,
   ISLIGHTFIRE NUMBER(10, 0) NULL,
   ISSUPPLYRESERVE NUMBER(10, 0) NULL,
   LFIBP_RESOURCE NUMBER(10, 0) NULL,
   AVR_BOARD NUMBER(10, 0) NULL,
   IBP_RESOURCE NUMBER(10, 0) NULL,
   CON_IMPEDANCE NUMBER(10, 0) NULL,
   DEVELOP_PLAN NUMBER(10, 0) NULL,
   TU_PLACEMENT NUMBER(10, 0) NULL,
   ISBLOCKEDPROJECT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSPROJECTS
  ADD CONSTRAINT PK_BSPROJECTS UNIQUE (PROJECTID);
 
ALTER TABLE INFORMIX.BSPROJECTS
  ADD CONSTRAINT CKC_ISBLOCKE_BSPRO CHECK ((isblockedproject IS NULL ) OR (isblockedproject IN (0 ,1 )) );
 
ALTER TABLE INFORMIX.BSPROJECTS
  ADD CONSTRAINT SYS_C004901 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.BSPROJECTS_STAGES
  (STAGEID NUMBER(10, 0) NULL,
   STAGENAME CHAR(512) NULL,
   AGREESTATE NUMBER(10, 0) NULL,
   OWNERTYPE NUMBER(10, 0) NULL,
   PRJTYPE NUMBER(10, 0) NULL,
   BAND NUMBER(10, 0) NULL,
   PREVSTAGEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSPROJECTS_STAGES
  ADD CONSTRAINT PK_BSPROJECTS_STAG UNIQUE (STAGEID);
 
ALTER TABLE INFORMIX.BSPROJECTS_STAGES
  ADD CONSTRAINT SYS_C006012 CHECK ("STAGEID" IS NOT NULL);

CREATE TABLE INFORMIX.BSSORM
  (IDPOSITION NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   NAMEPOS VARCHAR2(1020) NULL,
   ADDRESSPOS VARCHAR2(1020) NULL,
   CISECT CHAR(24) NULL,
   AZIMUTSECTOR NUMBER(6, 2) NULL,
   IDREGION NUMBER(10, 0) NULL,
   NAMEREGION VARCHAR2(1020) NULL,
   IDFILIAL NUMBER(10, 0) NULL,
   NAMEFILIAL VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.BSSORMERR
  (CISECT CHAR(24) NULL,
   IDREGION NUMBER(10, 0) NULL,
   COUNT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.BSSTAGES2LEVEL
  (RECID NUMBER(10, 0) NULL,
   STAGEID NUMBER(10, 0) NULL,
   LEVELID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BSSTAGES2LEVEL
  ADD CONSTRAINT PK_BSSTAGES2LEVEL UNIQUE (RECID);
 
ALTER TABLE INFORMIX.BSSTAGES2LEVEL
  ADD CONSTRAINT SYS_C006013 CHECK ("RECID" IS NOT NULL);

CREATE TABLE INFORMIX.BSSTANDS
  (STANDID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STNOMER CHAR(200) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   PLANFACTTYPE NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT PK_BSSTANDS UNIQUE (STANDID);
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT CKC_DATASOUR_BSSTA CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT CKC_PLANFACT_BSSTA CHECK (planfacttype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT SYS_C005453 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT SYS_C005454 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT SYS_C005455 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BSSTANDS
  ADD CONSTRAINT SYS_C005456 CHECK ("PLANFACTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.BTSVISUALTAGS
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   PARENTID NUMBER(10, 0) NULL,
   CATEGORYID NUMBER(10, 0) NULL,
   POS NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   ISIBPTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.BTSVISUALTAGS
  ADD CONSTRAINT PK_BTSVISUALTAGS UNIQUE (CATEGORYID);
 
ALTER TABLE INFORMIX.BTSVISUALTAGS
  ADD CONSTRAINT SYS_C005545 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.BTSVISUALTAGS
  ADD CONSTRAINT SYS_C005546 CHECK ("ISIBPTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.BUGSANDQUESTIONS
  (IDBUGANDQUESTION NUMBER(10, 0) NULL,
   IDTASK NUMBER(10, 0) NULL,
   IDSTATE NUMBER(10, 0) NULL,
   REQUESTUSER NUMBER(10, 0) NULL,
   REQUESTDATE DATE NULL,
   REQUESTNOTE CHAR(2000) NULL,
   ANALYSUSER NUMBER(10, 0) NULL,
   ANALYSDATE DATE NULL,
   ANSWERUSER NUMBER(10, 0) NULL,
   ANSWERDATE DATE NULL,
   ANSWERNOTE CHAR(2000) NULL,
   WAITMAKEDATE DATE NULL,
   MAKEDATE DATE NULL,
   MAKENOTE CHAR(2000) NULL,
   MAKEUSER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT PK_BUGSANDQUESTION UNIQUE (IDBUGANDQUESTION);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004352 CHECK ("IDSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004353 CHECK ("REQUESTUSER" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004354 CHECK ("REQUESTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004355 CHECK ("REQUESTNOTE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004350 CHECK ("IDBUGANDQUESTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSANDQUESTIONS
  ADD CONSTRAINT SYS_C004351 CHECK ("IDTASK" IS NOT NULL);

CREATE TABLE INFORMIX.BUGSTATES
  (IDSTATE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.BUGSTATES
  ADD CONSTRAINT PK_BUGSTATES UNIQUE (IDSTATE);
 
ALTER TABLE INFORMIX.BUGSTATES
  ADD CONSTRAINT SYS_C004158 CHECK ("IDSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.BUGSTATES
  ADD CONSTRAINT SYS_C004159 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.CABLEDIAMETERS
  (ID NUMBER(10, 0) NULL,
   DIAMNAME CHAR(40) NULL,
   CABLEDIAM NUMBER(6, 4) NULL);

ALTER TABLE INFORMIX.CABLEDIAMETERS
  ADD CONSTRAINT PK_CABLEDIAMETERS UNIQUE (ID);
 
ALTER TABLE INFORMIX.CABLEDIAMETERS
  ADD CONSTRAINT SYS_C005740 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLEDIAMETERS
  ADD CONSTRAINT SYS_C005741 CHECK ("DIAMNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLEDIAMETERS
  ADD CONSTRAINT SYS_C005742 CHECK ("CABLEDIAM" IS NOT NULL);

CREATE TABLE INFORMIX.CABLERES
  (RESOURCE_ NUMBER(10, 0) NULL,
   CABLEDIAMID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CABLERES
  ADD CONSTRAINT PK_CABLERES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.CABLERES
  ADD CONSTRAINT SYS_C003975 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLERES
  ADD CONSTRAINT SYS_C003976 CHECK ("CABLEDIAMID" IS NOT NULL);

CREATE TABLE INFORMIX.CABLERESBAND
  (RESOURCE_ NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   LOSTFACTOR NUMBER(6, 4) NULL);

ALTER TABLE INFORMIX.CABLERESBAND
  ADD CONSTRAINT PK_CABLERESBAND UNIQUE (RESOURCE_, BAND);
 
ALTER TABLE INFORMIX.CABLERESBAND
  ADD CONSTRAINT CKC_BAND_CABLE CHECK (band IN (800 ,900 ,1800 ,2000 ));
 
ALTER TABLE INFORMIX.CABLERESBAND
  ADD CONSTRAINT SYS_C004601 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLERESBAND
  ADD CONSTRAINT SYS_C004602 CHECK ("BAND" IS NOT NULL);

CREATE TABLE INFORMIX.CABLERUNRESOURCESET
  (RESOURCESET NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CABLERUNRESOURCESET
  ADD CONSTRAINT PK_CABLERUNRESOURC UNIQUE (RESOURCESET);
 
ALTER TABLE INFORMIX.CABLERUNRESOURCESET
  ADD CONSTRAINT SYS_C003711 CHECK ("RESOURCESET" IS NOT NULL);

CREATE TABLE INFORMIX.CABLEWORKPARAMS
  (ID_ANTEN NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ID_CABLE NUMBER(10, 0) NULL,
   KSVN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.CABLEWORKPARAMS
  ADD CONSTRAINT PK_CABLEWORKPARAMS UNIQUE (ID_ANTEN, BAND, ID_CABLE);
 
ALTER TABLE INFORMIX.CABLEWORKPARAMS
  ADD CONSTRAINT SYS_C004980 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLEWORKPARAMS
  ADD CONSTRAINT SYS_C004981 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CABLEWORKPARAMS
  ADD CONSTRAINT SYS_C004982 CHECK ("ID_CABLE" IS NOT NULL);

CREATE TABLE INFORMIX.CARDTRACKS
  (TRACKID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   FROM_ NUMBER(10, 0) NULL,
   TO_ NUMBER(10, 0) NULL,
   WHEN_ DATE NULL,
   DELTAPRICE NUMBER(15, 3) NULL,
   ACTIONTYPE CHAR(4) NULL,
   OLDCONFIGURATION CHAR(320) NULL);

ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT PK_CARDTRACKS UNIQUE (TRACKID);
 
ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT SYS_C004201 CHECK ("TRACKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT SYS_C004202 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT SYS_C004203 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT SYS_C004204 CHECK ("WHEN_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARDTRACKS
  ADD CONSTRAINT SYS_C004205 CHECK ("ACTIONTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.CARS
  (CAR NUMBER(10, 0) NULL,
   ISOUR CHAR(4) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   CAR_MODEL CHAR(160) NULL,
   CAR_NUMBER CHAR(80) NULL);

ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT PK_CARS UNIQUE (CAR);
 
ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT CKC_ISOUR_CARS CHECK (isour IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT SYS_C004662 CHECK ("CAR_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT SYS_C004659 CHECK ("CAR" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT SYS_C004660 CHECK ("ISOUR" IS NOT NULL);
 
ALTER TABLE INFORMIX.CARS
  ADD CONSTRAINT SYS_C004661 CHECK ("CAR_MODEL" IS NOT NULL);

CREATE TABLE INFORMIX.CATEGRESOURCES
  (CATEGID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.CATEGRESOURCES
  ADD CONSTRAINT SYS_C004953 CHECK ("CATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CATEGRESOURCES
  ADD CONSTRAINT SYS_C004954 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.CFGANTENNACABLES
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_CABLE NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   LEN_CABLE NUMBER(6, 2) NULL,
   CABLERES NUMBER(10, 0) NULL,
   GROUNDRESOURCE NUMBER(10, 0) NULL,
   GROUNDCNT NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT PK_CFGANTENNACABLE UNIQUE (SAVCONFIGID, ID_CABLE);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT CKC_OBJECTST_CFGAN CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005890 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005891 CHECK ("ID_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005892 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005893 CHECK ("LEN_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005894 CHECK ("CABLERES" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005895 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNACABLES
  ADD CONSTRAINT SYS_C005896 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGANTENNES
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   NUM_ANT CHAR(128) NULL,
   KIND_ANT CHAR(4) NULL,
   NAKL NUMBER(4, 2) NULL,
   AZ_ANT NUMBER(6, 2) NULL,
   KSWN NUMBER(6, 2) NULL,
   H_SET1 NUMBER(6, 2) NULL,
   LEN_CABLE NUMBER(6, 2) NULL,
   CABLERES NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   AZ_VARIATION CHAR(80) NULL,
   NAKL_VARIATION CHAR(80) NULL,
   INPUT_POWER NUMBER(6, 2) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   GROUNDRESOURCE NUMBER(10, 0) NULL,
   GROUNDCNT NUMBER(10, 0) NULL,
   LOCATIONTYPE CHAR(4) NULL,
   ELECTRICALTILT NUMBER(4, 2) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL,
   COMMCABLE CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT PK_CFGANTENNES UNIQUE (SAVCONFIGID, ID_ANTEN);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT CKC_KIND_ANT_CFGAN CHECK (kind_ant IN ('R' ,'T' ,'D' ));
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT CKC_BYHAND_CFGAN CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT CKC_LOCATION_CFGAN CHECK (locationtype IN ('I' ,'O' ));
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT CKC_OBJTST_CFGAN CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT CKC_COMMCABL_CFGAN CHECK (commcable IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005867 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005868 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005869 CHECK ("NUM_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005870 CHECK ("KIND_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005871 CHECK ("NAKL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005872 CHECK ("AZ_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005873 CHECK ("H_SET1" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005874 CHECK ("LEN_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005875 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005876 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005877 CHECK ("LOCATIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005878 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005879 CHECK ("OBJECTSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005880 CHECK ("COMMCABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNES
  ADD CONSTRAINT SYS_C005866 CHECK ("SAVCONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.CFGANTENNESWORKBANDS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL,
   ELECTRICANGLE NUMBER(4, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   KSWN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT PK_CFGANTENNESWORK UNIQUE (SAVCONFIGID, ID_ANTEN, BAND);
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT CKC_CFGBAND_ANT CHECK (band IN (800 ,900 ,1800 ,2000 ));
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT CKC_OBJECTST_AWB CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C005720 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C005721 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C005722 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTENNESWORKBANDS
  ADD CONSTRAINT SYS_C005723 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGANTEN2SECTORS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT PK_CFGANTEN2SECTOR UNIQUE (SAVCONFIGID, ID_ANTEN, ID_SECT);
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT CKC_OBJST_CFGANSC CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT SYS_C005881 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT SYS_C005882 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT SYS_C005883 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT SYS_C005884 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGANTEN2SECTORS
  ADD CONSTRAINT SYS_C005885 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGBASESTATIONS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   SWITCH NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   REPEATER CHAR(4) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL,
   N_STOEK NUMBER(5, 0) NULL,
   ST_TRANSP CHAR(320) NULL,
   TIME_BACKUP CHAR(20) NULL,
   DATE_ASSEMB_AFS DATE NULL,
   DATE_ASSEMB_AFS2 DATE NULL,
   DATE_CONNECT DATE NULL,
   DATE_CONNECT2 DATE NULL,
   DATE_ONAIR DATE NULL,
   DATE_ONAIR2 DATE NULL,
   NET_STAGE NUMBER(5, 0) NULL,
   CON_TYPE CHAR(4) NULL,
   E1_QTY NUMBER(5, 0) NULL,
   ON_AIR CHAR(4) NULL,
   DATE_BLDBEG2 DATE NULL,
   DATE_ASSEMB2 DATE NULL,
   DATE_TEST2 DATE NULL,
   DATE_PR2 DATE NULL,
   PREFIXCELLID NUMBER(10, 0) NULL,
   SOFTVERSION CHAR(200) NULL,
   STAND_RESOURCE NUMBER(10, 0) NULL,
   ISARENDATS CHAR(4) NULL,
   STATE900 CHAR(4) NULL,
   STATE1800 CHAR(4) NULL,
   H_OBJ_ANT NUMBER(6, 2) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   NUMDCSPERMIT CHAR(160) NULL,
   NUMGSMPERMIT CHAR(160) NULL,
   PWR_VAL NUMBER(4, 2) NULL,
   PWR_CAT CHAR(4) NULL,
   PWR_RESERVE CHAR(4) NULL,
   PWR_RES_CAT CHAR(4) NULL,
   DATE_BLDBEG DATE NULL,
   DATE_ASSEMB DATE NULL,
   DATE_TEST DATE NULL,
   DATE_PR DATE NULL,
   EQUIPCOMMENT CHAR(2000) NULL,
   LOGICTYPEID NUMBER(10, 0) NULL,
   MANUFID NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL,
   APARTMENTID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT PK_CFGBASESTATIONS UNIQUE (SAVCONFIGID, EQUIPMENT);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_TYPE_CFGBA CHECK (TYPE_ IN ('D' ,'S' ,'C' ,'G' ));
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_REPEATER_CFGBA CHECK (repeater IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_CON_TYPE_CFGBA CHECK ((con_type IS NULL ) OR (con_type IN ('R' ,'O' ,'C' )) );
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_ON_AIR_CFGBA CHECK ((on_air IS NULL ) OR (on_air IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_ISARENDA_CFGBA CHECK ((isarendats IS NULL ) OR (isarendats IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_STATE900_CFGBA CHECK ((state900 IS NULL ) OR (state900 IN ('P' ,'W' ,'M' ,'D' )) );
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_STATE180_CFGBA CHECK ((state1800 IS NULL ) OR (state1800 IN ('P' ,'W' ,'M' ,'D' )) );
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT CKC_OBJECTST_CFGBA CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005850 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005851 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005852 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005853 CHECK ("REPEATER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005854 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005855 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBASESTATIONS
  ADD CONSTRAINT SYS_C005856 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGBSSTANDS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STNOMER CHAR(200) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT PK_CFGBSSTANDS UNIQUE (SAVCONFIGID, STANDID);
 
ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT CKC_OBJECTST_CFGBS CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT SYS_C005886 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT SYS_C005887 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT SYS_C005888 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGBSSTANDS
  ADD CONSTRAINT SYS_C005889 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGCABLEWORKPARAMS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_ANTEN NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ID_CABLE NUMBER(10, 0) NULL,
   KSVN NUMBER(6, 2) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT PK_CFGCABLEWORKPAR UNIQUE (SAVCONFIGID, ID_ANTEN, BAND, ID_CABLE);
 
ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT SYS_C005897 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT SYS_C005898 CHECK ("ID_ANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT SYS_C005899 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT SYS_C005900 CHECK ("ID_CABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCABLEWORKPARAMS
  ADD CONSTRAINT SYS_C005901 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGCONVERTLOG
  (IDREC NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   ERRTEXT VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.CFGCONVERTLOG
  ADD CONSTRAINT PK_CFGCONVERTLOG UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.CFGCONVERTLOG
  ADD CONSTRAINT SYS_C003680 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCONVERTLOG
  ADD CONSTRAINT SYS_C003681 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGCONVERTLOG
  ADD CONSTRAINT SYS_C003682 CHECK ("ERRTEXT" IS NOT NULL);

CREATE TABLE INFORMIX.CFGDOCUMENT
  (DOCUMENT NUMBER(10, 0) NULL,
   SAVCONFIGID_OLD NUMBER(10, 0) NULL,
   SAVCONFIGID_NEW NUMBER(10, 0) NULL,
   STOREDEM NUMBER(10, 0) NULL,
   STOREBAD NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CFGDOCUMENT
  ADD CONSTRAINT PK_CFGDOCUMENT UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.CFGDOCUMENT
  ADD CONSTRAINT SYS_C005902 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGDOCUMENT
  ADD CONSTRAINT SYS_C005903 CHECK ("SAVCONFIGID_OLD" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGDOCUMENT
  ADD CONSTRAINT SYS_C005904 CHECK ("SAVCONFIGID_NEW" IS NOT NULL);

CREATE TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   OBJCFGID NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  ADD CONSTRAINT PK_CFGEQUIPOBJCFG2 UNIQUE (SAVCONFIGID, OBJCFGID, ID_SECT);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003471 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003472 CHECK ("OBJCFGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003473 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003474 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  (SAVCONFIGID NUMBER(10, 0) NULL,
   OBJCFGID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   OBJECTSTATUS CHAR(4) NULL,
   PARENTOBJCFGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT PK_CFGEQUIPOBJECTS UNIQUE (SAVCONFIGID, OBJCFGID);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT CKC_OBJECTST_CFGEQ CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005905 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005906 CHECK ("OBJCFGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005907 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGEQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005908 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGSAVEDCONFIGS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   NAME CHAR(120) NULL);

ALTER TABLE INFORMIX.CFGSAVEDCONFIGS
  ADD CONSTRAINT PK_CFGSAVEDCONFIGS UNIQUE (SAVCONFIGID);
 
ALTER TABLE INFORMIX.CFGSAVEDCONFIGS
  ADD CONSTRAINT SYS_C005848 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSAVEDCONFIGS
  ADD CONSTRAINT SYS_C005849 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.CFGSECTORS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   NAME_SECT CHAR(320) NULL,
   BAND NUMBER(5, 0) NULL,
   NUM_SECT CHAR(24) NULL,
   AZIMUT NUMBER(6, 2) NULL,
   POWER NUMBER(6, 2) NULL,
   BTS_NUMBER CHAR(40) NULL,
   CON_ABIS CHAR(4) NULL,
   PORT_ABIS NUMBER(10, 0) NULL,
   NUM_PO CHAR(128) NULL,
   DDK CHAR(4) NULL,
   TRX_NUM NUMBER(10, 0) NULL,
   TX_PWR NUMBER(6, 2) NULL,
   TRX_NUM2 NUMBER(10, 0) NULL,
   TX_PWR2 NUMBER(6, 2) NULL,
   TX_SET_PWR NUMBER(6, 2) NULL,
   TRX_OVR_NUM NUMBER(10, 0) NULL,
   TX_OVR_SET_PWR NUMBER(6, 2) NULL,
   HAS_FLT CHAR(4) NULL,
   HAS_LNA CHAR(4) NULL,
   HAS_BUSTER CHAR(4) NULL,
   CONF CHAR(4) NULL,
   IS_HR CHAR(4) NULL,
   CAP_GPRS CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   LAC NUMBER(10, 0) NULL,
   RAC NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   NCC NUMBER(5, 0) NULL,
   BCC NUMBER(5, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   CELLINFO VARCHAR2(1020) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT PK_CFGSECTORS UNIQUE (SAVCONFIGID, ID_SECT);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_BAND_CFGSE CHECK (band IN (800 ,900 ,1800 ,2000 ));
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_CON_ABIS_CFGSE CHECK ((con_abis IS NULL ) OR (con_abis IN ('1' ,'2' ,'3' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_DDK_CFGSE CHECK ((ddk IS NULL ) OR (ddk IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_HAS_FLT_CFGSE CHECK ((has_flt IS NULL ) OR (has_flt IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_HAS_LNA_CFGSE CHECK ((has_lna IS NULL ) OR (has_lna IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_HAS_BUST_CFGSE CHECK ((has_buster IS NULL ) OR (has_buster IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_CONF_CFGSE CHECK ((conf IS NULL ) OR (conf IN ('1' ,'2' ,'3' ,'4' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_IS_HR_CFGSE CHECK ((is_hr IS NULL ) OR (is_hr IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_CAP_GPRS_CFGSE CHECK ((cap_gprs IS NULL ) OR (cap_gprs IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_BYHAND_CFGSE CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT CKC_OBJECTST_CFGSE CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005857 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005858 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005859 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005860 CHECK ("NAME_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005861 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005862 CHECK ("NUM_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005863 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005864 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSECTORS
  ADD CONSTRAINT SYS_C005865 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGSTORAGECARDS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   DATEOPENED DATE NULL,
   OWNER NUMBER(10, 0) NULL,
   POLICY CHAR(4) NULL,
   CLOSED CHAR(4) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   BOXED CHAR(4) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   BROKEN CHAR(4) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   DATECLOSED DATE NULL,
   I13NDATE DATE NULL,
   SERIALNUMBER CHAR(80) NULL,
   PARTY CHAR(80) NULL,
   QTY_BROKEN NUMBER(15, 3) NULL,
   NOTES VARCHAR2(1020) NULL,
   CONFIGURATION CHAR(320) NULL,
   PLACE CHAR(160) NULL,
   INVENTSERIAL CHAR(80) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   ISFICTSERIAL CHAR(4) NULL,
   ISAPPROVED CHAR(4) NULL,
   LOCALSERIAL CHAR(80) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT PK_CFGSTORAGECARDS UNIQUE (SAVCONFIGID, STORAGECARD);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_POLICY_CFGST CHECK (policy IN ('S' ,'P' ,'B' ));
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_CLOSED_CFGST CHECK (closed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_BOXED_CFGST CHECK ((boxed IS NULL ) OR (boxed IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_BROKEN_CFGST CHECK ((broken IS NULL ) OR (broken IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_CFGISFICTSECRD CHECK (isfictserial IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_ISAPPROV_CFGST CHECK (isapproved IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT CKC_OBJECTST_CFGST CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003451 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003452 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003453 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003454 CHECK ("DATEOPENED" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003455 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003456 CHECK ("POLICY" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003457 CHECK ("CLOSED" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003458 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003459 CHECK ("PRICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003460 CHECK ("ISFICTSERIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003461 CHECK ("ISAPPROVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGSTORAGECARDS
  ADD CONSTRAINT SYS_C003462 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CFGTRX
  (SAVCONFIGID NUMBER(10, 0) NULL,
   TRXID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   OBJECTSTATUS CHAR(4) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT PK_CFGTRX UNIQUE (SAVCONFIGID, TRXID);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT CKC_OBJECTST_CFGTR CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005746 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005747 CHECK ("TRXID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005748 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005749 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005750 CHECK ("OBJECTSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX
  ADD CONSTRAINT SYS_C005751 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.CFGTRX2SECTORS
  (SAVCONFIGID NUMBER(10, 0) NULL,
   TRXID NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL,
   OBJECTSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT PK_CFGTRX2SECTORS UNIQUE (SAVCONFIGID, TRXID, ID_SECT);
 
ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT CKC_OBJECTST_CFTRS CHECK (objectstatus IN ('K' ,'U' ,'A' ,'D' ));
 
ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT SYS_C005752 CHECK ("SAVCONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT SYS_C005753 CHECK ("TRXID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT SYS_C005754 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CFGTRX2SECTORS
  ADD CONSTRAINT SYS_C005755 CHECK ("OBJECTSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CHANALPOWERPERMIT
  (IDPERMIT NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   POLARIZATION CHAR(4) NULL,
   BAND NUMBER(10, 0) NULL,
   STARTNUMBER NUMBER(10, 0) NULL,
   ENDNUMBER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT PK_CHANALPOWERPERM UNIQUE (IDPERMIT);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT CKC_POLAR_CHANA1 CHECK (polarization IN ('V' ,'C' ));
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT CKC_BAND_CHANA1 CHECK (band IN (1800 ,900 ));
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004902 CHECK ("IDPERMIT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004903 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004904 CHECK ("POLARIZATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004905 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004906 CHECK ("STARTNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERPERMIT
  ADD CONSTRAINT SYS_C004907 CHECK ("ENDNUMBER" IS NOT NULL);

CREATE TABLE INFORMIX.CHANALPOWERS
  (EQUIPMENT NUMBER(10, 0) NULL,
   CHANAL NUMBER(10, 0) NULL,
   POLARIZATION CHAR(4) NULL,
   POWER NUMBER(10, 0) NULL,
   BAND NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT PK_CHANALPOWERS UNIQUE (EQUIPMENT, CHANAL, POLARIZATION, BAND);
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT CKC_POLARIZA_CHANA CHECK (polarization IN ('V' ,'C' ));
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT CKC_BAND_CHANA CHECK (band IN (1800 ,900 ));
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT SYS_C004596 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT SYS_C004597 CHECK ("CHANAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT SYS_C004598 CHECK ("POLARIZATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT SYS_C004599 CHECK ("POWER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANALPOWERS
  ADD CONSTRAINT SYS_C004600 CHECK ("BAND" IS NOT NULL);

CREATE TABLE INFORMIX.CHANGEACT
  (DOCUMENT NUMBER(10, 0) NULL,
   ACTTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.CHANGEACT
  ADD CONSTRAINT PK_CHANGEACT UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.CHANGEACT
  ADD CONSTRAINT CKC_ACTTYPE_CHANG CHECK (acttype IN ('C' ,'U' ));
 
ALTER TABLE INFORMIX.CHANGEACT
  ADD CONSTRAINT SYS_C004372 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGEACT
  ADD CONSTRAINT SYS_C004373 CHECK ("ACTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.CHANGEACTPOS
  (CHANGEACTPOS NUMBER(10, 0) NULL,
   OLDSERIAL CHAR(80) NULL,
   NEWSERIAL CHAR(80) NULL,
   NEWRESOURCE NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   INVENTSERIAL CHAR(80) NULL,
   OLDRESOURCE NUMBER(10, 0) NULL,
   OLDINVENTSERIAL CHAR(80) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   LOCALSERIAL CHAR(80) NULL,
   OLDLOCALSERIAL CHAR(80) NULL);

ALTER TABLE INFORMIX.CHANGEACTPOS
  ADD CONSTRAINT PK_CHANGEACTPOS UNIQUE (CHANGEACTPOS);
 
ALTER TABLE INFORMIX.CHANGEACTPOS
  ADD CONSTRAINT SYS_C004346 CHECK ("CHANGEACTPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGEACTPOS
  ADD CONSTRAINT SYS_C004347 CHECK ("OLDSERIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGEACTPOS
  ADD CONSTRAINT SYS_C004348 CHECK ("NEWSERIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGEACTPOS
  ADD CONSTRAINT SYS_C004349 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.CHANGESLOG
  (LOGID NUMBER(10, 0) NULL,
   RECDATE DATE NULL,
   OBJTYPE NUMBER(5, 0) NULL,
   OBJID NUMBER(10, 0) NULL,
   EVENTTYPE CHAR(4) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT PK_CHANGESLOG UNIQUE (LOGID);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT CKC_EVENTTYP_CHANG CHECK (eventtype IN ('1' ,'2' ,'3' ));
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT CKC_OBJTYPE_CHANG CHECK (objtype IN (1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ));
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004379 CHECK ("LOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004380 CHECK ("RECDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004381 CHECK ("OBJTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004382 CHECK ("OBJID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004383 CHECK ("EVENTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOG
  ADD CONSTRAINT SYS_C004384 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.CHANGESLOGDETAILS
  (LOGDETID NUMBER(10, 0) NULL,
   LOGID NUMBER(10, 0) NULL,
   FIELDLABEL CHAR(320) NULL,
   OLDVALUE VARCHAR2(1020) NULL,
   NEWVALUE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.CHANGESLOGDETAILS
  ADD CONSTRAINT PK_CHANGESLOGDETAI UNIQUE (LOGDETID);
 
ALTER TABLE INFORMIX.CHANGESLOGDETAILS
  ADD CONSTRAINT SYS_C004588 CHECK ("LOGDETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOGDETAILS
  ADD CONSTRAINT SYS_C004589 CHECK ("LOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CHANGESLOGDETAILS
  ADD CONSTRAINT SYS_C004590 CHECK ("FIELDLABEL" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_CHANGES
  (ID NUMBER(10, 0) NULL,
   REQUESTID NUMBER(10, 0) NULL,
   WHAT CHAR(4) NULL,
   ACTION CHAR(4) NULL,
   N_CELLID CHAR(8) NULL,
   N_CELLNAME CHAR(8) NULL,
   NPREFIXID NUMBER(10, 0) NULL,
   PREFIXID NUMBER(10, 0) NULL,
   CELLID CHAR(8) NULL,
   CELLNAME CHAR(8) NULL,
   ND_CODE NUMBER(10, 0) NULL,
   ND_NAME VARCHAR2(1020) NULL,
   ND_CAPITAL VARCHAR2(1020) NULL,
   ND_DESC VARCHAR2(1020) NULL,
   ND_WHAT CHAR(8) NULL,
   D_CODE NUMBER(10, 0) NULL,
   D_NAME VARCHAR2(1020) NULL,
   D_CAPITAL VARCHAR2(1020) NULL,
   D_DESC VARCHAR2(1020) NULL,
   D_WHAT CHAR(8) NULL,
   OWNER NUMBER(10, 0) NULL,
   ND_ID NUMBER(10, 0) NULL,
   D_ID NUMBER(10, 0) NULL,
   OWNER_NAME VARCHAR2(1020) NULL,
   CREATED DATE NULL,
   N_DESCR VARCHAR2(1020) NULL,
   N_CELLIDDESCR VARCHAR2(1020) NULL,
   CELLIDDESCR VARCHAR2(1020) NULL,
   DESCR VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.CIDNES_CHANGES
  ADD CONSTRAINT PK_CIDNES_CHANGES UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_CHANGES
  ADD CONSTRAINT SYS_C005428 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_DIVISION
  (ID NUMBER(10, 0) NULL,
   PARENTID NUMBER(10, 0) NULL,
   CODE NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   CAPITAL VARCHAR2(1020) NULL,
   DESCR VARCHAR2(1020) NULL,
   WHAT CHAR(8) NULL,
   VERSION NUMBER(10, 0) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   N1 NUMBER(10, 0) NULL,
   N2 NUMBER(10, 0) NULL,
   WASCHANGED NUMBER(10, 0) NULL,
   PREV_VER_ID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CIDNES_DIVISION
  ADD CONSTRAINT PK_CIDNES_DIVISION UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_DIVISION
  ADD CONSTRAINT SYS_C005425 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_DLISTS
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   DESCR VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.CIDNES_DLISTS
  ADD CONSTRAINT PK_CIDNES_DLISTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_DLISTS
  ADD CONSTRAINT SYS_C005426 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_D2P
  (DLISTID NUMBER(10, 0) NULL,
   PEOPLEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CIDNES_D2P
  ADD CONSTRAINT PK_CIDNES_D2P UNIQUE (DLISTID, PEOPLEID);
 
ALTER TABLE INFORMIX.CIDNES_D2P
  ADD CONSTRAINT SYS_C005429 CHECK ("DLISTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CIDNES_D2P
  ADD CONSTRAINT SYS_C005430 CHECK ("PEOPLEID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  (ID NUMBER(10, 0) NULL,
   DIVID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   CELLID CHAR(20) NULL,
   CELLNAME CHAR(20) NULL);

ALTER TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  ADD CONSTRAINT PK_CIDNES_EXCEPTPR UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  ADD CONSTRAINT SYS_C005441 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  ADD CONSTRAINT SYS_C005442 CHECK ("DIVID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  ADD CONSTRAINT SYS_C005443 CHECK ("CELLID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CIDNES_EXCEPTPREFIX
  ADD CONSTRAINT SYS_C005444 CHECK ("CELLNAME" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_PREFIX
  (ID NUMBER(10, 0) NULL,
   DIVID NUMBER(10, 0) NULL,
   CELLNAME CHAR(8) NULL,
   CELLID CHAR(8) NULL,
   WASCHANGED NUMBER(10, 0) NULL,
   PREV_VER_ID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   DESCR VARCHAR2(1020) NULL,
   CELLIDWASCHANGED NUMBER(10, 0) NULL,
   CELLIDDESCR VARCHAR2(1020) NULL,
   PREV_CELLID CHAR(8) NULL,
   PREV_CELLNAME CHAR(8) NULL,
   ISNEW NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CIDNES_PREFIX
  ADD CONSTRAINT PK_CIDNES_PREFIX UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_PREFIX
  ADD CONSTRAINT SYS_C005431 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_REQUEST
  (ID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   STATUS CHAR(4) NULL,
   CREATED DATE NULL);

ALTER TABLE INFORMIX.CIDNES_REQUEST
  ADD CONSTRAINT PK_CIDNES_REQUEST UNIQUE (ID);
 
ALTER TABLE INFORMIX.CIDNES_REQUEST
  ADD CONSTRAINT SYS_C005427 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.CIDNES_SUPREG2DIV
  (SUPREGID NUMBER(10, 0) NULL,
   DIVID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CIDNES_SUPREG2DIV
  ADD CONSTRAINT PK_CIDNES_SUPREG2D UNIQUE (SUPREGID, DIVID);
 
ALTER TABLE INFORMIX.CIDNES_SUPREG2DIV
  ADD CONSTRAINT SYS_C005445 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CIDNES_SUPREG2DIV
  ADD CONSTRAINT SYS_C005446 CHECK ("DIVID" IS NOT NULL);

CREATE TABLE INFORMIX.CITIES
  (CITYID NUMBER(10, 0) NULL,
   NAME CHAR(1020) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   KZLREGIONID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.COMEQUIPMENT
  (EQUIPMENT NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   COMLINE NUMBER(10, 0) NULL,
   CLASS CHAR(320) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   OSINVNAME CHAR(200) NULL,
   NET_IP CHAR(100) NULL,
   DOP_ID NUMBER(10, 0) NULL,
   SUBNET_IP CHAR(100) NULL);

ALTER TABLE INFORMIX.COMEQUIPMENT
  ADD CONSTRAINT PK_COMEQUIPMENT UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.COMEQUIPMENT
  ADD CONSTRAINT CKC_TYPE_COMEQ CHECK (TYPE_ IN ('R' ,'O' ,'A' ,'V' ,'B' ,'T' ));
 
ALTER TABLE INFORMIX.COMEQUIPMENT
  ADD CONSTRAINT SYS_C004262 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMEQUIPMENT
  ADD CONSTRAINT SYS_C004263 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.COMLINES
  (COMLINE NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   FROMPOSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT PK_COMLINES UNIQUE (COMLINE);
 
ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT CKC_TYPE_COMLI CHECK (TYPE_ IN ('R' ,'O' ));
 
ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT SYS_C003880 CHECK ("COMLINE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT SYS_C003881 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT SYS_C003882 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMLINES
  ADD CONSTRAINT SYS_C003883 CHECK ("FROMPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.COMOBJ_CONFIG
  (TYPE_ NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   VISIBLE NUMBER(10, 0) NULL,
   FIX NUMBER(10, 0) NULL,
   USERID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.COMOBJ_DEPENDENCE
  (LINKID NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   DOCUMENTID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMOBJ_DEPENDENCE
  ADD CONSTRAINT PK_COMOBJ_DEPENDEN UNIQUE (LINKID);
 
ALTER TABLE INFORMIX.COMOBJ_DEPENDENCE
  ADD CONSTRAINT SYS_C004964 CHECK ("LINKID" IS NOT NULL);

CREATE TABLE INFORMIX.COMOBJECTS_DOC
  (DOCUMENTID NUMBER(10, 0) NULL,
   NAME CHAR(1020) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   DOCNUMBER NUMBER(10, 0) NULL,
   CREATEDATE DATE NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   BODY_ BLOB NULL);

ALTER TABLE INFORMIX.COMOBJECTS_DOC
  ADD CONSTRAINT PK_COMOBJECTS_DOC UNIQUE (DOCUMENTID);
 
ALTER TABLE INFORMIX.COMOBJECTS_DOC
  ADD CONSTRAINT CKC_TYPE_COMOB CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 )) );
 
ALTER TABLE INFORMIX.COMOBJECTS_DOC
  ADD CONSTRAINT SYS_C004882 CHECK ("DOCUMENTID" IS NOT NULL);

CREATE TABLE INFORMIX.COMOBJECTS_DOCCFG
  (TYPE_ NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   NUMBER_IN NUMBER(10, 0) NULL,
   CRDATE_IN NUMBER(10, 0) NULL,
   EXECUTOR_IN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMOBJECTS_DOCCFG
  ADD CONSTRAINT PK_COMOBJECTS_DOCC UNIQUE (TYPE_);
 
ALTER TABLE INFORMIX.COMOBJECTS_DOCCFG
  ADD CONSTRAINT SYS_C004963 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.COMOBJECTS_REG
  (STORAGEPLACE NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   OLD_CODE CHAR(80) NULL,
   NEW_CODE CHAR(80) NULL,
   OBJSTATE CHAR(4) NULL,
   OBJTYPE CHAR(4) NULL,
   COMMENTS CHAR(2000) NULL,
   LAUNCHDATE DATE NULL,
   PLANLAUNCHDATE DATE NULL,
   OPTIC_TYPE CHAR(200) NULL,
   ALTIUM NUMBER(10, 0) NULL,
   ML_COUNT NUMBER(10, 0) NULL,
   BREEZLINK NUMBER(10, 0) NULL,
   DXX NUMBER(10, 0) NULL,
   DSL NUMBER(10, 0) NULL,
   CISCO NUMBER(10, 0) NULL,
   SAU_COUNT NUMBER(10, 0) NULL,
   IBP_TYPE NUMBER(10, 0) NULL,
   IBP_STATE NUMBER(10, 0) NULL,
   GSM_RANGE CHAR(4) NULL,
   ARENDADATE DATE NULL);
 
ALTER TABLE INFORMIX.COMOBJECTS_REG
  ADD CONSTRAINT CKC_OBJSTATE_COMOB CHECK ((objstate IS NULL ) OR (objstate IN ('0' ,'1' ,'2' ,'3' )) );
 
ALTER TABLE INFORMIX.COMOBJECTS_REG
  ADD CONSTRAINT CKC_OBJTYPE_COMOB CHECK ((objtype IS NULL ) OR (objtype IN ('0' ,'1' ,'2' ,'3' ,'4' )) );
 
ALTER TABLE INFORMIX.COMOBJECTS_REG
  ADD CONSTRAINT CKC_GSM_RANG_COMOB CHECK ((gsm_range IS NULL ) OR (gsm_range IN ('0' ,'1' ,'2' )) );
 
ALTER TABLE INFORMIX.COMOBJECTS_REG
  ADD CONSTRAINT SYS_C004962 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.COMPANIES
  (COMPANY NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   SHORTNAME CHAR(160) NULL);

ALTER TABLE INFORMIX.COMPANIES
  ADD CONSTRAINT PK_COMPANIES UNIQUE (COMPANY);
 
ALTER TABLE INFORMIX.COMPANIES
  ADD CONSTRAINT SYS_C005318 CHECK ("COMPANY" IS NOT NULL);

CREATE TABLE INFORMIX.COMPLECTS
  (COMPLECT NUMBER(10, 0) NULL,
   COMPLECTPART NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPLECTS
  ADD CONSTRAINT PK_COMPLECTS UNIQUE (COMPLECT, COMPLECTPART);
 
ALTER TABLE INFORMIX.COMPLECTS
  ADD CONSTRAINT SYS_C004442 CHECK ("COMPLECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLECTS
  ADD CONSTRAINT SYS_C004443 CHECK ("COMPLECTPART" IS NOT NULL);

CREATE TABLE INFORMIX.COMPLETWORKACTS
  (IDCWACODE NUMBER(10, 0) NULL,
   DOCDATE DATE NULL,
   DOCNUMBER CHAR(120) NULL,
   IDCONTRACT NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   ACTSUM NUMBER(15, 2) NULL,
   ACTNDS NUMBER(15, 2) NULL,
   ACTSTATE CHAR(4) NULL,
   ACTSTARTDATE DATE NULL,
   ACTENDDATE DATE NULL,
   ACTTEXT BLOB NULL,
   ACTFILENAME CHAR(320) NULL,
   NAMEWORK VARCHAR2(1020) NULL,
   EDITBYHAND CHAR(4) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   IDREGISTRYDOC NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT PK_COMPLETWORKACTS UNIQUE (IDCWACODE);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT CKC_EDITBYHA_COMPL CHECK (editbyhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT CKC_ACTSTATE_COMPL CHECK (actstate IN ('O' ,'R' ,'1' ,'2' ,'3' ,'4' ,'5' ,'V' ));
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005061 CHECK ("IDCWACODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005062 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005063 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005064 CHECK ("ACTSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005065 CHECK ("ACTNDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005066 CHECK ("ACTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005067 CHECK ("ACTSTARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005068 CHECK ("ACTENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACTS
  ADD CONSTRAINT SYS_C005069 CHECK ("EDITBYHAND" IS NOT NULL);

CREATE TABLE INFORMIX.COMPLETWORKACT2CHARGE
  (IDCWACODE NUMBER(10, 0) NULL,
   IDCHARGE NUMBER(10, 0) NULL,
   LINKSUMCHARGE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.COMPLETWORKACT2CHARGE
  ADD CONSTRAINT PK_COMPLETWORKACT2 UNIQUE (IDCWACODE, IDCHARGE);
 
ALTER TABLE INFORMIX.COMPLETWORKACT2CHARGE
  ADD CONSTRAINT SYS_C005744 CHECK ("IDCWACODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPLETWORKACT2CHARGE
  ADD CONSTRAINT SYS_C005745 CHECK ("IDCHARGE" IS NOT NULL);

CREATE TABLE INFORMIX.COMPRJDOC_AGREE
  (DOC_ID NUMBER(10, 0) NULL,
   VISER NUMBER(10, 0) NULL,
   ISLOOK NUMBER(10, 0) NULL,
   ISAGREE NUMBER(10, 0) NULL,
   LOOKDATE DATE NULL,
   SENDDATE DATE NULL,
   ISSEND NUMBER(10, 0) NULL,
   AGREEDATE DATE NULL);

ALTER TABLE INFORMIX.COMPRJDOC_AGREE
  ADD CONSTRAINT PK_COMPRJDOC_AGREE UNIQUE (DOC_ID, VISER);
 
ALTER TABLE INFORMIX.COMPRJDOC_AGREE
  ADD CONSTRAINT SYS_C004991 CHECK ("DOC_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPRJDOC_AGREE
  ADD CONSTRAINT SYS_C004992 CHECK ("VISER" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJ_AGREECFG
  (ID NUMBER(10, 0) NULL,
   VISER NUMBER(10, 0) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   PRJTYPE NUMBER(10, 0) NULL,
   MAINTYPE CHAR(4) NULL,
   REGIONID NUMBER(10, 0) NULL,
   EDITOR NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJ_AGREECFG
  ADD CONSTRAINT PK_COMPROJ_AGREECF UNIQUE (ID);
 
ALTER TABLE INFORMIX.COMPROJ_AGREECFG
  ADD CONSTRAINT SYS_C004743 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_AGREECFG
  ADD CONSTRAINT SYS_C004744 CHECK ("VISER" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_AGREECFG
  ADD CONSTRAINT SYS_C004745 CHECK ("LEVEL_" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTOUT_CFG
  (OPERATOR_ NUMBER(10, 0) NULL,
   COLORIN NUMBER(10, 0) NULL,
   ID_OUT NUMBER(10, 0) NULL,
   POS_OUT NUMBER(10, 0) NULL,
   EQUIP_OUT NUMBER(10, 0) NULL,
   PLANDATE_OUT NUMBER(10, 0) NULL,
   FACTDATE_OUT NUMBER(10, 0) NULL,
   CRDATE_OUT NUMBER(10, 0) NULL,
   AGREE_OUT NUMBER(10, 0) NULL,
   PRIOR_OUT NUMBER(10, 0) NULL,
   OWNER_OUT NUMBER(10, 0) NULL,
   EXEC_OUT NUMBER(10, 0) NULL,
   REQAGREE_OUT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJECTOUT_CFG
  ADD CONSTRAINT PK_COMPROJECTOUT_C UNIQUE (OPERATOR_);
 
ALTER TABLE INFORMIX.COMPROJECTOUT_CFG
  ADD CONSTRAINT SYS_C004523 CHECK ("OPERATOR_" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS
  (PROJECTID NUMBER(10, 0) NULL,
   NAME CHAR(2000) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   OPENDATE DATE NULL,
   CLOSEDATE DATE NULL,
   OWNER CHAR(1020) NULL,
   PRIORITY NUMBER(10, 0) NULL,
   CUSTOMER NUMBER(10, 0) NULL,
   WORKER CHAR(1020) NULL,
   WORKER_ID NUMBER(10, 0) NULL,
   COMMENTS VARCHAR2(4000) NULL,
   AGREE NUMBER(10, 0) NULL,
   OWNERID NUMBER(10, 0) NULL,
   ORGCODE NUMBER(10, 0) NULL,
   EDITOR NUMBER(10, 0) NULL,
   LASTEDITDATE DATE NULL,
   MAILID NUMBER(10, 0) NULL,
   SHORTNAME CHAR(1020) NULL,
   CRDATE DATE NULL,
   PLANBEGDATE DATE NULL,
   PLANENDDATE DATE NULL,
   ISARCHIVE NUMBER(10, 0) NULL,
   ENABLESEND NUMBER(10, 0) NULL,
   COMPR_ID NUMBER(10, 0) NULL,
   MAINTYPE CHAR(4) NULL,
   REGIONID NUMBER(10, 0) NULL,
   ARTERYID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT PROJECTID0 UNIQUE (PROJECTID);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005641 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005642 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005643 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005644 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005645 CHECK ("OPENDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS
  ADD CONSTRAINT SYS_C005646 CHECK ("PRIORITY" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_AGREE
  (PROJECTID NUMBER(10, 0) NULL,
   PLACE NUMBER(10, 0) NULL,
   VISER NUMBER(10, 0) NULL,
   ISLOOK NUMBER(10, 0) NULL,
   ISAGREE NUMBER(10, 0) NULL,
   REASON CHAR(80) NULL,
   LOOKDATE DATE NULL,
   AGREEDATE DATE NULL,
   ISSEND NUMBER(10, 0) NULL,
   SENDDATE DATE NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   CREATOR NUMBER(10, 0) NULL,
   VISID NUMBER(10, 0) NULL,
   JMSMAILID NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_AGREE
  ADD CONSTRAINT CKC_ISAGREE_COMPR CHECK ((isagree IS NULL ) OR (isagree IN (0 ,1 )) );

CREATE TABLE INFORMIX.COMPROJECTS_DIV
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   ISAGREE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJECTS_DIV
  ADD CONSTRAINT PK_COMPROJECTS_DIV UNIQUE (ID);
 
ALTER TABLE INFORMIX.COMPROJECTS_DIV
  ADD CONSTRAINT SYS_C004818 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_DOC
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   NAME CHAR(1020) NULL,
   COMMENT_ CHAR(1020) NULL,
   DOCSIZE NUMBER(10, 0) NULL,
   BODY_ BLOB NULL,
   TYPE_ NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   CRDATE DATE NULL,
   BODYTYPE CHAR(400) NULL,
   VISIBLE NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   ISARCHIVE NUMBER(10, 0) NULL,
   ISAGREE NUMBER(10, 0) NULL,
   HASLIST NUMBER(10, 0) NULL,
   TERABYTEDOCID NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_DOC
  ADD CONSTRAINT SYS_C004488 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_DOC
  ADD CONSTRAINT SYS_C004489 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_DOC
  ADD CONSTRAINT SYS_C004490 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_EQ
  (PROJECTID NUMBER(10, 0) NULL,
   PLACE NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_EQ
  ADD CONSTRAINT CKC_TYPE_COMPR_EQ CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN (0 ,1 )) );

CREATE TABLE INFORMIX.COMPROJECTS_EXEC
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJECTS_EXEC
  ADD CONSTRAINT PK_COMPROJECTS_EXE UNIQUE (ID);
 
ALTER TABLE INFORMIX.COMPROJECTS_EXEC
  ADD CONSTRAINT CKC_TYPE_COMPR_EX CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN (0 ,1 ,2 )) );
 
ALTER TABLE INFORMIX.COMPROJECTS_EXEC
  ADD CONSTRAINT SYS_C004524 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_HIST
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   MSGDATE DATE NULL,
   OWNERID NUMBER(10, 0) NULL,
   OWNER CHAR(400) NULL,
   MSG VARCHAR2(4000) NULL,
   DESC_ CHAR(1020) NULL,
   TYPE_ NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_HIST
  ADD CONSTRAINT SYS_C004494 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_HIST
  ADD CONSTRAINT SYS_C004495 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_MAIL
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   RECEIVER NUMBER(10, 0) NULL,
   MAILTYPE NUMBER(10, 0) NULL,
   SENDMAIL NUMBER(10, 0) NULL,
   SENDSMS NUMBER(10, 0) NULL,
   PHONE CHAR(1020) NULL,
   PRJTYPE NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJECTS_MAIL
  ADD CONSTRAINT PK_COMPROJECTS_MAI UNIQUE (ID);
 
ALTER TABLE INFORMIX.COMPROJECTS_MAIL
  ADD CONSTRAINT SYS_C004817 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_POS
  (PROJECTID NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_POS
  ADD CONSTRAINT SYS_C004491 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_POS
  ADD CONSTRAINT SYS_C004492 CHECK ("ORDER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJECTS_POS
  ADD CONSTRAINT SYS_C004493 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJECTS_RES
  (RECID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   COUNT NUMBER(10, 0) NULL,
   EXISTCOUNT NUMBER(10, 0) NULL,
   MISSCOUNT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.COMPROJ_LEVELCFG
  (IDREC NUMBER(10, 0) NULL,
   MAINTYPE NUMBER(10, 0) NULL,
   SUBTYPE_ NUMBER(10, 0) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   LEVELNAME CHAR(1020) NULL,
   REPLACED NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   AGREENAME CHAR(1020) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJ_LEVELCFG
  ADD CONSTRAINT PK_COMPROJ_LEVELCF UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.COMPROJ_LEVELCFG
  ADD CONSTRAINT SYS_C005170 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_LEVELCFG
  ADD CONSTRAINT SYS_C005171 CHECK ("MAINTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_LEVELCFG
  ADD CONSTRAINT SYS_C005172 CHECK ("LEVEL_" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_LEVELCFG
  ADD CONSTRAINT SYS_C005173 CHECK ("LEVELNAME" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJ_MAILCFG
  (IDMSG NUMBER(10, 0) NULL,
   NAME CHAR(1024) NULL);
 
ALTER TABLE INFORMIX.COMPROJ_MAILCFG
  ADD CONSTRAINT SYS_C004746 CHECK ("IDMSG" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_MAILCFG
  ADD CONSTRAINT SYS_C004747 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.COMPROJ_SORTCFG
  (USERID NUMBER(10, 0) NULL,
   CFGTYPE NUMBER(10, 0) NULL,
   SORTTYPE NUMBER(10, 0) NULL,
   DIRECTION NUMBER(10, 0) NULL,
   SEARCHTYPE NUMBER(10, 0) NULL,
   SORTWORD CHAR(1020) NULL,
   DATA1 CHAR(1020) NULL,
   DATA2 CHAR(1020) NULL,
   REGION NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   SORT NUMBER(10, 0) NULL,
   ADDSORT NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COMPROJ_SORTCFG
  ADD CONSTRAINT PK_COMPROJ_SORTCFG UNIQUE (USERID, CFGTYPE);
 
ALTER TABLE INFORMIX.COMPROJ_SORTCFG
  ADD CONSTRAINT SYS_C004748 CHECK ("USERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COMPROJ_SORTCFG
  ADD CONSTRAINT SYS_C004749 CHECK ("CFGTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.CONFAFSSCHEMES
  (SCHEMEID NUMBER(10, 0) NULL,
   NUMSCHEME CHAR(40) NULL,
   SECTCOUNT900 NUMBER(10, 0) NULL,
   SECTCOUNT1800 NUMBER(10, 0) NULL,
   ANTX2 NUMBER(10, 0) NULL,
   ANTX4 NUMBER(10, 0) NULL,
   ANTV1 NUMBER(10, 0) NULL,
   ANTV2 NUMBER(10, 0) NULL,
   DBC1 NUMBER(10, 0) NULL,
   DBC2 NUMBER(10, 0) NULL,
   DF1 NUMBER(10, 0) NULL,
   DF2 NUMBER(10, 0) NULL,
   TMA NUMBER(10, 0) NULL,
   JO NUMBER(10, 0) NULL,
   JI NUMBER(10, 0) NULL,
   CON NUMBER(10, 0) NULL,
   NOTES CHAR(400) NULL,
   QTYFEEDERLINE NUMBER(10, 0) NULL,
   JO2 NUMBER(10, 0) NULL,
   JI2 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONFAFSSCHEMES
  ADD CONSTRAINT PK_CONFAFSSCHEMES UNIQUE (SCHEMEID);
 
ALTER TABLE INFORMIX.CONFAFSSCHEMES
  ADD CONSTRAINT SYS_C003421 CHECK ("SCHEMEID" IS NOT NULL);

CREATE TABLE INFORMIX.CONFAFS2CONFRULES
  (IDDEP NUMBER(10, 0) NULL,
   SCHEMEID NUMBER(10, 0) NULL,
   RULEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONFAFS2CONFRULES
  ADD CONSTRAINT PK_CONFAFS2CONFRUL UNIQUE (IDDEP);
 
ALTER TABLE INFORMIX.CONFAFS2CONFRULES
  ADD CONSTRAINT SYS_C003422 CHECK ("IDDEP" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFAFS2CONFRULES
  ADD CONSTRAINT SYS_C003423 CHECK ("SCHEMEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFAFS2CONFRULES
  ADD CONSTRAINT SYS_C003424 CHECK ("RULEID" IS NOT NULL);

CREATE TABLE INFORMIX.CONFBSNFS
  (ID NUMBER(10, 0) NULL,
   CODENRI NUMBER(10, 0) NULL,
   SECT_A NUMBER(10, 0) NULL,
   SECT_B NUMBER(10, 0) NULL,
   SECT_C NUMBER(10, 0) NULL,
   SECT_D NUMBER(10, 0) NULL,
   SECT_E NUMBER(10, 0) NULL,
   SECT_F NUMBER(10, 0) NULL,
   SECT_G NUMBER(10, 0) NULL,
   SECT_H NUMBER(10, 0) NULL,
   NFSITEM_ID CHAR(160) NULL,
   CONFTYPE CHAR(4) NULL,
   VOLTAGE NUMBER(6, 2) NULL,
   SECT_O900 NUMBER(10, 0) NULL,
   SECT_O1800 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT PK_CONFBSNFS UNIQUE (ID);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT CKC_CONFTYPE_CONFB CHECK (conftype IN ('S' ,'A' ));
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005965 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005966 CHECK ("CODENRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005967 CHECK ("SECT_A" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005968 CHECK ("SECT_B" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005969 CHECK ("SECT_C" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005970 CHECK ("SECT_D" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005971 CHECK ("SECT_E" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005972 CHECK ("SECT_F" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005973 CHECK ("SECT_G" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005974 CHECK ("SECT_H" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005975 CHECK ("NFSITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005976 CHECK ("CONFTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005977 CHECK ("SECT_O900" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFBSNFS
  ADD CONSTRAINT SYS_C005978 CHECK ("SECT_O1800" IS NOT NULL);

CREATE TABLE INFORMIX.CONFFORMULATERMS
  (RECID NUMBER(10, 0) NULL,
   TERM CHAR(80) NULL,
   DESCRIPTION CHAR(640) NULL);
 
ALTER TABLE INFORMIX.CONFFORMULATERMS
  ADD CONSTRAINT SYS_C003406 CHECK ("RECID" IS NOT NULL);

CREATE TABLE INFORMIX.CONFNFSREQ_RULES
  (RULEID NUMBER(10, 0) NULL,
   MANUFID NUMBER(10, 0) NULL,
   STANDARD CHAR(4) NULL,
   CON_IMPEDANCE NUMBER(10, 0) NULL,
   POLARIZATION CHAR(4) NULL,
   ISMSHU CHAR(4) NULL,
   CASECOUNT NUMBER(10, 0) NULL,
   CABLE_DIAM NUMBER(5, 3) NULL,
   BAND NUMBER(10, 0) NULL,
   RULETYPE CHAR(4) NULL,
   MAINRES NUMBER(10, 0) NULL,
   CABLELENGTH CHAR(160) NULL);

ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT PK_CONFNFSREQ_RULE UNIQUE (RULEID);
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT CKC_STANDARD_CONFN CHECK ((standard IS NULL ) OR (standard IN ('G' ,'S' ,'C' )) );
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT CKC_POLARIZA_CONFN CHECK ((polarization IS NULL ) OR (polarization IN ('V' ,'C' )) );
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT CKC_ISMSHU_CONFN CHECK (ismshu IN ('Y' ,'N' ,'I' ));
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT CKC_RULETYPE_CONFN CHECK ((ruletype IS NULL ) OR (ruletype IN ('P' ,'R' ,'S' ,'A' ,'B' ,'I' ,'F' )) );
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT SYS_C005738 CHECK ("RULEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFNFSREQ_RULES
  ADD CONSTRAINT SYS_C005739 CHECK ("ISMSHU" IS NOT NULL);

CREATE TABLE INFORMIX.CONFNFSREQUEST_RES
  (ID NUMBER(10, 0) NULL,
   RULEID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   RESOURCESET NUMBER(10, 0) NULL,
   RECORDTYPE CHAR(4) NULL,
   FORMULA CHAR(1020) NULL,
   COUNT NUMBER(6, 3) NULL,
   NFSITEM_ID CHAR(160) NULL,
   ROUNDUPTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.CONFNFSREQUEST_RES
  ADD CONSTRAINT PK_CONFNFSREQUEST_ UNIQUE (ID);
 
ALTER TABLE INFORMIX.CONFNFSREQUEST_RES
  ADD CONSTRAINT CKC_RECORDTY_CONFN CHECK (recordtype IN ('V' ,'C' ));
 
ALTER TABLE INFORMIX.CONFNFSREQUEST_RES
  ADD CONSTRAINT CKC_ROUNDUPT_CONFN CHECK ((rounduptype IS NULL ) OR (rounduptype IN ('I' ,'R' ,'M' )) );
 
ALTER TABLE INFORMIX.CONFNFSREQUEST_RES
  ADD CONSTRAINT SYS_C006023 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONFNFSREQUEST_RES
  ADD CONSTRAINT SYS_C006024 CHECK ("RECORDTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.CONTAINERS
  (CONTAINER NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CONTYEAR NUMBER(10, 0) NULL,
   CONTWIDTH NUMBER(6, 2) NULL,
   CONTHEIGHT NUMBER(6, 2) NULL,
   CONTLENGTH NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.CONTAINERS
  ADD CONSTRAINT PK_CONTAINERS UNIQUE (CONTAINER);
 
ALTER TABLE INFORMIX.CONTAINERS
  ADD CONSTRAINT SYS_C004508 CHECK ("CONTAINER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTAINERS
  ADD CONSTRAINT SYS_C004509 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTAINERS
  ADD CONSTRAINT SYS_C004510 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRACTPERIODS
  (PERIOD NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEFINISH DATE NULL,
   NAMEPERIOD CHAR(40) NULL,
   CURRENCY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT PK_CONTRACTPERIODS UNIQUE (PERIOD);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004468 CHECK ("PERIOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004469 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004470 CHECK ("CONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004471 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004472 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004473 CHECK ("DATEFINISH" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPERIODS
  ADD CONSTRAINT SYS_C004474 CHECK ("NAMEPERIOD" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRACTPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   ORDER_ CHAR(80) NULL);

ALTER TABLE INFORMIX.CONTRACTPOS
  ADD CONSTRAINT PK_CONTRACTPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.CONTRACTPOS
  ADD CONSTRAINT SYS_C004303 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTPOS
  ADD CONSTRAINT SYS_C004304 CHECK ("ORDER_" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRACTS
  (DOCUMENT NUMBER(10, 0) NULL,
   SYPPLYTYPE NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   WORKER NUMBER(10, 0) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   BASEAGREEMENT NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   STARTDATE DATE NULL,
   FINISHDATE DATE NULL,
   SUM_ NUMBER(15, 2) NULL,
   TEXT BLOB NULL,
   TIMELINE BLOB NULL,
   CONTRACTSTATE CHAR(4) NULL,
   TEXTFILENAME CHAR(320) NULL,
   TIMELINEFILENAME CHAR(320) NULL);

ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT PK_CONTRACTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT CKC_CONTRACT_CONTR CHECK ((contractstate IS NULL ) OR (contractstate IN ('R' ,'E' ,'F' )) );
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004872 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004873 CHECK ("SYPPLYTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004874 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004875 CHECK ("WORKER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004876 CHECK ("CONTROLLER" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004877 CHECK ("BASEAGREEMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004878 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004879 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004880 CHECK ("FINISHDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTS
  ADD CONSTRAINT SYS_C004881 CHECK ("SUM_" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRACTSNEEDPAY
  (IDREC NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   COUNTBS NUMBER(10, 0) NULL,
   IDARENDODATEL NUMBER(10, 0) NULL,
   IDBEELINE NUMBER(10, 0) NULL,
   IDBASECONTRACT NUMBER(10, 0) NULL,
   IDRESOURCE NUMBER(10, 0) NULL,
   PPTYPE CHAR(4) NULL,
   PERIODPAY CHAR(4) NULL,
   SUMPAY NUMBER(15, 2) NULL,
   IDCURRENCY NUMBER(10, 0) NULL,
   RULEDATEPAY VARCHAR2(1020) NULL,
   RULERATEPAY VARCHAR2(1020) NULL,
   TERMSPAY VARCHAR2(1020) NULL,
   IDLASTPAY NUMBER(10, 0) NULL,
   FLAGNEEDPAY CHAR(4) NULL);

ALTER TABLE INFORMIX.CONTRACTSNEEDPAY
  ADD CONSTRAINT PK_CONTRACTSNEEDPA UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.CONTRACTSNEEDPAY
  ADD CONSTRAINT SYS_C004505 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTSNEEDPAY
  ADD CONSTRAINT SYS_C004506 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRACTSNEEDPAY
  ADD CONSTRAINT SYS_C004507 CHECK ("IDBASECONTRACT" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRADDINFO
  (EQUIPMENT NUMBER(10, 0) NULL,
   ACT_DATE DATE NULL,
   LOAD_MAX_DAY CHAR(80) NULL,
   LOAD_MAX_HOUR CHAR(80) NULL,
   KOEF_KK NUMBER(6, 2) NULL,
   TRAF_AINT NUMBER(10, 0) NULL,
   LOAD_AINT_PERCENT NUMBER(6, 2) NULL,
   SS7_LOAD_AVG NUMBER(6, 2) NULL,
   ACC_LOAD NUMBER(10, 0) NULL,
   CAP_USE_PERCENT NUMBER(6, 2) NULL,
   BAD_CUNSR_PERCENT NUMBER(6, 2) NULL,
   BAD_CUNSSR_PERCENT NUMBER(6, 2) NULL,
   CONN_LOST_AVG NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONTRADDINFO
  ADD CONSTRAINT PK_CONTRADDINFO UNIQUE (EQUIPMENT, ACT_DATE);
 
ALTER TABLE INFORMIX.CONTRADDINFO
  ADD CONSTRAINT SYS_C004444 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRADDINFO
  ADD CONSTRAINT SYS_C004445 CHECK ("ACT_DATE" IS NOT NULL);

CREATE TABLE INFORMIX.CONTROLLER_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL,
   USER_CONFIGURATION_NAME VARCHAR2(1020) NULL,
   RESOURCE_CONFIGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT PK_CONTROLLER_CONF UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003840 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003841 CHECK ("USER_CONFIGURATION_NAME" IS NOT NULL);

CREATE TABLE INFORMIX.CONTROLLERS
  (EQUIPMENT NUMBER(10, 0) NULL,
   SWITCH NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL,
   QTY_CELLS NUMBER(5, 0) NULL,
   QTY_TRX NUMBER(5, 0) NULL,
   QTY_ABIS NUMBER(5, 0) NULL,
   QTY_A NUMBER(5, 0) NULL,
   CON_TYPE CHAR(4) NULL,
   QTY_STAT NUMBER(5, 0) NULL,
   QTY_SHELL NUMBER(5, 0) NULL,
   QTY_FACT_TRS NUMBER(5, 0) NULL,
   VER_PO CHAR(80) NULL,
   STRM2SS7 NUMBER(5, 0) NULL,
   LOAD_MAX_DAY CHAR(80) NULL,
   LOAD_MAX_HOUR CHAR(80) NULL,
   TRAF NUMBER(6, 2) NULL,
   QTY_TRY_TERM NUMBER(6, 2) NULL,
   QTY_TRY_ORIG NUMBER(6, 2) NULL,
   KOEF_KK NUMBER(6, 2) NULL,
   QTY_CELL_OVER_TCN NUMBER(6, 2) NULL,
   QTY_CELL_OVER_SDC NUMBER(6, 2) NULL,
   RES_TECH_CAP_AINT NUMBER(6, 2) NULL,
   AVG_W_AINT_DROP NUMBER(6, 2) NULL,
   AVG_W_AINT_OVER NUMBER(6, 2) NULL,
   AVG_W_PROC_DC_SDC NUMBER(6, 2) NULL,
   AVG_W_PROC_DC_TCH NUMBER(6, 2) NULL,
   COMMENT_CTRL VARCHAR2(1020) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   MFS_NUM NUMBER(10, 0) NULL,
   OMCR_NUM NUMBER(10, 0) NULL,
   LAC_NUMBERS VARCHAR2(1020) NULL,
   TRXFR_QTY_MAX NUMBER(10, 0) NULL,
   TRXFR_QTY NUMBER(10, 0) NULL,
   TRX_USE_PERCENT NUMBER(6, 2) NULL,
   ATR_QTY_MAX NUMBER(10, 0) NULL,
   TRXHR_QTY NUMBER(10, 0) NULL,
   ATR_QTY NUMBER(10, 0) NULL,
   AINT_QTY NUMBER(10, 0) NULL,
   HWAY_QTY_VOICE NUMBER(10, 0) NULL,
   HWAY_QTY_GPRS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.CONTROLLERS
  ADD CONSTRAINT PK_CONTROLLERS UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.CONTROLLERS
  ADD CONSTRAINT CKC_CON_TYPE_CONTR CHECK ((con_type IS NULL ) OR (con_type IN ('R' ,'O' )) );
 
ALTER TABLE INFORMIX.CONTROLLERS
  ADD CONSTRAINT SYS_C003889 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTROLLERS
  ADD CONSTRAINT SYS_C003890 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTROLLERS
  ADD CONSTRAINT SYS_C003891 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.CONTRPARAMS
  (PARAMID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   ACT_DATE DATE NULL,
   PARAM_TYPE NUMBER(10, 0) NULL,
   PARAM_LEVEL NUMBER(10, 2) NULL,
   PARAM_VALUE NUMBER(10, 2) NULL);

ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT PK_CONTRPARAMS UNIQUE (PARAMID);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT CKC_PARAMTYPEC CHECK (param_type IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004446 CHECK ("PARAMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004447 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004448 CHECK ("ACT_DATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004449 CHECK ("PARAM_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004450 CHECK ("PARAM_LEVEL" IS NOT NULL);
 
ALTER TABLE INFORMIX.CONTRPARAMS
  ADD CONSTRAINT SYS_C004451 CHECK ("PARAM_VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.COUNTERS
  (COUNTERID NUMBER(10, 0) NULL,
   COUNTERINFO_ID NUMBER(10, 0) NULL,
   NEXTID NUMBER(10, 0) NULL,
   POSITIONID NUMBER(10, 0) NULL,
   PLACE_INFO VARCHAR2(1020) NULL,
   VENDOR_NUMBER CHAR(400) NULL,
   PRODUCTION_YEAR CHAR(16) NULL,
   INSTALLATION_DATE DATE NULL,
   INITIAL_SETTINGS NUMBER(10, 0) NULL,
   LAST_VERIFICATION DATE NULL,
   NEXT_VERIFICATION DATE NULL,
   CSTATE NUMBER(10, 0) NULL,
   REPLACE_DATE DATE NULL,
   REPLACE_REASON VARCHAR2(1020) NULL,
   REPLACE_SETTINGS NUMBER(10, 0) NULL,
   MODIFIED_DATE DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   DISMANTLING_DATE DATE NULL,
   DISMANTLING_REASON VARCHAR2(1020) NULL,
   DISMANTLING_SET NUMBER(10, 0) NULL,
   ISVENDORPOWERSUPPLY CHAR(4) NULL);

ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT PK_COUNTERS UNIQUE (COUNTERID);
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT CKC_CSTATE_COUNT CHECK ((cstate IS NULL ) OR (cstate IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT CKC_ISVENDOR_COUNT CHECK (isvendorpowersupply IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT SYS_C004776 CHECK ("COUNTERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT SYS_C004777 CHECK ("COUNTERINFO_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT SYS_C004778 CHECK ("POSITIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT SYS_C004779 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTERS
  ADD CONSTRAINT SYS_C004780 CHECK ("ISVENDORPOWERSUPPLY" IS NOT NULL);

CREATE TABLE INFORMIX.COUNTERS_INFO
  (ID NUMBER(10, 0) NULL,
   CODE CHAR(400) NULL,
   NAME CHAR(400) NULL,
   VERIFICATION_INTER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.COUNTERS_INFO
  ADD CONSTRAINT PK_COUNTERS_INFO UNIQUE (ID);
 
ALTER TABLE INFORMIX.COUNTERS_INFO
  ADD CONSTRAINT SYS_C004775 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.COUNTRIES
  (COUNTRY NUMBER(10, 0) NULL,
   NAME CHAR(120) NULL,
   CCODE NUMBER(2, 0) NULL,
   CMNEMONIC CHAR(8) NULL,
   TELECOMCODE NUMBER(3, 0) NULL);

ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT PK_COUNTRIES UNIQUE (COUNTRY);
 
ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT SYS_C006014 CHECK ("COUNTRY" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT SYS_C006015 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT SYS_C006016 CHECK ("CCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT SYS_C006017 CHECK ("CMNEMONIC" IS NOT NULL);
 
ALTER TABLE INFORMIX.COUNTRIES
  ADD CONSTRAINT SYS_C006018 CHECK ("TELECOMCODE" IS NOT NULL);

CREATE TABLE INFORMIX.COURIERDELIVERY
  (IDRECORD NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   BAN NUMBER(10, 0) NULL,
   BEN NUMBER(10, 0) NULL,
   SYS_CREATION_DATE DATE NULL,
   DOCUMENT_NO CHAR(48) NULL,
   DOCUMENT_TYPE CHAR(8) NULL,
   DELIVERY_DATE DATE NULL,
   DELIVERY_STATUS CHAR(4) NULL,
   COURIER_CODE CHAR(4) NULL,
   MEMO CHAR(1200) NULL,
   RECORD_STATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT PK_COURIERDELIVERY UNIQUE (IDRECORD);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT CKC_RECORD_S_COURI CHECK (record_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004983 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004984 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004985 CHECK ("BAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004986 CHECK ("BEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004987 CHECK ("SYS_CREATION_DATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004988 CHECK ("DOCUMENT_NO" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004989 CHECK ("DOCUMENT_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.COURIERDELIVERY
  ADD CONSTRAINT SYS_C004990 CHECK ("RECORD_STATUS" IS NOT NULL);

CREATE TABLE INFORMIX.CRAMER_PIF_COMPANY
  (CLOUDID CHAR(200) NULL,
   CLOUD2CLOUDTYPE CHAR(200) NULL);

ALTER TABLE INFORMIX.CRAMER_PIF_COMPANY
  ADD CONSTRAINT PK_CRAMER_PIF_COMP UNIQUE (CLOUDID);
 
ALTER TABLE INFORMIX.CRAMER_PIF_COMPANY
  ADD CONSTRAINT SYS_C003722 CHECK ("CLOUDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CRAMER_PIF_COMPANY
  ADD CONSTRAINT SYS_C003723 CHECK ("CLOUD2CLOUDTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.CRAMER_PIF_LOCATION
  (LOCATIONID CHAR(200) NULL,
   NAME CHAR(200) NULL,
   ADDRESS CHAR(200) NULL,
   ADDRESS1 CHAR(200) NULL,
   ADDRESS2 CHAR(200) NULL,
   ADDRESS3 CHAR(200) NULL,
   DESCRIPTION CHAR(200) NULL,
   LOCATION2LOCATIONTYPE CHAR(200) NULL,
   LOCATION2PARENTLOCATION CHAR(200) NULL,
   CODE CHAR(200) NULL,
   POSITIONID CHAR(200) NULL,
   POSITION_CATEGORY CHAR(200) NULL,
   LATITUDE CHAR(200) NULL,
   LONGITUDE CHAR(200) NULL,
   GEOGRAPHICAL_SYSTEM CHAR(200) NULL,
   HOUSE CHAR(200) NULL,
   BUILDING CHAR(200) NULL,
   CONSTRUCTION CHAR(200) NULL,
   FLOOR CHAR(200) NULL,
   ROOM CHAR(200) NULL,
   CANCEL_DATE CHAR(200) NULL);

ALTER TABLE INFORMIX.CRAMER_PIF_LOCATION
  ADD CONSTRAINT PK_CRAMER_PIF_LOCA UNIQUE (LOCATIONID);
 
ALTER TABLE INFORMIX.CRAMER_PIF_LOCATION
  ADD CONSTRAINT SYS_C003721 CHECK ("LOCATIONID" IS NOT NULL);

CREATE TABLE INFORMIX.CRAMER_PIF_LOCATION2COMPANY
  (LOCATIONID CHAR(200) NULL,
   CLOUDID CHAR(200) NULL);

ALTER TABLE INFORMIX.CRAMER_PIF_LOCATION2COMPANY
  ADD CONSTRAINT PK_CRAMERPIFLOC2C UNIQUE (LOCATIONID);
 
ALTER TABLE INFORMIX.CRAMER_PIF_LOCATION2COMPANY
  ADD CONSTRAINT SYS_C003724 CHECK ("LOCATIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.CRAMER_PIF_LOCATION2COMPANY
  ADD CONSTRAINT SYS_C003725 CHECK ("CLOUDID" IS NOT NULL);

CREATE TABLE INFORMIX.CURRENCIES
  (CURRENCY NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL,
   SHORTNAME CHAR(80) NULL);

ALTER TABLE INFORMIX.CURRENCIES
  ADD CONSTRAINT PK_CURRENCIES UNIQUE (CURRENCY);
 
ALTER TABLE INFORMIX.CURRENCIES
  ADD CONSTRAINT SYS_C004135 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.CURRENCIES
  ADD CONSTRAINT SYS_C004136 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.DBSANTENNAPLACES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT PK_DBSANTENNAPLACE UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT CKC_ISUSE_DBSANT CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT CKC_RECORDST_4 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT SYS_C004699 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT SYS_C004700 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT SYS_C004701 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSANTENNAPLACES
  ADD CONSTRAINT SYS_C004702 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSAPPARATPLACES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT PK_DBSAPPARATPLACE UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT CKC_ISUSE_DBSAPAP CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT CKC_RECORDST_2 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT SYS_C004809 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT SYS_C004810 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT SYS_C004811 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATPLACES
  ADD CONSTRAINT SYS_C004812 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSAPPARATTYPES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT PK_DBSAPPARATTYPES UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT CKC_ISUSE_DBSAPT CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT CKC_RECORDST_3 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT SYS_C004813 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT SYS_C004814 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT SYS_C004815 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPARATTYPES
  ADD CONSTRAINT SYS_C004816 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSAPPLACETYPES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT PK_DBSAPPLACETYPES UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT CKC_ISUSE_DBSAPPT CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT CKC_RECORDST_5 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT SYS_C004703 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT SYS_C004704 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT SYS_C004705 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSAPPLACETYPES
  ADD CONSTRAINT SYS_C004706 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSCONTAINERTYPES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT PK_DBSCONTAINERTYP UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT CKC_ISUSE_DBSCONT CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT CKC_RECORDST_6 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT SYS_C004707 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT SYS_C004708 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT SYS_C004709 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSCONTAINERTYPES
  ADD CONSTRAINT SYS_C004710 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSOPORAPLACES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT PK_DBSOPORAPLACES UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT CKC_ISUSE_DBSOPORA CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT CKC_RECORDST_1 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT SYS_C004805 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT SYS_C004806 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT SYS_C004807 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORAPLACES
  ADD CONSTRAINT SYS_C004808 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSOPORATYPES
  (IDDBS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ISUSERECODE CHAR(4) NULL,
   IDNRI NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT PK_DBSOPORATYPES UNIQUE (IDDBS);
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT CKC_ISUSE_DBSOPTT CHECK (isuserecode IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT CKC_RECORDST_7 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT SYS_C004711 CHECK ("IDDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT SYS_C004712 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT SYS_C004713 CHECK ("ISUSERECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSOPORATYPES
  ADD CONSTRAINT SYS_C004714 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSPOSITIONS
  (IDRECORD NUMBER(10, 0) NULL,
   DAMPSID NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   WLANID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   NAME2 VARCHAR2(1020) NULL,
   APPARATTYPE VARCHAR2(1020) NULL,
   CONTAINERTYPE VARCHAR2(1020) NULL,
   PLACETYPE VARCHAR2(1020) NULL,
   APPARATPLACE VARCHAR2(1020) NULL,
   OPORAPLACE VARCHAR2(1020) NULL,
   ISOUROPORA CHAR(20) NULL,
   OPORATYPE VARCHAR2(1020) NULL,
   ANTENNAPLACE VARCHAR2(1020) NULL,
   HEIGHTOPORA CHAR(200) NULL,
   FIOOTVEXPL VARCHAR2(1020) NULL,
   TABNUMOTVEXPL VARCHAR2(1020) NULL,
   STATEBS CHAR(20) NULL,
   DATEDERRICK DATE NULL,
   DATEONSITEREVIEW DATE NULL,
   LASTUPDMARSHKARTA DATE NULL,
   LASTUPDLISTPROHOD DATE NULL,
   LASTUPDPOSITION DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT PK_DBSPOSITIONS UNIQUE (IDRECORD);
 
ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT CKC_FLAGWORK_DBSPO CHECK (flagworknri IN ('N' ,'Y' ));
 
ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT CKC_RECORDST_DBSPO CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT SYS_C004715 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT SYS_C004716 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSPOSITIONS
  ADD CONSTRAINT SYS_C004717 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DBSPOSITIONS2
  (IDRECORD NUMBER(10, 0) NULL,
   DAMPSID NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   WLANID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   NAME2 VARCHAR2(1020) NULL,
   APPARATTYPE VARCHAR2(1020) NULL,
   CONTAINERTYPE VARCHAR2(1020) NULL,
   PLACETYPE VARCHAR2(1020) NULL,
   APPARATPLACE VARCHAR2(1020) NULL,
   OPORAPLACE VARCHAR2(1020) NULL,
   ISOUROPORA CHAR(20) NULL,
   OPORATYPE VARCHAR2(1020) NULL,
   ANTENNAPLACE VARCHAR2(1020) NULL,
   HEIGHTOPORA CHAR(200) NULL,
   FIOOTVEXPL VARCHAR2(1020) NULL,
   TABNUMOTVEXPL VARCHAR2(1020) NULL,
   STATEBS CHAR(20) NULL,
   DATEDERRICK DATE NULL,
   DATEONSITEREVIEW DATE NULL,
   LASTUPDMARSHKARTA DATE NULL,
   LASTUPDLISTPROHOD DATE NULL,
   LASTUPDPOSITION DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);
 
ALTER TABLE INFORMIX.DBSPOSITIONS2
  ADD CONSTRAINT SYS_C004718 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSPOSITIONS2
  ADD CONSTRAINT SYS_C004719 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.DBSPOSITIONS2
  ADD CONSTRAINT SYS_C004720 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DEFAULTDPVERSIONPLANONREGION
  (IDREGION NUMBER(10, 0) NULL,
   NAMEREGION VARCHAR2(1020) NULL,
   IDPLAN NUMBER(10, 0) NULL,
   YEAR_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DEFAULTDPVERSIONPLANONREGION
  ADD CONSTRAINT U920_3942 UNIQUE (IDREGION, YEAR_);

CREATE TABLE INFORMIX.DIV_BY_REG
  (REG NUMBER(10, 0) NULL,
   REGNAME CHAR(320) NULL,
   DIVID NUMBER(10, 0) NULL,
   DIVNAME CHAR(800) NULL);
 
ALTER TABLE INFORMIX.DIV_BY_REG
  ADD CONSTRAINT SYS_C004965 CHECK ("REG" IS NOT NULL);
 
ALTER TABLE INFORMIX.DIV_BY_REG
  ADD CONSTRAINT SYS_C004966 CHECK ("DIVID" IS NOT NULL);

CREATE TABLE INFORMIX.DIV_BY_REG1
  (REG NUMBER(10, 0) NULL,
   REGNAME CHAR(320) NULL,
   DIVID NUMBER(10, 0) NULL,
   DIVNAME CHAR(1200) NULL);
 
ALTER TABLE INFORMIX.DIV_BY_REG1
  ADD CONSTRAINT SYS_C004967 CHECK ("REG" IS NOT NULL);
 
ALTER TABLE INFORMIX.DIV_BY_REG1
  ADD CONSTRAINT SYS_C004968 CHECK ("DIVID" IS NOT NULL);

CREATE TABLE INFORMIX.DIVISIONS
  (DIVISION NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   ENCLOSER NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   SHORTNAME CHAR(160) NULL,
   BOSS NUMBER(10, 0) NULL,
   COMPANY NUMBER(10, 0) NULL,
   ISACTIVE CHAR(4) NULL);

ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT PK_DIVISIONS UNIQUE (DIVISION);
 
ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT CKC_TYPE_DIVIS CHECK (TYPE_ IN ('D' ,'S' ,'P' ,'G' ));
 
ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT CKC_ISACTIVE_DIVIS CHECK (isactive IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT SYS_C003860 CHECK ("DIVISION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT SYS_C003861 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DIVISIONS
  ADD CONSTRAINT SYS_C003862 CHECK ("ISACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.DIVISORFACTORLIST
  (DIVISORFACTORID NUMBER(10, 0) NULL,
   FACTORNAME CHAR(80) NULL);

ALTER TABLE INFORMIX.DIVISORFACTORLIST
  ADD CONSTRAINT PK_DIVISORFACTORLI UNIQUE (DIVISORFACTORID);
 
ALTER TABLE INFORMIX.DIVISORFACTORLIST
  ADD CONSTRAINT SYS_C003411 CHECK ("DIVISORFACTORID" IS NOT NULL);

CREATE TABLE INFORMIX.DOCACTIONS
  (DOCACTION NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   WHEN_ DATE NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   WHAT VARCHAR2(400) NULL);

ALTER TABLE INFORMIX.DOCACTIONS
  ADD CONSTRAINT PK_DOCACTIONS UNIQUE (DOCACTION);
 
ALTER TABLE INFORMIX.DOCACTIONS
  ADD CONSTRAINT CKC_TYPE_DOCAC CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN ('C' ,'E' ,'P' ,'U' )) );
 
ALTER TABLE INFORMIX.DOCACTIONS
  ADD CONSTRAINT SYS_C004196 CHECK ("DOCACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCACTIONS
  ADD CONSTRAINT SYS_C004197 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCACTIONS
  ADD CONSTRAINT SYS_C004198 CHECK ("WHEN_" IS NOT NULL);

CREATE TABLE INFORMIX.DOCATTACH
  (ID_ATT NUMBER(10, 0) NULL,
   DOCBODY BLOB NULL,
   DESCR CHAR(200) NULL,
   PAPDOCUMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DOCATTACH
  ADD CONSTRAINT PK_DOCATTACH UNIQUE (ID_ATT);
 
ALTER TABLE INFORMIX.DOCATTACH
  ADD CONSTRAINT SYS_C004576 CHECK ("ID_ATT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCATTACH
  ADD CONSTRAINT SYS_C004577 CHECK ("DOCBODY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCATTACH
  ADD CONSTRAINT SYS_C004578 CHECK ("PAPDOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.DOCDEPENDENCIES
  (DOCUMENTFROM NUMBER(10, 0) NULL,
   DOCUMENTTO NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL);

ALTER TABLE INFORMIX.DOCDEPENDENCIES
  ADD CONSTRAINT PK_DOCDEPENDENCIES UNIQUE (DOCUMENTFROM, DOCUMENTTO, TYPE_);
 
ALTER TABLE INFORMIX.DOCDEPENDENCIES
  ADD CONSTRAINT CKC_TYPE_DOCDE CHECK (TYPE_ IN ('O' ,'I' ,'P' ,'S' ,'D' ,'M' ));
 
ALTER TABLE INFORMIX.DOCDEPENDENCIES
  ADD CONSTRAINT SYS_C004264 CHECK ("DOCUMENTFROM" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCDEPENDENCIES
  ADD CONSTRAINT SYS_C004265 CHECK ("DOCUMENTTO" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCDEPENDENCIES
  ADD CONSTRAINT SYS_C004266 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.DOCPOSITIONS
  (DOCPOSITION NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STORAGECARDTO NUMBER(10, 0) NULL,
   STORAGECARDFROM NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   TYPE_ CHAR(4) NULL,
   PARTY CHAR(80) NULL,
   SERIALNUMBER CHAR(80) NULL,
   SOURCEBOXED CHAR(4) NULL,
   RESULTBOXED CHAR(4) NULL,
   SOURCEBROKEN CHAR(4) NULL,
   RESULTBROKEN CHAR(4) NULL,
   SOURCECLOSED CHAR(4) NULL,
   RESULTCLOSED CHAR(4) NULL,
   CONFIGURATION CHAR(320) NULL,
   AGREGATE NUMBER(10, 0) NULL,
   AGREGATESERIAL CHAR(80) NULL,
   OLDAGREGATESERIAL CHAR(80) NULL,
   NOTES VARCHAR2(1020) NULL,
   OLDPLACE CHAR(160) NULL,
   NEWPLACE CHAR(160) NULL,
   INVENTSERIAL CHAR(80) NULL,
   AGREGATECARDFROM NUMBER(10, 0) NULL,
   AGREGATECARDTO NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   ISFICTSERIAL CHAR(4) NULL,
   REALSERIAL CHAR(80) NULL,
   AGREGATERESOURCE NUMBER(10, 0) NULL,
   OLDAGREGATERESOURCE NUMBER(10, 0) NULL,
   VISUALTAGID NUMBER(10, 0) NULL,
   LOCALSERIAL CHAR(80) NULL,
   AGRINVENTSERIAL CHAR(80) NULL,
   AGRLOCSERIAL CHAR(80) NULL,
   OLDAGRINVENTSERIAL CHAR(80) NULL,
   OLDAGRLOCSERIAL CHAR(80) NULL,
   PARENTBTSDOCPOS NUMBER(10, 0) NULL,
   NFSRESOURCE CHAR(160) NULL);

ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT PK_DOCPOSITIONS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_SOURCEBO_DOCPO CHECK (sourceboxed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_RESULTBO_DOCPO CHECK (resultboxed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_SOURCEBR_DOCPO CHECK (sourcebroken IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_RESULTBR_DOCPO CHECK (resultbroken IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_SOURCECL_DOCPO CHECK (sourceclosed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_RESULTCL_DOCPO CHECK ((resultclosed IS NULL ) OR (resultclosed IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_ISFICTSE_DOCPO CHECK (isfictserial IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT CKC_TYPE_DOCPO CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN ('I' ,'Q' ,'W' ,'C' ,'N' ,'B' ,'P' ,'K' )) );
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003921 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003922 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003923 CHECK ("ORDER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003924 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003925 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003926 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003927 CHECK ("PRICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003928 CHECK ("SOURCEBOXED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003929 CHECK ("RESULTBOXED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003930 CHECK ("SOURCEBROKEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003931 CHECK ("RESULTBROKEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003932 CHECK ("SOURCECLOSED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCPOSITIONS
  ADD CONSTRAINT SYS_C003933 CHECK ("ISFICTSERIAL" IS NOT NULL);

CREATE TABLE INFORMIX.DOCUMENTERRORS
  (ERRORID NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   DOCPOSITION NUMBER(10, 0) NULL,
   ERRORLEVEL NUMBER(10, 0) NULL,
   ERRORTEXT VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT PK_DOCUMENTERRORS UNIQUE (ERRORID);
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT CKC_ERRORLEV_DOCUM CHECK (errorlevel IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT SYS_C004941 CHECK ("ERRORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT SYS_C004942 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT SYS_C004943 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT SYS_C004944 CHECK ("ERRORLEVEL" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTERRORS
  ADD CONSTRAINT SYS_C004945 CHECK ("ERRORTEXT" IS NOT NULL);

CREATE TABLE INFORMIX.DOCUMENTS
  (DOCUMENT NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   FROM_ NUMBER(10, 0) NULL,
   TO_ NUMBER(10, 0) NULL,
   BLANKDATE DATE NULL,
   TYPE_ CHAR(4) NULL,
   BLANKNUMBER CHAR(160) NULL,
   BLANKINDEX NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   CONTRAGENT NUMBER(10, 0) NULL,
   INSURANCEACT CHAR(160) NULL,
   INSURANCEDATE DATE NULL,
   INSURANCEMAN CHAR(320) NULL,
   PROCESSSOURCE CHAR(4) NULL,
   PROCESSDESTINATION CHAR(4) NULL,
   STORAGEMANAGER NUMBER(10, 0) NULL,
   SHOWTOUSER CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   PARENTDOCUMENT NUMBER(10, 0) NULL,
   ISAUTODOC CHAR(4) NULL,
   TO2 NUMBER(10, 0) NULL,
   CALCULATEORDER CHAR(4) NULL,
   CALCTIME DATE NULL,
   NEEDAPPROVE CHAR(4) NULL,
   APPROVED CHAR(4) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   PRJSTATUS CHAR(4) NULL,
   VISUALTYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT PK_DOCUMENTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_NEEDAPPR_DOCUM CHECK (needapprove IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_APPROVED_DOCUM CHECK (approved IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_PRJSTATU_DOCUM CHECK (prjstatus IN ('A' ,'B' ,'C' ,'D' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_TYPE_DOCUM CHECK (TYPE_ IN ('C' ,'I' ,'W' ,'P' ,'S' ,'N' ,'A' ,'H' ,'T' ,'O' ,'R' ,'F' ,'B' ,'G' ,'K' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_VISUALTY_DOCUM CHECK ((visualtype IS NULL ) OR (visualtype IN (1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ,15 )) );
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_STATE_DOCUM CHECK (state IN ('1' ,'2' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_PROCESSS_DOCUM CHECK ((processsource IS NULL ) OR (processsource IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_PROCESSD_DOCUM CHECK ((processdestination IS NULL ) OR (processdestination IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_SHOWTOUS_DOCUM CHECK (showtouser IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_ISAUTODO_DOCUM CHECK (isautodoc IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT CKC_CALCULAT_DOCUM CHECK (calculateorder IN ('A' ,'B' ));
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004018 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004019 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004020 CHECK ("BLANKDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004021 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004022 CHECK ("BLANKINDEX" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004023 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004024 CHECK ("SHOWTOUSER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004025 CHECK ("ISAUTODOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004026 CHECK ("CALCULATEORDER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004027 CHECK ("NEEDAPPROVE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004028 CHECK ("APPROVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOCUMENTS
  ADD CONSTRAINT SYS_C004029 CHECK ("PRJSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DOCUMENTS_OLD
  (DOCUMENT NUMBER(10, 0) NULL,
   BLANKINDEX NUMBER(10, 0) NULL,
   BLANKNUMBER CHAR(160) NULL);

CREATE TABLE INFORMIX.DOPINFOLPAYMENTS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   TYPEBASEDOC NUMBER(10, 0) NULL,
   NUMBERANDDATEBDOC CHAR(120) NULL,
   DATEBUCH DATE NULL,
   DATEBEFOREPAY DATE NULL,
   IDBUDJET NUMBER(10, 0) NULL,
   IDEXPENCE NUMBER(10, 0) NULL,
   IDPAYMODE NUMBER(10, 0) NULL,
   DEFINERATE NUMBER(10, 0) NULL,
   IDPAYTYPE NUMBER(10, 0) NULL,
   TYPERASHOD NUMBER(10, 0) NULL,
   PAYSTATEPLATINUM NUMBER(10, 0) NULL,
   NUMPAYPLATINUM CHAR(120) NULL,
   PURPOSEPAY VARCHAR2(1020) NULL,
   TYPEINSTR NUMBER(10, 0) NULL,
   OTVUSER NUMBER(10, 0) NULL,
   ISACT CHAR(4) NULL,
   ISSCHET CHAR(4) NULL,
   ISKVITANCIA CHAR(4) NULL,
   ISTOVCHECK CHAR(4) NULL,
   ISKASSACHECK CHAR(4) NULL,
   PERCENTAVANS NUMBER(5, 2) NULL,
   DATENRITOPLATINUM DATE NULL,
   DATEPLATINUM DATE NULL,
   FLAGSYNC CHAR(4) NULL,
   FL101 CHAR(8) NULL,
   FL104 CHAR(28) NULL,
   FL105 CHAR(44) NULL,
   FL106 CHAR(8) NULL,
   FL107 CHAR(40) NULL,
   FL108 CHAR(64) NULL,
   FL109 CHAR(40) NULL,
   FL110 CHAR(8) NULL);

ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT PK_DOPINFOLPAYMENT UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_ISACT_DOPIN CHECK ((isact IS NULL ) OR (isact IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_ISSCHET_DOPIN CHECK ((isschet IS NULL ) OR (isschet IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_ISKVITAN_DOPIN CHECK ((iskvitancia IS NULL ) OR (iskvitancia IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_ISTOVCHE_DOPIN CHECK ((istovcheck IS NULL ) OR (istovcheck IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_ISKASSAC_DOPIN CHECK ((iskassacheck IS NULL ) OR (iskassacheck IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT CKC_FLAGSYNC_DOPIN CHECK (flagsync IN ('0' ,'1' ,'2' ,'3' ));
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT SYS_C004107 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DOPINFOLPAYMENTS
  ADD CONSTRAINT SYS_C004108 CHECK ("FLAGSYNC" IS NOT NULL);

CREATE TABLE INFORMIX.DPANTENNES
  (IDANTEN NUMBER(10, 0) NULL,
   IDBSBAND NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   KZLIDANTEN NUMBER(10, 0) NULL,
   HSET NUMBER(6, 0) NULL,
   AZIMUT NUMBER(4, 0) NULL,
   ELECTRICANGLE NUMBER(4, 0) NULL,
   ANGLE NUMBER(4, 0) NULL,
   ANTNUM NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPANTENNES
  ADD CONSTRAINT PK_DPANTENNES UNIQUE (IDANTEN);
 
ALTER TABLE INFORMIX.DPANTENNES
  ADD CONSTRAINT SYS_C003332 CHECK ("IDANTEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPANTENNES
  ADD CONSTRAINT SYS_C003333 CHECK ("IDBSBAND" IS NOT NULL);

CREATE TABLE INFORMIX.DPANT2SECTORS
  (IDSECT NUMBER(10, 0) NULL,
   IDANTEN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPANT2SECTORS
  ADD CONSTRAINT PK_DPANT2SECTORS UNIQUE (IDSECT, IDANTEN);
 
ALTER TABLE INFORMIX.DPANT2SECTORS
  ADD CONSTRAINT SYS_C003365 CHECK ("IDSECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPANT2SECTORS
  ADD CONSTRAINT SYS_C003366 CHECK ("IDANTEN" IS NOT NULL);

CREATE TABLE INFORMIX.DPBASESTATIONS
  (IDBS NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   KZLIDBS NUMBER(10, 0) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   BSTYPE CHAR(120) NULL,
   STANDCOUNT NUMBER(10, 0) NULL,
   CAPEXTYPE NUMBER(10, 0) NULL,
   OPEXTYPE NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   HSET NUMBER(6, 0) NULL,
   BSPROJECTID NUMBER(10, 0) NULL,
   DEVPLAN NUMBER(10, 0) NULL,
   ACTIVESTATUS NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   BSVERSIONSETID NUMBER(10, 0) NULL,
   BSVERSIONSOURCE NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   RCCHIGHTSET NUMBER(6, 0) NULL,
   ARENDADATE DATE NULL,
   TRANSPORTCONNECTIONTYPEID NUMBER(10, 0) NULL,
   POSCODE CHAR(44) NULL);

ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT PK_DPBASESTATIONS UNIQUE (IDBS);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT CKC_ACTIVEST_DPBAS CHECK (activestatus IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT CKC_BSVERSIO_DPBAS CHECK (bsversionsource IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT CKC_STATUS_DPBAS CHECK (status IN (1 ,2 ,3 ,4 ,5 ,11 ,12 ,13 ,15 ));
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT CKC_NUMBER_DPBAS CHECK (NUMBER_ > 0 );
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT CKC_STANDCOU_DPBAS CHECK (standcount > 0 );
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003345 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003346 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003347 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003348 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003349 CHECK ("DEVPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003350 CHECK ("ACTIVESTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003351 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003352 CHECK ("BSVERSIONSETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003353 CHECK ("BSVERSIONSOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003354 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003355 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003356 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBASESTATIONS
  ADD CONSTRAINT SYS_C003357 CHECK ("MODIFIEDBY" IS NOT NULL);

CREATE TABLE INFORMIX.DPBSBANDS
  (IDBSBAND NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   WORKDATE DATE NULL,
   ARENDADATE DATE NULL,
   ARENDASTATE NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   MOUNTDATE DATE NULL,
   PRIORITY NUMBER(10, 0) NULL,
   TASK VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT PK_DPBSBANDS UNIQUE (IDBSBAND);
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT CKC_ARENDAST_DPBSB CHECK ((arendastate IS NULL ) OR (arendastate IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT CKC_STATUS_DPBSB CHECK (status IN (1 ,2 ,3 ,4 ,5 ,11 ,12 ,13 ,15 ));
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT SYS_C003358 CHECK ("IDBSBAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT SYS_C003359 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT SYS_C003360 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSBANDS
  ADD CONSTRAINT SYS_C003361 CHECK ("STATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DPBSDEFAULTNFSCODE
  (MANUFACTURER NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ITEM_ID CHAR(160) NULL,
   UNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPBSDEFAULTNFSCODE
  ADD CONSTRAINT PK_DPBSDEFAULTNFSC UNIQUE (MANUFACTURER, BAND);
 
ALTER TABLE INFORMIX.DPBSDEFAULTNFSCODE
  ADD CONSTRAINT SYS_C003367 CHECK ("MANUFACTURER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSDEFAULTNFSCODE
  ADD CONSTRAINT SYS_C003368 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSDEFAULTNFSCODE
  ADD CONSTRAINT SYS_C003369 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSDEFAULTNFSCODE
  ADD CONSTRAINT SYS_C003370 CHECK ("UNIT" IS NOT NULL);

CREATE TABLE INFORMIX.DPBSMODELSBYFILIAL
  (REGIONID NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   REGNAME VARCHAR2(200) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPBSMODELSBYFILIAL
  ADD CONSTRAINT PK_DPBSMODELSBYFIL UNIQUE (REGIONID, BAND);
 
ALTER TABLE INFORMIX.DPBSMODELSBYFILIAL
  ADD CONSTRAINT SYS_C003590 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSMODELSBYFILIAL
  ADD CONSTRAINT SYS_C003591 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSMODELSBYFILIAL
  ADD CONSTRAINT SYS_C003592 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.DPBSTYPES
  (BSTYPE CHAR(120) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPBSTYPES
  ADD CONSTRAINT PK_DPBSTYPES UNIQUE (BSTYPE);
 
ALTER TABLE INFORMIX.DPBSTYPES
  ADD CONSTRAINT SYS_C003593 CHECK ("BSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPBSTYPES
  ADD CONSTRAINT SYS_C003594 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.DPDEFAULTEQUIPMENT
  (REGIONID NUMBER(10, 0) NULL,
   CLASSID NUMBER(10, 0) NULL,
   BAND900 CHAR(4) NULL,
   BAND1800 CHAR(4) NULL,
   BAND2000 CHAR(4) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT PK_DPDEFAULTEQUIPM UNIQUE (REGIONID, CLASSID, BAND900, BAND1800, BAND2000);
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT CKC_BAND900_DPDEF CHECK (band900 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT CKC_BAND1800_DPDEF CHECK (band1800 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT CKC_BAND2000_DPDEF CHECK (band2000 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT SYS_C003494 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT SYS_C003495 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT SYS_C003496 CHECK ("BAND900" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT SYS_C003497 CHECK ("BAND1800" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEFAULTEQUIPMENT
  ADD CONSTRAINT SYS_C003498 CHECK ("BAND2000" IS NOT NULL);

CREATE TABLE INFORMIX.DPDEVPLANS
  (DEVPLAN NUMBER(10, 0) NULL,
   YEAR_ NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   PLANTYPE NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   PROCESSID NUMBER(19, 0) NULL,
   PERMISSIONOBJECTID NUMBER(19, 0) NULL,
   COMMENTOBJECTID NUMBER(19, 0) NULL,
   ACTIVESTATE NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   PREVIOUSDEVPLAN NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   PLANVERSIONSETID NUMBER(10, 0) NULL,
   CORRECTCAUSE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT PK_DPDEVPLANS UNIQUE (DEVPLAN);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT CKC_PLANTYPE_DPDEV CHECK (plantype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT CKC_STATE_DPDEV CHECK (state IN (1 ,2 ,3 ,4 ,5 ,6 ));
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT CKC_ACTIVEST_DPDEV CHECK (activestate IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT CKC_PLAN_CORRECT_CAUSE CHECK (correctcause IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003334 CHECK ("DEVPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003335 CHECK ("YEAR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003336 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003337 CHECK ("PLANTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003338 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003339 CHECK ("ACTIVESTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003340 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003341 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003342 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003343 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPDEVPLANS
  ADD CONSTRAINT SYS_C003344 CHECK ("PLANVERSIONSETID" IS NOT NULL);

CREATE TABLE INFORMIX.DPIBPBYREGION
  (RECORDID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   ITEM_ID_SIMPLE CHAR(160) NULL,
   ITEM_ID_COMPLEX CHAR(160) NULL,
   UNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT PK_DPIBPBYREGION UNIQUE (RECORDID);
 
ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT SYS_C003611 CHECK ("RECORDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT SYS_C003612 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT SYS_C003613 CHECK ("ITEM_ID_SIMPLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT SYS_C003614 CHECK ("ITEM_ID_COMPLEX" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPBYREGION
  ADD CONSTRAINT SYS_C003615 CHECK ("UNIT" IS NOT NULL);

CREATE TABLE INFORMIX.DPIBPUZOBYREGION
  (SUPREGID NUMBER(10, 0) NULL,
   ITEM_ID CHAR(160) NULL,
   UNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPIBPUZOBYREGION
  ADD CONSTRAINT PK_DPIBPUZOBYREGIO UNIQUE (SUPREGID);
 
ALTER TABLE INFORMIX.DPIBPUZOBYREGION
  ADD CONSTRAINT SYS_C003608 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPUZOBYREGION
  ADD CONSTRAINT SYS_C003609 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPIBPUZOBYREGION
  ADD CONSTRAINT SYS_C003610 CHECK ("UNIT" IS NOT NULL);

CREATE TABLE INFORMIX.DPNFSCODES
  (IDREC NUMBER(10, 0) NULL,
   SECTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   PARENT_ITEM_ID CHAR(160) NULL,
   ITEM_ID CHAR(160) NULL,
   UNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT PK_DPNFSCODES UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT SYS_C003603 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT SYS_C003604 CHECK ("SECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT SYS_C003605 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT SYS_C003606 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPNFSCODES
  ADD CONSTRAINT SYS_C003607 CHECK ("UNIT" IS NOT NULL);

CREATE TABLE INFORMIX.DP_PERMISSION_SETTINGS
  (ID NUMBER(19, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUBSIDIARYID NUMBER(10, 0) NULL,
   PERSONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DP_PERMISSION_SETTINGS
  ADD CONSTRAINT PK_DP_PERMISSION_SETTINGS UNIQUE (ID);
 
ALTER TABLE INFORMIX.DP_PERMISSION_SETTINGS
  ADD CONSTRAINT SYS_C003386 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DP_PERMISSION_SETTINGS
  ADD CONSTRAINT SYS_C003387 CHECK ("PERSONID" IS NOT NULL);

CREATE TABLE INFORMIX.DPREPORTBSSI
  (REPORTID NUMBER(10, 0) NULL,
   SPECHEADERID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   SUPREGNAME CHAR(320) NULL,
   REGIONID NUMBER(10, 0) NULL,
   REGNAME CHAR(320) NULL,
   IDBS NUMBER(10, 0) NULL,
   BSNUMBER NUMBER(10, 0) NULL,
   PRIORITY NUMBER(10, 0) NULL,
   TASK VARCHAR2(1020) NULL,
   VENDOR CHAR(4) NULL,
   BTS900_INDOOR_CNT NUMBER(10, 0) NULL,
   TRX900_INDOOR_CNT NUMBER(10, 0) NULL,
   BTS1800_INDOOR_CNT NUMBER(10, 0) NULL,
   TRX1800_INDOOR_CNT NUMBER(10, 0) NULL,
   BTS900_OUTDOOR_CNT NUMBER(10, 0) NULL,
   TRX900_OUTDOOR_CNT NUMBER(10, 0) NULL,
   BTS1800_OUTDOOR_CNT NUMBER(10, 0) NULL,
   TRX1800_OUTDOOR_CNT NUMBER(10, 0) NULL,
   BTS900_MICRO_CNT NUMBER(10, 0) NULL,
   TRX900_MICRO_CNT NUMBER(10, 0) NULL,
   BTS1800_MICRO_CNT NUMBER(10, 0) NULL,
   TRX1800_MICRO_CNT NUMBER(10, 0) NULL,
   POS_CAPEX1_CNT NUMBER(10, 0) NULL,
   POS_CAPEX23_CNT NUMBER(10, 0) NULL,
   POS_CAPEX25_CNT NUMBER(10, 0) NULL,
   POS_CAPEX27_CNT NUMBER(10, 0) NULL,
   POS_CAPEX29_CNT NUMBER(10, 0) NULL,
   POS_CAPEX3_CNT NUMBER(10, 0) NULL,
   POS_CAPEX4_CNT NUMBER(10, 0) NULL,
   POS_CAPEX5_CNT NUMBER(10, 0) NULL,
   POS_CAPEX6_CNT NUMBER(10, 0) NULL,
   POS_CAPEX7_CNT NUMBER(10, 0) NULL,
   POS_CAPEX8_CNT NUMBER(10, 0) NULL,
   POS_CAPEX9_CNT NUMBER(10, 0) NULL,
   POS_CAPEX16_CNT NUMBER(10, 0) NULL,
   POS_TOTAL_CNT NUMBER(10, 0) NULL,
   ANT_LOWCOST_CNT NUMBER(10, 0) NULL,
   ANT_ONEBAND_CNT NUMBER(10, 0) NULL,
   ANT_MULTIBAND_CNT NUMBER(10, 0) NULL,
   ANT_RET_CNT NUMBER(10, 0) NULL,
   CABLE_12_CNT NUMBER(10, 0) NULL,
   CABLE_78_CNT NUMBER(10, 0) NULL,
   CABLE_114_CNT NUMBER(10, 0) NULL,
   LNA900_CNT NUMBER(10, 0) NULL,
   LNA1800_CNT NUMBER(10, 0) NULL,
   LNADUAL_CNT NUMBER(10, 0) NULL,
   COMBINERS_CNT NUMBER(10, 0) NULL,
   DIPLEXERS_CNT NUMBER(10, 0) NULL,
   DUPFILTERS_CNT NUMBER(10, 0) NULL,
   SHORTAGES_CNT NUMBER(10, 0) NULL,
   SOCKETS_CNT NUMBER(10, 0) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   HSET NUMBER(6, 0) NULL,
   DISTANCEFROMBSC1 NUMBER(10, 0) NULL,
   DISTANCEFROMBSC2 NUMBER(10, 0) NULL,
   DISTANCEFROMBSC3 NUMBER(10, 0) NULL,
   DISTANCEFROMBSC NUMBER(10, 6) NULL,
   STATUS NUMBER(10, 0) NULL,
   SITEMOVING NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT PK_DPREPORTBSSI UNIQUE (REPORTID);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT CKC_SITEMOVI_DPREP CHECK (sitemoving IN (0 ,1 ));
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003786 CHECK ("ANT_RET_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003787 CHECK ("CABLE_12_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003788 CHECK ("CABLE_78_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003789 CHECK ("CABLE_114_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003790 CHECK ("LNA900_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003791 CHECK ("LNA1800_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003792 CHECK ("LNADUAL_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003793 CHECK ("COMBINERS_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003794 CHECK ("DIPLEXERS_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003795 CHECK ("DUPFILTERS_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003796 CHECK ("SHORTAGES_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003797 CHECK ("SOCKETS_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003798 CHECK ("LONGITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003799 CHECK ("LATITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003800 CHECK ("HSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003801 CHECK ("DISTANCEFROMBSC1" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003802 CHECK ("DISTANCEFROMBSC2" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003803 CHECK ("DISTANCEFROMBSC3" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003804 CHECK ("DISTANCEFROMBSC" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003805 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003806 CHECK ("SITEMOVING" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003749 CHECK ("REPORTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003750 CHECK ("SPECHEADERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003751 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003752 CHECK ("SUPREGNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003753 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003754 CHECK ("REGNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003755 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003756 CHECK ("BSNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003757 CHECK ("BTS900_INDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003758 CHECK ("TRX900_INDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003759 CHECK ("BTS1800_INDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003760 CHECK ("TRX1800_INDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003761 CHECK ("BTS900_OUTDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003762 CHECK ("TRX900_OUTDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003763 CHECK ("BTS1800_OUTDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003764 CHECK ("TRX1800_OUTDOOR_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003765 CHECK ("BTS900_MICRO_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003766 CHECK ("TRX900_MICRO_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003767 CHECK ("BTS1800_MICRO_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003768 CHECK ("TRX1800_MICRO_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003769 CHECK ("POS_CAPEX1_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003770 CHECK ("POS_CAPEX23_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003771 CHECK ("POS_CAPEX25_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003772 CHECK ("POS_CAPEX27_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003773 CHECK ("POS_CAPEX29_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003774 CHECK ("POS_CAPEX3_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003775 CHECK ("POS_CAPEX4_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003776 CHECK ("POS_CAPEX5_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003777 CHECK ("POS_CAPEX6_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003778 CHECK ("POS_CAPEX7_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003779 CHECK ("POS_CAPEX8_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003780 CHECK ("POS_CAPEX9_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003781 CHECK ("POS_CAPEX16_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003782 CHECK ("POS_TOTAL_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003783 CHECK ("ANT_LOWCOST_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003784 CHECK ("ANT_ONEBAND_CNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPREPORTBSSI
  ADD CONSTRAINT SYS_C003785 CHECK ("ANT_MULTIBAND_CNT" IS NOT NULL);

CREATE TABLE INFORMIX.DPSECTORS
  (IDSECT NUMBER(10, 0) NULL,
   IDBSBAND NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   SUFFIX CHAR(12) NULL,
   KZLIDSECT NUMBER(10, 0) NULL,
   CELLID NUMBER(10, 0) NULL,
   LAC NUMBER(10, 0) NULL,
   RAC NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   TRXCOUNT NUMBER(10, 0) NULL,
   STANDNO CHAR(80) NULL,
   STATUS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPSECTORS
  ADD CONSTRAINT PK_DPSECTORS UNIQUE (IDSECT);
 
ALTER TABLE INFORMIX.DPSECTORS
  ADD CONSTRAINT CKC_TRXCOUNT_DPSEC CHECK (trxcount > 0 );
 
ALTER TABLE INFORMIX.DPSECTORS
  ADD CONSTRAINT SYS_C003362 CHECK ("IDSECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSECTORS
  ADD CONSTRAINT SYS_C003363 CHECK ("IDBSBAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSECTORS
  ADD CONSTRAINT SYS_C003364 CHECK ("SUFFIX" IS NOT NULL);

CREATE TABLE INFORMIX.DPSECTORSTATUS
  (STATUS NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL);

ALTER TABLE INFORMIX.DPSECTORSTATUS
  ADD CONSTRAINT PK_DPSECTORSTATUS UNIQUE (STATUS);
 
ALTER TABLE INFORMIX.DPSECTORSTATUS
  ADD CONSTRAINT SYS_C006080 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSECTORSTATUS
  ADD CONSTRAINT SYS_C006081 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECBANDPOSITIONS
  (SPECBANDPOSID NUMBER(10, 0) NULL,
   SPECWORKID NUMBER(10, 0) NULL,
   SECTID NUMBER(10, 0) NULL,
   NFSITEM_ID CHAR(160) NULL,
   QTY NUMBER(15, 3) NULL,
   UNIT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   PARENT_RESOURCE NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT PK_DPSPECBANDPOSIT UNIQUE (SPECBANDPOSID);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003807 CHECK ("SPECBANDPOSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003808 CHECK ("SPECWORKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003809 CHECK ("SECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003810 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003811 CHECK ("UNIT" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDPOSITIONS
  ADD CONSTRAINT SYS_C003812 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECBANDWORKS
  (SPECBANDWORKID NUMBER(10, 0) NULL,
   SPECWORKID NUMBER(10, 0) NULL,
   IDBSBAND NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPSPECBANDWORKS
  ADD CONSTRAINT PK_DPSPECBANDWORKS UNIQUE (SPECBANDWORKID);
 
ALTER TABLE INFORMIX.DPSPECBANDWORKS
  ADD CONSTRAINT SYS_C003746 CHECK ("SPECBANDWORKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDWORKS
  ADD CONSTRAINT SYS_C003747 CHECK ("SPECWORKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECBANDWORKS
  ADD CONSTRAINT SYS_C003748 CHECK ("IDBSBAND" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECHEADER
  (SPECHEADERID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEEND DATE NULL,
   STATUS NUMBER(10, 0) NULL,
   CALCDATE DATE NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT PK_DPSPECHEADER UNIQUE (SPECHEADERID);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003549 CHECK ("CALCDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003550 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT CKC_STATUS_DPSPE CHECK (status IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003544 CHECK ("SPECHEADERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003545 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003546 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003547 CHECK ("DATEEND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECHEADER
  ADD CONSTRAINT SYS_C003548 CHECK ("STATUS" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECLOG
  (SPECLOGID NUMBER(10, 0) NULL,
   SPECHEADERID NUMBER(10, 0) NULL,
   SPECWORKID NUMBER(10, 0) NULL,
   ERRORCODE NUMBER(10, 0) NULL,
   ERRORLEVEL NUMBER(10, 0) NULL,
   ERRORMESSAGE VARCHAR2(4000) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT PK_DPSPECLOG UNIQUE (SPECLOGID);
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT CKC_ERRORLEV_DPSPE CHECK (errorlevel IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT SYS_C003741 CHECK ("SPECLOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT SYS_C003742 CHECK ("SPECHEADERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT SYS_C003743 CHECK ("ERRORCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT SYS_C003744 CHECK ("ERRORLEVEL" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECLOG
  ADD CONSTRAINT SYS_C003745 CHECK ("ERRORMESSAGE" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECPOSITIONS
  (SPECPOSID NUMBER(10, 0) NULL,
   SPECWORKID NUMBER(10, 0) NULL,
   SECTID NUMBER(10, 0) NULL,
   NFSITEM_ID CHAR(160) NULL,
   QTY NUMBER(15, 3) NULL,
   UNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT PK_DPSPECPOSITIONS UNIQUE (SPECPOSID);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003735 CHECK ("SPECPOSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003736 CHECK ("SPECWORKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003737 CHECK ("SECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003738 CHECK ("NFSITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003739 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECPOSITIONS
  ADD CONSTRAINT SYS_C003740 CHECK ("UNIT" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECSECTION
  (SECTID NUMBER(10, 0) NULL,
   SECTNAME CHAR(320) NULL);

ALTER TABLE INFORMIX.DPSPECSECTION
  ADD CONSTRAINT PK_DPSPECSECTION UNIQUE (SECTID);
 
ALTER TABLE INFORMIX.DPSPECSECTION
  ADD CONSTRAINT SYS_C003316 CHECK ("SECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECSECTION
  ADD CONSTRAINT SYS_C003317 CHECK ("SECTNAME" IS NOT NULL);

CREATE TABLE INFORMIX.DPSPECWORKS
  (SPECWORKID NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   SPECHEADERID NUMBER(10, 0) NULL,
   OBJECTCODE CHAR(80) NULL,
   OBJECTNAME CHAR(320) NULL,
   NFSFILIAL CHAR(160) NULL,
   STARTBUILDDATE DATE NULL,
   OBJECTTYPE CHAR(120) NULL,
   RESERV VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT PK_DPSPECWORKS UNIQUE (SPECWORKID);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003728 CHECK ("SPECWORKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003729 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003730 CHECK ("SPECHEADERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003731 CHECK ("OBJECTCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003732 CHECK ("OBJECTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003733 CHECK ("NFSFILIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPSPECWORKS
  ADD CONSTRAINT SYS_C003734 CHECK ("OBJECTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.DPTNCONN2NRICONN
  (TNCONNID NUMBER(10, 0) NULL,
   NRICONNID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPTNCONN2NRICONN
  ADD CONSTRAINT PK_DPTNCONN2NRICON UNIQUE (TNCONNID);
 
ALTER TABLE INFORMIX.DPTNCONN2NRICONN
  ADD CONSTRAINT SYS_C003511 CHECK ("TNCONNID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPTNCONN2NRICONN
  ADD CONSTRAINT SYS_C003512 CHECK ("NRICONNID" IS NOT NULL);

CREATE TABLE INFORMIX.DPTNREGIONS2REGIONS
  (TNREGIONID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPTNREGIONS2REGIONS
  ADD CONSTRAINT PK_DPTNREGIONS2REG UNIQUE (TNREGIONID, REGIONID);
 
ALTER TABLE INFORMIX.DPTNREGIONS2REGIONS
  ADD CONSTRAINT SYS_C003509 CHECK ("TNREGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPTNREGIONS2REGIONS
  ADD CONSTRAINT SYS_C003510 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.DPTRANSPORTCONNECTIONTYPES
  (ID NUMBER(10, 0) NULL,
   VALUE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.DPTRANSPORTCONNECTIONTYPES
  ADD CONSTRAINT PK_DPTRANSPORTCONN UNIQUE (ID);
 
ALTER TABLE INFORMIX.DPTRANSPORTCONNECTIONTYPES
  ADD CONSTRAINT SYS_C003480 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPTRANSPORTCONNECTIONTYPES
  ADD CONSTRAINT SYS_C003481 CHECK ("VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.DPVARIABLES
  (VARIABLEID CHAR(80) NULL,
   DESCRIPTION VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.DPVARIABLES
  ADD CONSTRAINT PK_DPVARIABLES UNIQUE (VARIABLEID);
 
ALTER TABLE INFORMIX.DPVARIABLES
  ADD CONSTRAINT SYS_C003597 CHECK ("VARIABLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPVARIABLES
  ADD CONSTRAINT SYS_C003598 CHECK ("DESCRIPTION" IS NOT NULL);

CREATE TABLE INFORMIX.DPVARIABLEVALUES
  (SPECHEADERID NUMBER(10, 0) NULL,
   VARIABLEID CHAR(80) NULL,
   IDBSBAND NUMBER(10, 0) NULL,
   VALUE NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.DPVARIABLEVALUES
  ADD CONSTRAINT PK_DPVARIABLEVALUE UNIQUE (SPECHEADERID, VARIABLEID, IDBSBAND);
 
ALTER TABLE INFORMIX.DPVARIABLEVALUES
  ADD CONSTRAINT SYS_C003599 CHECK ("SPECHEADERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPVARIABLEVALUES
  ADD CONSTRAINT SYS_C003600 CHECK ("VARIABLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPVARIABLEVALUES
  ADD CONSTRAINT SYS_C003601 CHECK ("IDBSBAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPVARIABLEVALUES
  ADD CONSTRAINT SYS_C003602 CHECK ("VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.DP_VISA_LIST
  (ID NUMBER(19, 0) NULL,
   PLANID NUMBER(10, 0) NULL,
   VISAPROCESSID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.DP_VISA_LIST
  ADD CONSTRAINT PK_DP_VISA_LIST UNIQUE (ID);
 
ALTER TABLE INFORMIX.DP_VISA_LIST
  ADD CONSTRAINT SYS_C003383 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DP_VISA_LIST
  ADD CONSTRAINT SYS_C003384 CHECK ("PLANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.DP_VISA_LIST
  ADD CONSTRAINT SYS_C003385 CHECK ("VISAPROCESSID" IS NOT NULL);

CREATE TABLE INFORMIX.DPWORKS
  (IDWORK NUMBER(10, 0) NULL,
   DEVPLAN NUMBER(10, 0) NULL,
   WORKTYPE NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   MANUFACTURER NUMBER(10, 0) NULL,
   WORKSTATUS NUMBER(10, 0) NULL,
   WORKVERSIONSOURCE NUMBER(10, 0) NULL,
   VERSIONSTATUS NUMBER(10, 0) NULL,
   ACTIVESTATUS NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   PREVIOUSIDWORK NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   WORKVERSIONSETID NUMBER(10, 0) NULL,
   COMMENTOBJECTID NUMBER(19, 0) NULL);

ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT PK_DPWORKS UNIQUE (IDWORK);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT CKC_ACTIVEST_DPWOR CHECK (activestatus IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT CKC_WORKSTAT_DPWOR CHECK (workstatus IN (0 ,1 ,2 ));
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT CKC_WORKTYPE_DPWOR CHECK (worktype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT CKC_VERSIONS_DPWOR CHECK (versionstatus IN (1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ));
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT CKC_WORKVERS_DPWOR CHECK (workversionsource IN (1 ,2 ));
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003318 CHECK ("IDWORK" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003319 CHECK ("DEVPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003320 CHECK ("WORKTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003321 CHECK ("NETZONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003322 CHECK ("MANUFACTURER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003323 CHECK ("WORKSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003324 CHECK ("WORKVERSIONSOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003325 CHECK ("ACTIVESTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003326 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003327 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003328 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003329 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003330 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS
  ADD CONSTRAINT SYS_C003331 CHECK ("WORKVERSIONSETID" IS NOT NULL);

CREATE TABLE INFORMIX.DPWORKS2
  (IDWORK NUMBER(10, 0) NULL,
   DEVPLAN NUMBER(10, 0) NULL,
   WORKTYPE NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   MANUFACTURER NUMBER(10, 0) NULL,
   WORKSTATUS NUMBER(10, 0) NULL,
   WORKVERSIONSOURCE NUMBER(10, 0) NULL,
   VERSIONSTATUS NUMBER(10, 0) NULL,
   ACTIVESTATUS NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   PREVIOUSIDWORK NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   WORKVERSIONSETID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT PK_DPWORKS2 UNIQUE (IDWORK);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003436 CHECK ("IDWORK" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003437 CHECK ("DEVPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003438 CHECK ("WORKTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003439 CHECK ("NETZONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003440 CHECK ("MANUFACTURER" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003441 CHECK ("WORKSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003442 CHECK ("WORKVERSIONSOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003443 CHECK ("VERSIONSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003444 CHECK ("ACTIVESTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003445 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003446 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003447 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003448 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003449 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.DPWORKS2
  ADD CONSTRAINT SYS_C003450 CHECK ("WORKVERSIONSETID" IS NOT NULL);

CREATE TABLE INFORMIX.D_TEMP
  (DEPID NUMBER(10, 0) NULL,
   INFID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.DUAL
  (RVALUE CHAR(1020) NULL);

CREATE TABLE INFORMIX.DUAL2
  (QUERY_ID NUMBER(10, 0) NULL,
   SVALUE CHAR(1020) NULL);
 
ALTER TABLE INFORMIX.DUAL2
  ADD CONSTRAINT SYS_C004655 CHECK ("QUERY_ID" IS NOT NULL);

CREATE TABLE INFORMIX.DUMMY
  (I NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.EMC
  (EMCID NUMBER(10, 0) NULL,
   EMCNUMBER NUMBER(10, 0) NULL,
   EMCDATE CHAR(80) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   EMCTXENDA FLOAT(126) NULL,
   EMCPTXENDA FLOAT(126) NULL,
   EMCANTENNAENDA FLOAT(126) NULL,
   EMCHEIGHTENDA FLOAT(126) NULL,
   POSITION_ENDB NUMBER(10, 0) NULL,
   EMCTXENDB FLOAT(126) NULL,
   EMCPTXENDB FLOAT(126) NULL,
   EMCANTENNAENDB FLOAT(126) NULL,
   EMCHEIGHTENDB FLOAT(126) NULL);

ALTER TABLE INFORMIX.EMC
  ADD CONSTRAINT PK_EMC UNIQUE (EMCID);
 
ALTER TABLE INFORMIX.EMC
  ADD CONSTRAINT SYS_C004189 CHECK ("EMCID" IS NOT NULL);

CREATE TABLE INFORMIX.EMC_HOPS
  (EMCID NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   DATEREG DATE NULL,
   NUMBER_EMC CHAR(512) NULL,
   TYPE_EMC CHAR(512) NULL,
   DATEFINISH DATE NULL,
   COMMENT_ CHAR(512) NULL);

ALTER TABLE INFORMIX.EMC_HOPS
  ADD CONSTRAINT U273_1093 UNIQUE (EMCID);
 
ALTER TABLE INFORMIX.EMC_HOPS
  ADD CONSTRAINT SYS_C004612 CHECK ("EMCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EMC_HOPS
  ADD CONSTRAINT SYS_C004613 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.EQADDCOMPLECTS
  (MASTERRESOURCE NUMBER(10, 0) NULL,
   RESOURCESET NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQADDCOMPLECTS
  ADD CONSTRAINT PK_EQADDCOMPLECTS UNIQUE (MASTERRESOURCE, RESOURCESET);
 
ALTER TABLE INFORMIX.EQADDCOMPLECTS
  ADD CONSTRAINT SYS_C003719 CHECK ("MASTERRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQADDCOMPLECTS
  ADD CONSTRAINT SYS_C003720 CHECK ("RESOURCESET" IS NOT NULL);

CREATE TABLE INFORMIX.EQADDEQUIPMENT
  (MASTERRESOURCE NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   FORMULA VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.EQADDEQUIPMENT
  ADD CONSTRAINT PK_EQADDEQUIPMENT UNIQUE (MASTERRESOURCE, RESOURCE_);
 
ALTER TABLE INFORMIX.EQADDEQUIPMENT
  ADD CONSTRAINT SYS_C003507 CHECK ("MASTERRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQADDEQUIPMENT
  ADD CONSTRAINT SYS_C003508 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.EQALGORITHMS
  (ALGORITHMID NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   EQTYPEMETHOD NUMBER(10, 0) NULL,
   EQTYPEPROCLOCATION CHAR(1200) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   EQCALCMETHOD NUMBER(10, 0) NULL,
   EQUIPCOUNT NUMBER(15, 3) NULL,
   EQUIPFORMULA CHAR(800) NULL,
   ROUNDTYPE NUMBER(10, 0) NULL,
   EQCALCPROCLOCATION CHAR(1200) NULL);

ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT PK_EQALGORITHMS UNIQUE (ALGORITHMID);
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT CKC_EQTYPEME_EQALG CHECK (eqtypemethod IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT CKC_EQCALCME_EQALG CHECK (eqcalcmethod IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT CKC_ROUNDTYP_EQALG CHECK ((roundtype IS NULL ) OR (roundtype IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT SYS_C003430 CHECK ("ALGORITHMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT SYS_C003431 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT SYS_C003432 CHECK ("EQTYPEMETHOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQALGORITHMS
  ADD CONSTRAINT SYS_C003433 CHECK ("EQCALCMETHOD" IS NOT NULL);

CREATE TABLE INFORMIX.EQCLASSIFICATION
  (CLASSIFICATIONID NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   LEVEL1 NUMBER(10, 0) NULL,
   LEVEL2 NUMBER(10, 0) NULL,
   LEVEL3 NUMBER(10, 0) NULL,
   LEVEL4 NUMBER(10, 0) NULL,
   LEVEL5 NUMBER(10, 0) NULL,
   LEVEL6 NUMBER(10, 0) NULL,
   LEVEL7 NUMBER(10, 0) NULL,
   LEVEL8 NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(2400) NULL,
   CALCORDER NUMBER(10, 0) NULL,
   ACTIVE CHAR(4) NULL);

ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT PK_EQCLASSIFICATIO UNIQUE (CLASSIFICATIONID);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT CKC_ACTIVE_EQCLA CHECK (active IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT SYS_C003476 CHECK ("CLASSIFICATIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT SYS_C003477 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT SYS_C003478 CHECK ("LEVEL1" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION
  ADD CONSTRAINT SYS_C003479 CHECK ("ACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.EQCLASSIFICATION2ALGORITHM
  (CLASSIFICATIONID NUMBER(10, 0) NULL,
   ALGORITHMID NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQCLASSIFICATION2ALGORITHM
  ADD CONSTRAINT PK_EQCLASS2ALG UNIQUE (CLASSIFICATIONID, ALGORITHMID);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION2ALGORITHM
  ADD CONSTRAINT CKC_DATASOUR_EQCLA CHECK ((datasource IS NULL ) OR (datasource IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.EQCLASSIFICATION2ALGORITHM
  ADD CONSTRAINT SYS_C003434 CHECK ("CLASSIFICATIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQCLASSIFICATION2ALGORITHM
  ADD CONSTRAINT SYS_C003435 CHECK ("ALGORITHMID" IS NOT NULL);

CREATE TABLE INFORMIX.EQEQUIPFORECASTBAND
  (CLASSID NUMBER(10, 0) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   BAND900 CHAR(4) NULL,
   BAND1800 CHAR(4) NULL,
   BAND2000 CHAR(4) NULL,
   PERCENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT PK_EQEQUIPFOREBD UNIQUE (CLASSID, FINCATEGID, BAND900, BAND1800, BAND2000);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT CKC_BAND900_EQEQU CHECK (band900 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT CKC_BAND1800_EQEQU CHECK (band1800 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT CKC_BAND2000_EQEQU CHECK (band2000 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003501 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003502 CHECK ("FINCATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003503 CHECK ("BAND900" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003504 CHECK ("BAND1800" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003505 CHECK ("BAND2000" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTBAND
  ADD CONSTRAINT SYS_C003506 CHECK ("PERCENT" IS NOT NULL);

CREATE TABLE INFORMIX.EQEQUIPFORECASTFEEDER
  (CLASSID NUMBER(10, 0) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   FEEDER114 NUMBER(10, 0) NULL,
   FEEDER12 NUMBER(10, 0) NULL,
   FEEDER78 NUMBER(10, 0) NULL,
   LENGTHFEEDER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQEQUIPFORECASTFEEDER
  ADD CONSTRAINT PK_EQEQUIPFOREFD UNIQUE (CLASSID, FINCATEGID);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTFEEDER
  ADD CONSTRAINT SYS_C003499 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQEQUIPFORECASTFEEDER
  ADD CONSTRAINT SYS_C003500 CHECK ("FINCATEGID" IS NOT NULL);

CREATE TABLE INFORMIX.EQFORECASTFEEDER
  (FINCATEGID NUMBER(10, 0) NULL,
   FEEDER114 NUMBER(10, 0) NULL,
   FEEDER12 NUMBER(10, 0) NULL,
   FEEDER78 NUMBER(10, 0) NULL,
   LENGTHFEEDER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQFORECASTFEEDER
  ADD CONSTRAINT PK_EQFORECASTFEEDE UNIQUE (FINCATEGID);
 
ALTER TABLE INFORMIX.EQFORECASTFEEDER
  ADD CONSTRAINT SYS_C003475 CHECK ("FINCATEGID" IS NOT NULL);

CREATE TABLE INFORMIX.EQOBJSECTORSLINKSETUP
  (CLASSID NUMBER(10, 0) NULL,
   SECTORSLINK CHAR(4) NULL);

ALTER TABLE INFORMIX.EQOBJSECTORSLINKSETUP
  ADD CONSTRAINT PK_EQOBJSECTORSLIN UNIQUE (CLASSID);
 
ALTER TABLE INFORMIX.EQOBJSECTORSLINKSETUP
  ADD CONSTRAINT CKC_SECTORSL_EQOBJ CHECK (sectorslink IN ('N' ,'O' ,'9' ,'T' ));
 
ALTER TABLE INFORMIX.EQOBJSECTORSLINKSETUP
  ADD CONSTRAINT SYS_C003469 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQOBJSECTORSLINKSETUP
  ADD CONSTRAINT SYS_C003470 CHECK ("SECTORSLINK" IS NOT NULL);

CREATE TABLE INFORMIX.EQPLIC
  (EQUIPMENT NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   VALUE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.EQPOSSTATE
  (EQUIPMENT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   STATEOLD CHAR(4) NULL,
   STATENEW CHAR(4) NULL);

ALTER TABLE INFORMIX.EQPOSSTATE
  ADD CONSTRAINT U644_2675 UNIQUE (EQUIPMENT);

CREATE TABLE INFORMIX.EQUIPLOGICTYPES
  (LOGICTYPEID NUMBER(10, 0) NULL,
   EQUIPTYPE CHAR(4) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.EQUIPLOGICTYPES
  ADD CONSTRAINT PK_EQUIPLOGICTYPES UNIQUE (LOGICTYPEID);
 
ALTER TABLE INFORMIX.EQUIPLOGICTYPES
  ADD CONSTRAINT CKC_EQUIPTYP_EQUIP CHECK (equiptype IN ('B' ,'C' ,'O' ,'W' ,'R' ,'L' ,'D' ,'M' ));
 
ALTER TABLE INFORMIX.EQUIPLOGICTYPES
  ADD CONSTRAINT SYS_C005339 CHECK ("LOGICTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPLOGICTYPES
  ADD CONSTRAINT SYS_C005340 CHECK ("EQUIPTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPLOGICTYPES
  ADD CONSTRAINT SYS_C005341 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMANUFACTURERS
  (MANUFID NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   SHORTNAME CHAR(200) NULL,
   EQUIPCATALOG CHAR(800) NULL,
   OFFICIALSITE VARCHAR2(1020) NULL,
   COMMENT_ VARCHAR2(2400) NULL);

ALTER TABLE INFORMIX.EQUIPMANUFACTURERS
  ADD CONSTRAINT PK_EQUIPMANUFACTUR UNIQUE (MANUFID);
 
ALTER TABLE INFORMIX.EQUIPMANUFACTURERS
  ADD CONSTRAINT SYS_C003677 CHECK ("MANUFID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMANUFACTURERS
  ADD CONSTRAINT SYS_C003678 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMANUFACTURERS
  ADD CONSTRAINT SYS_C003679 CHECK ("SHORTNAME" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMENT
  (EQUIPMENT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   PWR_VAL NUMBER(4, 2) NULL,
   PWR_CAT CHAR(4) NULL,
   PWR_RESERVE CHAR(4) NULL,
   PWR_RES_CAT CHAR(4) NULL,
   DATE_BLDBEG DATE NULL,
   DATE_ASSEMB DATE NULL,
   DATE_TEST DATE NULL,
   DATE_PR DATE NULL,
   EQUIPCOMMENT CHAR(2000) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   LOGICTYPEID NUMBER(10, 0) NULL,
   MANUFID NUMBER(10, 0) NULL,
   APARTMENTID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT PK_EQUIPMENT UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT CKC_PWR_RESE_EQUIP CHECK ((pwr_reserve IS NULL ) OR (pwr_reserve IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT CKC_DATASOUR_EQUIP CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT CKC_STATE_EQUIP CHECK (state IN ('P' ,'M' ,'W' ,'D' ));
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT SYS_C005679 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT SYS_C005680 CHECK ("POSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT SYS_C005681 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENT
  ADD CONSTRAINT SYS_C005682 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMENTDATALOADS
  (DATALOADID NUMBER(10, 0) NULL,
   PLMN NUMBER(10, 0) NULL,
   DATALOADDATE DATE NULL);

ALTER TABLE INFORMIX.EQUIPMENTDATALOADS
  ADD CONSTRAINT PK_EQUIPMENTDATALO UNIQUE (DATALOADID);
 
ALTER TABLE INFORMIX.EQUIPMENTDATALOADS
  ADD CONSTRAINT SYS_C005197 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTDATALOADS
  ADD CONSTRAINT SYS_C005198 CHECK ("PLMN" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  (EQUIPMENT NUMBER(10, 0) NULL,
   TYPEEQP NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LAT NUMBER(12, 8) NULL,
   LON NUMBER(12, 8) NULL,
   LINKEDPOSNUMBER NUMBER(10, 0) NULL,
   LINKEDPOSNAME VARCHAR2(1020) NULL,
   LINKEDPOSADDRESS VARCHAR2(1020) NULL,
   NOTES VARCHAR2(1020) NULL,
   STATUS NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   MSCCAPACITY NUMBER(10, 0) NULL,
   SERVTYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT PK_EQUIPMENTMISSIN UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT CKC_TYPEEQP_EQUIP CHECK (typeeqp IN (1 ,2 ,3 ,4 ,5 ,6 ));
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT CKC_FTYPE_EQUIP CHECK (ftype IN (900 ,1800 ,0 ));
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT CKC_STATUS_EQUIP CHECK (status IN (0 ,1 ));
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005305 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005306 CHECK ("TYPEEQP" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005307 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005308 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005309 CHECK ("ADDRESS" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005310 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTMISSINGPERMIT
  ADD CONSTRAINT SYS_C005311 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMENTNEW
  (EQUIPMENT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   PWR_VAL NUMBER(4, 2) NULL,
   PWR_CAT CHAR(200) NULL,
   PWR_RESERVE CHAR(4) NULL,
   PWR_RES_CAT CHAR(200) NULL,
   DATE_BLDBEG DATE NULL,
   DATE_ASSEMB DATE NULL,
   DATE_TEST DATE NULL,
   DATE_PR DATE NULL,
   EQUIPCOMMENT CHAR(2000) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   LOGICTYPEID NUMBER(10, 0) NULL,
   MANUFID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT PK_EQUIPMENTN UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT CKC_PWR_RESE_EQUIPN CHECK ((pwr_reserve IS NULL ) OR (pwr_reserve IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT CKC_STATE_EQUIPN CHECK (state IN ('P' ,'M' ,'R' ,'T' ,'W' ,'D' ));
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT CKC_DATASOUR_EQUIPN CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT SYS_C005485 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT SYS_C005486 CHECK ("POSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT SYS_C005487 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTNEW
  ADD CONSTRAINT SYS_C005488 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPMENTOLD
  (EQUIPMENT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   PWR_VAL NUMBER(4, 2) NULL,
   PWR_CAT CHAR(200) NULL,
   PWR_RESERVE CHAR(4) NULL,
   PWR_RES_CAT CHAR(200) NULL,
   DATE_BLDBEG DATE NULL,
   DATE_ASSEMB DATE NULL,
   DATE_TEST DATE NULL,
   DATE_PR DATE NULL,
   EQUIPCOMMENT VARCHAR2(1020) NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT PK_EQUIPMENT1 UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT CKC_PWR_RESE_EQUIP1 CHECK ((pwr_reserve IS NULL ) OR (pwr_reserve IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT CKC_STATE_EQUIP1 CHECK (state IN ('P' ,'M' ,'R' ,'T' ,'W' ,'D' ));
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT CKC_DATASOUR_EQUIP1 CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT SYS_C005702 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT SYS_C005703 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT SYS_C005700 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPMENTOLD
  ADD CONSTRAINT SYS_C005701 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPOBJCFG2SECTORS
  (OBJCFGID NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPOBJCFG2SECTORS
  ADD CONSTRAINT PK_EQUIPOBJCFG2SEC UNIQUE (OBJCFGID, ID_SECT);
 
ALTER TABLE INFORMIX.EQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003467 CHECK ("OBJCFGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPOBJCFG2SECTORS
  ADD CONSTRAINT SYS_C003468 CHECK ("ID_SECT" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPOBJECTSCFG
  (OBJCFGID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   PARENTOBJCFGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPOBJECTSCFG
  ADD CONSTRAINT PK_EQUIPOBJECTSCFG UNIQUE (OBJCFGID);
 
ALTER TABLE INFORMIX.EQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005844 CHECK ("OBJCFGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005845 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005846 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.EQUIPOBJECTSCFG
  ADD CONSTRAINT SYS_C005847 CHECK ("QTY" IS NOT NULL);

CREATE TABLE INFORMIX.EQUIPOBJRESCLASSDISABLE
  (CLASSID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EQUIPOBJRESCLASSDISABLE
  ADD CONSTRAINT PK_EQUIPOBJRESCLAS UNIQUE (CLASSID);
 
ALTER TABLE INFORMIX.EQUIPOBJRESCLASSDISABLE
  ADD CONSTRAINT SYS_C003429 CHECK ("CLASSID" IS NOT NULL);

CREATE TABLE INFORMIX.ERICRES2NRIRES
  (PRODUCTID CHAR(320) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ERICRES2NRIRES
  ADD CONSTRAINT PK_ERICRES2NRIRES UNIQUE (PRODUCTID);
 
ALTER TABLE INFORMIX.ERICRES2NRIRES
  ADD CONSTRAINT SYS_C005164 CHECK ("PRODUCTID" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONBSC
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   BSCNAME CHAR(320) NULL,
   BSCTYPE CHAR(320) NULL,
   BSCVER CHAR(320) NULL);

ALTER TABLE INFORMIX.ERICSSONBSC
  ADD CONSTRAINT PK_ERICSSONBSC UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONBSC
  ADD CONSTRAINT SYS_C005142 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONBSC
  ADD CONSTRAINT SYS_C005143 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONBSC
  ADD CONSTRAINT SYS_C005144 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONMRU
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL,
   PRODUCTID CHAR(320) NULL,
   RUSERIALNO CHAR(320) NULL,
   RUREVISION CHAR(320) NULL,
   RUPOSITION CHAR(320) NULL);

ALTER TABLE INFORMIX.ERICSSONMRU
  ADD CONSTRAINT PK_ERICSSONMRU UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONMRU
  ADD CONSTRAINT SYS_C005157 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONMRU
  ADD CONSTRAINT SYS_C005158 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONMRU
  ADD CONSTRAINT SYS_C005159 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONRU1
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL,
   PRODUCTID CHAR(320) NULL,
   RUSERIALNO CHAR(320) NULL,
   RUREVISION CHAR(320) NULL,
   RUPOSITION CHAR(320) NULL);

ALTER TABLE INFORMIX.ERICSSONRU1
  ADD CONSTRAINT PK_ERICSSONRU1 UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONRU1
  ADD CONSTRAINT SYS_C005148 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONRU1
  ADD CONSTRAINT SYS_C005149 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONRU1
  ADD CONSTRAINT SYS_C005150 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONRU2
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL,
   PRODUCTID CHAR(320) NULL,
   RUSERIALNO CHAR(320) NULL,
   RUREVISION CHAR(320) NULL,
   RUPOSITION CHAR(320) NULL);

ALTER TABLE INFORMIX.ERICSSONRU2
  ADD CONSTRAINT PK_ERICSSONRU2 UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONRU2
  ADD CONSTRAINT SYS_C005154 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONRU2
  ADD CONSTRAINT SYS_C005155 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONRU2
  ADD CONSTRAINT SYS_C005156 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONSITES
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL,
   SITENAME CHAR(320) NULL);

ALTER TABLE INFORMIX.ERICSSONSITES
  ADD CONSTRAINT PK_ERICSSONSITES UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONSITES
  ADD CONSTRAINT SYS_C005145 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONSITES
  ADD CONSTRAINT SYS_C005146 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONSITES
  ADD CONSTRAINT SYS_C005147 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONTG12
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ERICSSONTG12
  ADD CONSTRAINT PK_ERICSSONTG12 UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONTG12
  ADD CONSTRAINT SYS_C005151 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONTG12
  ADD CONSTRAINT SYS_C005152 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONTG12
  ADD CONSTRAINT SYS_C005153 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERICSSONTRX12
  (DATALOADID NUMBER(10, 0) NULL,
   BPSET NUMBER(10, 0) NULL,
   BPKEY NUMBER(10, 0) NULL,
   PARENT NUMBER(10, 0) NULL,
   CELL CHAR(320) NULL,
   GSMID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ERICSSONTRX12
  ADD CONSTRAINT PK_ERICSSONTRX12 UNIQUE (DATALOADID, BPSET, BPKEY);
 
ALTER TABLE INFORMIX.ERICSSONTRX12
  ADD CONSTRAINT SYS_C005160 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONTRX12
  ADD CONSTRAINT SYS_C005161 CHECK ("BPSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.ERICSSONTRX12
  ADD CONSTRAINT SYS_C005162 CHECK ("BPKEY" IS NOT NULL);

CREATE TABLE INFORMIX.ERR1
  (DOC NUMBER(10, 0) NULL,
   FROMTO NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.ETAPDOCS
  (SITEDOC NUMBER(10, 0) NULL,
   ETAPTYPEID NUMBER(10, 0) NULL,
   FREQPERMID NUMBER(10, 0) NULL,
   HAVEPAY CHAR(4) NULL,
   EQUIPLINK CHAR(4) NULL);

ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT PK_ETAPDOCS UNIQUE (SITEDOC);
 
ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT CKC_HAVEPAY_ETAPD CHECK ((havepay IS NULL ) OR (havepay IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT CKC_EQUIPLIN_ETAPD CHECK ((equiplink IS NULL ) OR (equiplink IN ('A' ,'B' )) );
 
ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT SYS_C004726 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT SYS_C004727 CHECK ("ETAPTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPDOCS
  ADD CONSTRAINT SYS_C004728 CHECK ("FREQPERMID" IS NOT NULL);

CREATE TABLE INFORMIX.ETAPTYPE
  (ETAPTYPEID NUMBER(10, 0) NULL,
   ETTYPENAME CHAR(320) NULL,
   HAVEENDTIME CHAR(4) NULL,
   HAVEHOPSLINK CHAR(4) NULL,
   HAVEPAYCHECK CHAR(4) NULL);

ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT PK_ETAPTYPE UNIQUE (ETAPTYPEID);
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT CKC_HAVEENDT_ETAPT CHECK (haveendtime IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT CKC_HAVEHOPS_ETAPT CHECK (havehopslink IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT CKC_HAVEPAYC_ETAPT CHECK (havepaycheck IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT SYS_C004694 CHECK ("ETAPTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT SYS_C004695 CHECK ("ETTYPENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT SYS_C004696 CHECK ("HAVEENDTIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT SYS_C004697 CHECK ("HAVEHOPSLINK" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAPTYPE
  ADD CONSTRAINT SYS_C004698 CHECK ("HAVEPAYCHECK" IS NOT NULL);

CREATE TABLE INFORMIX.ETAP2HOPS
  (SITEDOC NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   FREQPERMID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ETAP2HOPS
  ADD CONSTRAINT PK_ETAP2HOPS UNIQUE (SITEDOC, HOPSID);
 
ALTER TABLE INFORMIX.ETAP2HOPS
  ADD CONSTRAINT SYS_C004729 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAP2HOPS
  ADD CONSTRAINT SYS_C004730 CHECK ("HOPSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ETAP2HOPS
  ADD CONSTRAINT SYS_C004731 CHECK ("FREQPERMID" IS NOT NULL);

CREATE TABLE INFORMIX.EXPEDITION
  (EXPEDITION NUMBER(10, 0) NULL,
   EXPEDITOR NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.EXPEDITION
  ADD CONSTRAINT PK_EXPEDITION UNIQUE (EXPEDITION);
 
ALTER TABLE INFORMIX.EXPEDITION
  ADD CONSTRAINT SYS_C004294 CHECK ("EXPEDITION" IS NOT NULL);

CREATE TABLE INFORMIX.FAULTREPORT
  (DOCUMENT NUMBER(10, 0) NULL,
   VIVISION NUMBER(10, 0) NULL,
   TECHSTUFF NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   EQPLACE CHAR(4) NULL,
   OLDAGREGATE NUMBER(10, 0) NULL,
   OLDSERIAL CHAR(80) NULL,
   NEWSERIAL CHAR(80) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   STORAGECARDFROM NUMBER(10, 0) NULL,
   AGREGATESERIAL CHAR(80) NULL,
   STORAGECARDNEW NUMBER(10, 0) NULL,
   AGREGATERESOURCE NUMBER(10, 0) NULL,
   OLDRESOURCE NUMBER(10, 0) NULL,
   NEWRESOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT PK_FAULTREPORT UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT CKC_EQPLACE_FAULT CHECK (eqplace IN ('S' ,'P' ,'W' ));
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT SYS_C004284 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT SYS_C004285 CHECK ("VIVISION" IS NOT NULL);
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT SYS_C004286 CHECK ("TECHSTUFF" IS NOT NULL);
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT SYS_C004287 CHECK ("EQPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.FAULTREPORT
  ADD CONSTRAINT SYS_C004288 CHECK ("OLDSERIAL" IS NOT NULL);

CREATE TABLE INFORMIX.FEDERALAREAS
  (AREAID NUMBER(10, 0) NULL,
   AREANAME CHAR(320) NULL,
   COUNTRY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.FEDERALAREAS
  ADD CONSTRAINT PK_FEDRALAREAS UNIQUE (AREAID);
 
ALTER TABLE INFORMIX.FEDERALAREAS
  ADD CONSTRAINT SYS_C003712 CHECK ("AREAID" IS NOT NULL);
 
ALTER TABLE INFORMIX.FEDERALAREAS
  ADD CONSTRAINT SYS_C003713 CHECK ("AREANAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.FEDERALAREAS
  ADD CONSTRAINT SYS_C003714 CHECK ("COUNTRY" IS NOT NULL);

CREATE TABLE INFORMIX.FILIALTYPE
  (FILIALTYPE NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL);

ALTER TABLE INFORMIX.FILIALTYPE
  ADD CONSTRAINT PK_FILIALTYPE UNIQUE (FILIALTYPE);
 
ALTER TABLE INFORMIX.FILIALTYPE
  ADD CONSTRAINT SYS_C003618 CHECK ("FILIALTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.FILIALTYPE
  ADD CONSTRAINT SYS_C003619 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.FINANCECATEGORIES
  (FINCATEGID NUMBER(10, 0) NULL,
   FINCATEGNAME CHAR(320) NULL);

ALTER TABLE INFORMIX.FINANCECATEGORIES
  ADD CONSTRAINT PK_FINANCECATEGORI UNIQUE (FINCATEGID);
 
ALTER TABLE INFORMIX.FINANCECATEGORIES
  ADD CONSTRAINT SYS_C005609 CHECK ("FINCATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.FINANCECATEGORIES
  ADD CONSTRAINT SYS_C005610 CHECK ("FINCATEGNAME" IS NOT NULL);

CREATE TABLE INFORMIX.FREQPERMISSIONS
  (FREQPERMID NUMBER(10, 0) NULL,
   FILENUMBER NUMBER(10, 0) NULL,
   ETAP CHAR(80) NULL,
   COMMENT_ VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.FREQPERMISSIONS
  ADD CONSTRAINT PK_FREQPERMISSIONS UNIQUE (FREQPERMID);
 
ALTER TABLE INFORMIX.FREQPERMISSIONS
  ADD CONSTRAINT SYS_C004723 CHECK ("FREQPERMID" IS NOT NULL);

CREATE TABLE INFORMIX.GEOSYSTEM
  (ID NUMBER(10, 0) NULL,
   ALIAS VARCHAR2(8) NULL,
   NAME VARCHAR2(256) NULL);

ALTER TABLE INFORMIX.GEOSYSTEM
  ADD CONSTRAINT PK_GEOSYSTEM UNIQUE (ID);
 
ALTER TABLE INFORMIX.GEOSYSTEM
  ADD CONSTRAINT SYS_C003821 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.GEOSYSTEM
  ADD CONSTRAINT SYS_C003822 CHECK ("ALIAS" IS NOT NULL);
 
ALTER TABLE INFORMIX.GEOSYSTEM
  ADD CONSTRAINT SYS_C003823 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.GKRCHDOCS
  (SITEDOC NUMBER(10, 0) NULL,
   RESTRICTIONS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.GKRCHDOCS
  ADD CONSTRAINT PK_GKRCHDOCS UNIQUE (SITEDOC);
 
ALTER TABLE INFORMIX.GKRCHDOCS
  ADD CONSTRAINT SYS_C004684 CHECK ("SITEDOC" IS NOT NULL);

CREATE TABLE INFORMIX.GLCHANT2NRI
  (DIAGRAM VARCHAR2(480) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   NOTES VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.GLCHANT2NRI
  ADD CONSTRAINT PK_GLCHANT2NRI UNIQUE (DIAGRAM);
 
ALTER TABLE INFORMIX.GLCHANT2NRI
  ADD CONSTRAINT SYS_C004937 CHECK ("DIAGRAM" IS NOT NULL);

CREATE TABLE INFORMIX.GLCHBASESTATIONS
  (G_CI NUMBER(10, 0) NULL,
   G_REPEATER NUMBER(5, 0) NULL,
   G_SOURCE NUMBER(10, 0) NULL,
   G_LAC NUMBER(10, 0) NULL,
   G_STATUS VARCHAR2(64) NULL,
   G_LATITUDE FLOAT(126) NULL,
   G_LONGITUDE FLOAT(126) NULL,
   G_NAME VARCHAR2(160) NULL,
   G_ADDRESS VARCHAR2(400) NULL,
   G_BSC NUMBER(10, 0) NULL,
   G_FREQUENCY FLOAT(63) NULL,
   G_TRX NUMBER(5, 0) NULL,
   G_RACK NUMBER(5, 0) NULL,
   G_CELLNAME VARCHAR2(32) NULL,
   G_CONFIG VARCHAR2(40) NULL,
   G_AZIMUTH FLOAT(63) NULL,
   G_HEIGHT NUMBER(5, 0) NULL,
   G_TILT FLOAT(63) NULL,
   G_GAIN FLOAT(63) NULL,
   G_ANT_NUMBER NUMBER(5, 0) NULL,
   G_ANT_LOCATION VARCHAR2(64) NULL,
   G_TRPOWER FLOAT(63) NULL,
   G_FORM VARCHAR2(64) NULL,
   G_DATE_ENT DATE NULL,
   G_DATE_ID DATE NULL,
   G_NAME_BSC VARCHAR2(160) NULL,
   G_TRX_LOCATION VARCHAR2(64) NULL,
   G_DIAGRAM VARCHAR2(480) NULL,
   G_CABLETYPE VARCHAR2(200) NULL,
   G_RXA_M FLOAT(63) NULL,
   G_TX_M FLOAT(63) NULL,
   G_RXB_M FLOAT(63) NULL,
   G_MHA VARCHAR2(128) NULL,
   G_DB_COMB NUMBER(5, 0) NULL,
   G_FL VARCHAR2(64) NULL,
   G_BOOSTER VARCHAR2(64) NULL,
   G_POS NUMBER(5, 0) NULL,
   G_POS_SEARCH NUMBER(10, 0) NULL,
   G_GEO_ZONE VARCHAR2(400) NULL,
   G_CELL_TYPE VARCHAR2(200) NULL,
   G_DATE_ON DATE NULL,
   G_ENVIRONMENT VARCHAR2(80) NULL,
   G_BASIS VARCHAR2(80) NULL,
   G_TRX_DR NUMBER(5, 0) NULL,
   G_ID_AUTOR VARCHAR2(80) NULL,
   RECORDSTATUS CHAR(4) NULL,
   MODIFTIME DATE NULL,
   G_POSNAME NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT PK_GLCHBASESTATION UNIQUE (G_CI, G_REPEATER, G_SOURCE);
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT CKC_G_SOURCE_GLCHB CHECK (g_source IN (1 ,2 ));
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT CKC_RECORDST_GLCHB CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT SYS_C004932 CHECK ("G_CI" IS NOT NULL);
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT SYS_C004933 CHECK ("G_REPEATER" IS NOT NULL);
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT SYS_C004934 CHECK ("G_SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.GLCHBASESTATIONS
  ADD CONSTRAINT SYS_C004935 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.GLCHCABLE2NRI
  (CABLETYPE VARCHAR2(200) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.GLCHCABLE2NRI
  ADD CONSTRAINT PK_GLCHCABLE2NRI UNIQUE (CABLETYPE);
 
ALTER TABLE INFORMIX.GLCHCABLE2NRI
  ADD CONSTRAINT SYS_C004938 CHECK ("CABLETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.GLCHGEOZONE2NZ
  (GEO_ZONE VARCHAR2(400) NULL,
   NETZONE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.GLCHGEOZONE2NZ
  ADD CONSTRAINT PK_GLCHGEOZONE2NZ UNIQUE (GEO_ZONE);
 
ALTER TABLE INFORMIX.GLCHGEOZONE2NZ
  ADD CONSTRAINT SYS_C004936 CHECK ("GEO_ZONE" IS NOT NULL);

CREATE TABLE INFORMIX.GLCHSECTCONF2NRI
  (CELL_TYPE VARCHAR2(200) NULL,
   CONF CHAR(4) NULL);

ALTER TABLE INFORMIX.GLCHSECTCONF2NRI
  ADD CONSTRAINT PK_GLCHSECTCONF2NR UNIQUE (CELL_TYPE);
 
ALTER TABLE INFORMIX.GLCHSECTCONF2NRI
  ADD CONSTRAINT SYS_C004939 CHECK ("CELL_TYPE" IS NOT NULL);

CREATE TABLE INFORMIX.GROUP2RES
  (GROUPID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.GROUP2RES
  ADD CONSTRAINT PK_GROUP2RES UNIQUE (GROUPID, RESOURCE_);
 
ALTER TABLE INFORMIX.GROUP2RES
  ADD CONSTRAINT SYS_C005962 CHECK ("GROUPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.GROUP2RES
  ADD CONSTRAINT SYS_C005963 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.GROUP2RES
  ADD CONSTRAINT SYS_C005964 CHECK ("QTY" IS NOT NULL);

CREATE TABLE INFORMIX.GSMID2NETWORKS
  (GSMID NUMBER(10, 0) NULL,
   PLMN NUMBER(10, 0) NULL,
   CELLID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.GSMID2NETWORKS
  ADD CONSTRAINT PK_GSMID2NETWORKS UNIQUE (GSMID);
 
ALTER TABLE INFORMIX.GSMID2NETWORKS
  ADD CONSTRAINT SYS_C005212 CHECK ("GSMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.GSMID2NETWORKS
  ADD CONSTRAINT SYS_C005213 CHECK ("PLMN" IS NOT NULL);
 
ALTER TABLE INFORMIX.GSMID2NETWORKS
  ADD CONSTRAINT SYS_C005214 CHECK ("CELLID" IS NOT NULL);

CREATE TABLE INFORMIX.HOPS
  (HOPSID NUMBER(10, 0) NULL,
   HOPSTYPE CHAR(4) NULL,
   SITEID_ENDA NUMBER(10, 0) NULL,
   SITEID_ENDB NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDA NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDB NUMBER(10, 0) NULL,
   REZERV CHAR(80) NULL,
   SPEED CHAR(80) NULL,
   ABIS_NUMBER CHAR(80) NULL,
   LEASE_INFO CHAR(320) NULL,
   HOPSTATE CHAR(4) NULL,
   EXPINDATE DATE NULL,
   EXPOUTDATE DATE NULL,
   BEENETID CHAR(48) NULL,
   SOURCE CHAR(4) NULL,
   PERMSTATUS CHAR(4) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   CONTRACTOR NUMBER(10, 0) NULL,
   POSA NUMBER(10, 0) NULL,
   POSB NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT PK_HOPS UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT CKC_SOURCE_HOPS CHECK (source IN ('N' ,'S' ));
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT CKC_PERMSTAT_HOPS CHECK (permstatus IN ('0' ,'1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9' ));
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT CKC_HOPSTYPE_HOPS CHECK ((hopstype IS NULL ) OR (hopstype IN ('R' ,'O' ,'U' ,'E' ,'T' ,'C' ,'A' ,'M' )) );
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT CKC_HOPSTATE_HOPS CHECK (hopstate IN ('A' ,'B' ,'C' ,'D' ));
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT SYS_C004184 CHECK ("HOPSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT SYS_C004185 CHECK ("HOPSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT SYS_C004186 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.HOPS
  ADD CONSTRAINT SYS_C004187 CHECK ("PERMSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.HOPS_BASE
  (HOPSID NUMBER(10, 0) NULL,
   HOPSVAR CHAR(4) NULL);

ALTER TABLE INFORMIX.HOPS_BASE
  ADD CONSTRAINT PK_HOPS_BASE UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.HOPS_BASE
  ADD CONSTRAINT CKC_HOPSVAR_HOPS_ CHECK (hopsvar IN ('R' ,'M' ));
 
ALTER TABLE INFORMIX.HOPS_BASE
  ADD CONSTRAINT SYS_C003698 CHECK ("HOPSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.HOPS_BASE
  ADD CONSTRAINT SYS_C003699 CHECK ("HOPSVAR" IS NOT NULL);

CREATE TABLE INFORMIX.HOPSLABEL
  (HOPSLABELID NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   HOPSNAME CHAR(200) NULL,
   HOPSNAMECOMMENTS CHAR(320) NULL);

ALTER TABLE INFORMIX.HOPSLABEL
  ADD CONSTRAINT PK_HOPSLABEL UNIQUE (HOPSLABELID);
 
ALTER TABLE INFORMIX.HOPSLABEL
  ADD CONSTRAINT SYS_C004609 CHECK ("HOPSLABELID" IS NOT NULL);

CREATE TABLE INFORMIX.HOPS_MISSING
  (HOPSID NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDA NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDB NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.HOPS_MISSING
  ADD CONSTRAINT PK_HOPS_MISSING UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.HOPS_MISSING
  ADD CONSTRAINT SYS_C003700 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.IBPMOUNTPOS
  (DOCPOSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IBPMOUNTPOS
  ADD CONSTRAINT PK_IBPMOUNTPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.IBPMOUNTPOS
  ADD CONSTRAINT SYS_C004891 CHECK ("DOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTENNES
  (ANTENID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   NOMER NUMBER(10, 0) NULL,
   RES_ANT NUMBER(10, 0) NULL,
   ID_BSANTEN NUMBER(10, 0) NULL,
   AZ_ANT NUMBER(5, 2) NULL,
   BAND NUMBER(10, 0) NULL,
   H_BRACKET_ANT NUMBER(6, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   LOCATION CHAR(4) NULL,
   INCLINE_ANT NUMBER(8, 4) NULL,
   FEEDER_TYPE NUMBER(10, 0) NULL,
   FEEDER_LENGTH NUMBER(5, 2) NULL,
   WIDTH_DN NUMBER(5, 2) NULL,
   WIDTH_DN_VERT NUMBER(5, 2) NULL,
   KU_ANT NUMBER(10, 0) NULL,
   ELINCLINE_ANT NUMBER(5, 2) NULL,
   ACTION CHAR(4) NULL);

ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT PK_IDBSANTENNES UNIQUE (ANTENID);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT CKC_ACTION_IDBSA CHECK (action IN ('A' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005783 CHECK ("AZ_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005784 CHECK ("H_BRACKET_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005785 CHECK ("KIND_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005786 CHECK ("LOCATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005787 CHECK ("ACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005779 CHECK ("ANTENID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005780 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005781 CHECK ("NOMER" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES
  ADD CONSTRAINT SYS_C005782 CHECK ("RES_ANT" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTENNESBANDS
  (ANTENID NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ELECTRICANGLE NUMBER(4, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   KSWN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.IDBSANTENNESBANDS
  ADD CONSTRAINT PK_IDBSANTENNESBAN UNIQUE (ANTENID, BAND);
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS
  ADD CONSTRAINT CKC_KIND_ANT_IDBSA CHECK ((kind_ant IS NULL ) OR (kind_ant IN ('R' ,'T' ,'D' )) );
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS
  ADD CONSTRAINT CKC_BAND_ANTBD CHECK (band IN (800 ,900 ,1800 ,2100 ));
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS
  ADD CONSTRAINT SYS_C003400 CHECK ("ANTENID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS
  ADD CONSTRAINT SYS_C003401 CHECK ("BAND" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   ANTENID NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ELECTRICANGLE NUMBER(4, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   KSWN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT PK_IDBSANTENNESBA2 UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT CKC_KIND_ANT_IDBS2 CHECK ((kind_ant IS NULL ) OR (kind_ant IN ('R' ,'T' ,'D' )) );
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT CKC_BAND_ANTBL CHECK (band IN (800 ,900 ,1800 ,2100 ));
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT SYS_C003402 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT SYS_C003403 CHECK ("ANTENID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNESBANDS_LOG
  ADD CONSTRAINT SYS_C003404 CHECK ("BAND" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTENNES_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   ANTENID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   NOMER NUMBER(10, 0) NULL,
   RES_ANT NUMBER(10, 0) NULL,
   ID_BSANTEN NUMBER(10, 0) NULL,
   AZ_ANT NUMBER(5, 2) NULL,
   BAND NUMBER(10, 0) NULL,
   H_BRACKET_ANT NUMBER(6, 2) NULL,
   KIND_ANT CHAR(4) NULL,
   LOCATION CHAR(4) NULL,
   INCLINE_ANT NUMBER(8, 4) NULL,
   FEEDER_TYPE NUMBER(10, 0) NULL,
   FEEDER_LENGTH NUMBER(5, 2) NULL,
   ELINCLINE_ANT NUMBER(5, 2) NULL,
   WIDTH_DN NUMBER(5, 2) NULL,
   WIDTH_DN_VERT NUMBER(5, 2) NULL,
   KU_ANT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT PK_IDBSANTENNES_LO UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005795 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005796 CHECK ("IDMAINREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005797 CHECK ("ANTENID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005798 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005799 CHECK ("NOMER" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005800 CHECK ("RES_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005801 CHECK ("AZ_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005802 CHECK ("H_BRACKET_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005803 CHECK ("KIND_ANT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTENNES_LOG
  ADD CONSTRAINT SYS_C005804 CHECK ("LOCATION" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTEN2DETAIL
  (IDDEPREC NUMBER(10, 0) NULL,
   DETAILID NUMBER(10, 0) NULL,
   ANTENID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBSANTEN2DETAIL
  ADD CONSTRAINT PK_IDBSANTEN2DETAI UNIQUE (IDDEPREC);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL
  ADD CONSTRAINT SYS_C005433 CHECK ("IDDEPREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL
  ADD CONSTRAINT SYS_C005434 CHECK ("DETAILID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL
  ADD CONSTRAINT SYS_C005435 CHECK ("ANTENID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   IDDEPREC NUMBER(10, 0) NULL,
   DETAILID NUMBER(10, 0) NULL,
   ANTENID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT PK_IDBSANTEN2DETL UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT SYS_C005436 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT SYS_C005437 CHECK ("IDMAINREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT SYS_C005438 CHECK ("IDDEPREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT SYS_C005439 CHECK ("DETAILID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSANTEN2DETAIL_LOG
  ADD CONSTRAINT SYS_C005440 CHECK ("ANTENID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSBANDS
  (BANDID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   ACTION CHAR(4) NULL);

ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT PK_IDBSBANDS UNIQUE (BANDID);
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT CKC_BAND_IDBSB CHECK (band IN (800 ,900 ,1800 ,2100 ));
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT CKC_ACTION_IDBSB CHECK (action IN ('A' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT SYS_C003813 CHECK ("BANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT SYS_C003814 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT SYS_C003815 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSBANDS
  ADD CONSTRAINT SYS_C003816 CHECK ("ACTION" IS NOT NULL);

CREATE TABLE INFORMIX.IDBS_DETAIL
  (IDREC NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   BSC CHAR(80) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   CELLNAME CHAR(80) NULL,
   STAND NUMBER(10, 0) NULL,
   NUMBOX NUMBER(10, 0) NULL,
   H_BRACKET_ANT NUMBER(6, 2) NULL,
   ANTTYPE CHAR(320) NULL,
   COUNT_ANT NUMBER(10, 0) NULL,
   WIDTH_DN NUMBER(5, 2) NULL,
   KU_ANT NUMBER(10, 0) NULL,
   INCLINE_ANT NUMBER(5, 2) NULL,
   AZIMUTH NUMBER(5, 2) NULL,
   TRANSIVERS NUMBER(10, 0) NULL,
   FEEDER_TYPE NUMBER(10, 0) NULL,
   FEEDER_LENGTH CHAR(320) NULL,
   MSHU CHAR(80) NULL,
   COMMENT_ CHAR(320) NULL,
   WIDTH_DN_VERT NUMBER(5, 2) NULL,
   RES_ANT NUMBER(10, 0) NULL,
   ELINCLINE_ANT NUMBER(5, 2) NULL,
   BAND NUMBER(10, 0) NULL,
   LOCATION CHAR(4) NULL,
   NAME_SECT CHAR(320) NULL,
   MSHUID NUMBER(10, 0) NULL,
   INOUTFILTERID NUMBER(10, 0) NULL,
   DIPLEXFILTERID NUMBER(10, 0) NULL,
   DIPLEXERID NUMBER(10, 0) NULL,
   COMBCOUNT NUMBER(10, 0) NULL,
   MSHUCOUNT NUMBER(10, 0) NULL,
   CELLID NUMBER(10, 0) NULL,
   ACTION CHAR(4) NULL);

ALTER TABLE INFORMIX.IDBS_DETAIL
  ADD CONSTRAINT PK_IDBS_DETAIL UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.IDBS_DETAIL
  ADD CONSTRAINT CKC_ACTION_IDBS_ CHECK (action IN ('A' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.IDBS_DETAIL
  ADD CONSTRAINT SYS_C005788 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBS_DETAIL
  ADD CONSTRAINT SYS_C005789 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBS_DETAIL
  ADD CONSTRAINT SYS_C005790 CHECK ("ACTION" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSDETAIL_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   IDREC NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   BSC CHAR(80) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   CELLNAME CHAR(80) NULL,
   STAND CHAR(80) NULL,
   NUMBOX NUMBER(10, 0) NULL,
   H_BRACKET_ANT NUMBER(6, 2) NULL,
   ANTTYPE CHAR(320) NULL,
   COUNT_ANT NUMBER(10, 0) NULL,
   WIDTH_DN NUMBER(5, 2) NULL,
   KU_ANT NUMBER(10, 0) NULL,
   INCLINE_ANT NUMBER(5, 2) NULL,
   AZIMUTH NUMBER(5, 2) NULL,
   TRANSIVERS NUMBER(10, 0) NULL,
   FEEDER_TYPE NUMBER(10, 0) NULL,
   FEEDER_LENGTH CHAR(320) NULL,
   MSHU CHAR(80) NULL,
   COMMENT_ CHAR(1020) NULL,
   WIDTH_DN_VERT NUMBER(5, 2) NULL,
   RES_ANT NUMBER(10, 0) NULL,
   ELINCLINE_ANT NUMBER(5, 2) NULL,
   BAND NUMBER(10, 0) NULL,
   LOCATION CHAR(4) NULL,
   NAME_SECT CHAR(320) NULL,
   MSHUID NUMBER(10, 0) NULL,
   DIPLEXFILTERID NUMBER(10, 0) NULL,
   INOUTFILTERID NUMBER(10, 0) NULL,
   DIPLEXERID NUMBER(10, 0) NULL,
   COMBCOUNT NUMBER(10, 0) NULL,
   MSHUCOUNT NUMBER(10, 0) NULL,
   CELLID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBSDETAIL_LOG
  ADD CONSTRAINT IDBS_DETAIL_CHA UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBSDETAIL_LOG
  ADD CONSTRAINT SYS_C005791 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSDETAIL_LOG
  ADD CONSTRAINT SYS_C005792 CHECK ("IDMAINREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSDETAIL_LOG
  ADD CONSTRAINT SYS_C005793 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSDETAIL_LOG
  ADD CONSTRAINT SYS_C005794 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSOWNERLIST
  (ID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   OWNERID NUMBER(10, 0) NULL,
   OWNERTYPE CHAR(4) NULL,
   OWNERTYPEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBSOWNERLIST
  ADD CONSTRAINT PK_IDBSOWNERLIST UNIQUE (ID);
 
ALTER TABLE INFORMIX.IDBSOWNERLIST
  ADD CONSTRAINT SYS_C005292 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSOWNERLIST
  ADD CONSTRAINT SYS_C005293 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSOWNERLIST
  ADD CONSTRAINT SYS_C005294 CHECK ("OWNERID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSOWNERTYPES
  (TYPEID NUMBER(10, 0) NULL,
   OWNERTYPE CHAR(4) NULL,
   TYPENAME CHAR(512) NULL);

ALTER TABLE INFORMIX.IDBSOWNERTYPES
  ADD CONSTRAINT PK_IDBSOWNERTYPES UNIQUE (TYPEID);
 
ALTER TABLE INFORMIX.IDBSOWNERTYPES
  ADD CONSTRAINT SYS_C005494 CHECK ("TYPEID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBS_POWERSUPPLIES
  (IDREC NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   SUPPLYCLASS NUMBER(10, 0) NULL,
   IBPTYPE NUMBER(10, 0) NULL,
   AKBTYPE NUMBER(10, 0) NULL,
   POWER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES
  ADD CONSTRAINT PK_IDBS_POWERSUPPL UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES
  ADD CONSTRAINT CKC_SUPPLYCL_IDBS_ CHECK ((supplyclass IS NULL ) OR (supplyclass IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES
  ADD CONSTRAINT SYS_C006003 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES
  ADD CONSTRAINT SYS_C006004 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBS_POWERSUPPLIES_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   IDREC NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   SUPPLYCLASS NUMBER(10, 0) NULL,
   IBPTYPE NUMBER(10, 0) NULL,
   AKBTYPE NUMBER(10, 0) NULL,
   POWER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES_LOG
  ADD CONSTRAINT PK_IDBS_POWERSUPLG UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES_LOG
  ADD CONSTRAINT SYS_C003708 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES_LOG
  ADD CONSTRAINT SYS_C003709 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBS_POWERSUPPLIES_LOG
  ADD CONSTRAINT SYS_C003710 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSSTANDS
  (STANDID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STNOMER CHAR(200) NULL,
   ACTION CHAR(4) NULL);

ALTER TABLE INFORMIX.IDBSSTANDS
  ADD CONSTRAINT PK_IDBSSTANDS UNIQUE (STANDID);
 
ALTER TABLE INFORMIX.IDBSSTANDS
  ADD CONSTRAINT CKC_ACTION_IDBSS CHECK (action IN ('A' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.IDBSSTANDS
  ADD CONSTRAINT SYS_C005450 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSSTANDS
  ADD CONSTRAINT SYS_C005451 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSSTANDS
  ADD CONSTRAINT SYS_C005452 CHECK ("ACTION" IS NOT NULL);

CREATE TABLE INFORMIX.IDBSSTANDS_LOG
  (IDLOGREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STNOMER CHAR(200) NULL);

ALTER TABLE INFORMIX.IDBSSTANDS_LOG
  ADD CONSTRAINT PK_IDBSSTANDS_LOG UNIQUE (IDLOGREC);
 
ALTER TABLE INFORMIX.IDBSSTANDS_LOG
  ADD CONSTRAINT SYS_C005457 CHECK ("IDLOGREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSSTANDS_LOG
  ADD CONSTRAINT SYS_C005458 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDBSSTANDS_LOG
  ADD CONSTRAINT SYS_C005459 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.IDOPTICALREPITERS
  (PROJECTID NUMBER(10, 0) NULL,
   ISWDM CHAR(4) NULL,
   ISOPTICDIVISOR CHAR(4) NULL,
   DIVISORFACTORID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDOPTICALREPITERS
  ADD CONSTRAINT PK_IDOPTICALREPITE UNIQUE (PROJECTID);
 
ALTER TABLE INFORMIX.IDOPTICALREPITERS
  ADD CONSTRAINT SYS_C003425 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.IDREPITERS
  (PROJECTID NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   ADDRESS CHAR(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   STATIONRES NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   SETTLEMENTID NUMBER(10, 0) NULL,
   AUTOADDRESS CHAR(1020) NULL,
   H_OBJ NUMBER(6, 2) NULL,
   GEOSYSTEM NUMBER(10, 0) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   ISLIGHTFIRE NUMBER(10, 0) NULL,
   ISSUPPLYRESERVE NUMBER(10, 0) NULL,
   AVR_BOARD NUMBER(10, 0) NULL,
   REPTYPE NUMBER(10, 0) NULL,
   BAND CHAR(4) NULL,
   DONOR_BS NUMBER(10, 0) NULL,
   DONOR_SECT NUMBER(10, 0) NULL,
   DONOR_ANT NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   REPDONORUNITID NUMBER(10, 0) NULL,
   MAINCONTRACTOR NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT PK_IDREPITERS UNIQUE (PROJECTID);
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT CKC_REPTYPE_IDREP CHECK (reptype IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT CKC_BAND_IDREP CHECK ((band IS NULL ) OR (band IN ('G' ,'D' ,'E' ,'U' )) );
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT SYS_C005756 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT SYS_C005757 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT SYS_C005758 CHECK ("STATIONRES" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDREPITERS
  ADD CONSTRAINT SYS_C005759 CHECK ("REPTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.IDTSPROPERTIES
  (LINEID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   TSTYPE CHAR(4) NULL,
   HOPSID NUMBER(10, 0) NULL,
   BEENETID CHAR(48) NULL,
   EQTYPE NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   FREQUENCY_A NUMBER(8, 4) NULL,
   SPEED CHAR(200) NULL,
   HSET_A NUMBER(8, 4) NULL,
   DIAM_A NUMBER(8, 4) NULL,
   POWER_A NUMBER(8, 4) NULL,
   AZ_A NUMBER(8, 4) NULL,
   RESERV CHAR(200) NULL,
   SITEIDB NUMBER(10, 0) NULL,
   BEENETIDB CHAR(48) NULL,
   POSNAMEB CHAR(320) NULL,
   HSET_B NUMBER(8, 4) NULL,
   DIAM_B NUMBER(8, 4) NULL,
   AZ_B NUMBER(8, 4) NULL,
   SITETYPE NUMBER(10, 0) NULL,
   LINKIDBS NUMBER(10, 0) NULL,
   DIAM2_A NUMBER(8, 4) NULL,
   DIAM2_B NUMBER(8, 4) NULL,
   HSET2_A NUMBER(8, 4) NULL,
   HSET2_B NUMBER(8, 4) NULL,
   EQID_A NUMBER(10, 0) NULL,
   EQID_B NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT PK_IDTSPROPERTIES UNIQUE (LINEID);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT CKC_TSTYPE_IDTSP CHECK (tstype IN ('R' ,'O' ,'A' ,'C' ,'M' ));
 
ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT SYS_C005283 CHECK ("LINEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT SYS_C005284 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT SYS_C005285 CHECK ("TSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES
  ADD CONSTRAINT SYS_C005286 CHECK ("BEENETID" IS NOT NULL);

CREATE TABLE INFORMIX.IDTSPROPERTIES_LOG
  (IDREC NUMBER(10, 0) NULL,
   IDMAINREC NUMBER(10, 0) NULL,
   LINEID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   TSTYPE CHAR(4) NULL,
   HOPSID NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   BEENETID CHAR(48) NULL,
   EQTYPE NUMBER(10, 0) NULL,
   FREQUENCY_A NUMBER(8, 4) NULL,
   SPEED CHAR(200) NULL,
   HSET_A NUMBER(8, 4) NULL,
   DIAM_A NUMBER(8, 4) NULL,
   POWER_A NUMBER(8, 4) NULL,
   AZ_A NUMBER(8, 4) NULL,
   RESERV CHAR(200) NULL,
   SITEIDB NUMBER(10, 0) NULL,
   BEENETIDB CHAR(48) NULL,
   POSNAMEB CHAR(320) NULL,
   HSET_B NUMBER(8, 4) NULL,
   DIAM_B NUMBER(8, 4) NULL,
   AZ_B NUMBER(8, 4) NULL,
   SITETYPE NUMBER(10, 0) NULL,
   LINKIDBS NUMBER(10, 0) NULL,
   DIAM2_A NUMBER(8, 4) NULL,
   DIAM2_B NUMBER(8, 4) NULL,
   HSET2_A NUMBER(8, 4) NULL,
   HSET2_B NUMBER(8, 4) NULL);

ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT PK_IDTSPROPERTIES2 UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT SYS_C005287 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT SYS_C005288 CHECK ("LINEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT SYS_C005289 CHECK ("PROJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT SYS_C005290 CHECK ("TSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.IDTSPROPERTIES_LOG
  ADD CONSTRAINT SYS_C005291 CHECK ("BEENETID" IS NOT NULL);

CREATE TABLE INFORMIX.IMPORTRECORDS
  (IMPRECID NUMBER(10, 0) NULL,
   IMPSESID NUMBER(10, 0) NULL,
   RECENDTIME DATE NULL,
   ACTION CHAR(4) NULL,
   RESULT CHAR(4) NULL,
   ERRLABEL CHAR(200) NULL,
   PARAM1 CHAR(200) NULL,
   PARAM2 CHAR(200) NULL,
   PARAM3 CHAR(200) NULL,
   KEYFIELDS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT PK_IMPORTRECORDS UNIQUE (IMPRECID);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT CKC_ACTION_IMPOR CHECK (action IN ('I' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT CKC_RESULT_IMPOR CHECK (result IN ('S' ,'E' ));
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004603 CHECK ("IMPRECID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004604 CHECK ("IMPSESID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004605 CHECK ("RECENDTIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004606 CHECK ("ACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004607 CHECK ("RESULT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTRECORDS
  ADD CONSTRAINT SYS_C004608 CHECK ("ERRLABEL" IS NOT NULL);

CREATE TABLE INFORMIX.IMPORTSESSIONS
  (IMPSESID NUMBER(10, 0) NULL,
   IMPTASKID NUMBER(10, 0) NULL,
   IMPORTSTART DATE NULL,
   IMPORTEND DATE NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL,
   FILESIZE NUMBER(10, 0) NULL,
   FILETIME DATE NULL,
   RECCOUNT NUMBER(10, 0) NULL,
   ERRCOUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT PK_IMPORTSESSIONS UNIQUE (IMPSESID);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004421 CHECK ("IMPSESID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004422 CHECK ("IMPTASKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004423 CHECK ("IMPORTSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004424 CHECK ("IMPORTEND" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004425 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004426 CHECK ("FILENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004427 CHECK ("FILESIZE" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004428 CHECK ("RECCOUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTSESSIONS
  ADD CONSTRAINT SYS_C004429 CHECK ("ERRCOUNT" IS NOT NULL);

CREATE TABLE INFORMIX.IMPORTTASKS
  (IMPTASKID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   XML_FILE BLOB NULL);

ALTER TABLE INFORMIX.IMPORTTASKS
  ADD CONSTRAINT PK_IMPORTTASKS UNIQUE (IMPTASKID);
 
ALTER TABLE INFORMIX.IMPORTTASKS
  ADD CONSTRAINT SYS_C004883 CHECK ("IMPTASKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.IMPORTTASKS
  ADD CONSTRAINT SYS_C004884 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.INLWBILLSPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   DOCQTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.INLWBILLSPOS
  ADD CONSTRAINT PK_INLWBILLSPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.INLWBILLSPOS
  ADD CONSTRAINT SYS_C004267 CHECK ("DOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.INPUTCATEGORIES
  (CATEGID NUMBER(10, 0) NULL,
   CATEGNAME CHAR(200) NULL);

ALTER TABLE INFORMIX.INPUTCATEGORIES
  ADD CONSTRAINT PK_INPUTCATEGORIES UNIQUE (CATEGID);
 
ALTER TABLE INFORMIX.INPUTCATEGORIES
  ADD CONSTRAINT SYS_C004951 CHECK ("CATEGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.INPUTCATEGORIES
  ADD CONSTRAINT SYS_C004952 CHECK ("CATEGNAME" IS NOT NULL);

CREATE TABLE INFORMIX.INTERFACE_CELLINFO
  (IDREC NUMBER(10, 0) NULL,
   LAC NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   CELLINFO VARCHAR2(1020) NULL,
   ERRCODE NUMBER(10, 0) NULL,
   ERRTXT VARCHAR2(1020) NULL);
 
ALTER TABLE INFORMIX.INTERFACE_CELLINFO
  ADD CONSTRAINT SYS_C005805 CHECK ("IDREC" IS NOT NULL);

CREATE TABLE INFORMIX.INTERNALOUTBILL
  (DOCUMENT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   FIXING CHAR(4) NULL,
   MONTER NUMBER(10, 0) NULL,
   UNMOUNTBLOCKS CHAR(4) NULL);

ALTER TABLE INFORMIX.INTERNALOUTBILL
  ADD CONSTRAINT PK_INTERNALOUTBILL UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.INTERNALOUTBILL
  ADD CONSTRAINT CKC_FIXING_IOBIL CHECK ((fixing IS NULL ) OR (fixing IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.INTERNALOUTBILL
  ADD CONSTRAINT CKC_UNMOUNTB_INTER CHECK ((unmountblocks IS NULL ) OR (unmountblocks IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.INTERNALOUTBILL
  ADD CONSTRAINT SYS_C004345 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.INTERNALWAYBILLS
  (DOCUMENT NUMBER(10, 0) NULL,
   FIXING CHAR(4) NULL,
   POSITION NUMBER(10, 0) NULL,
   MONTER NUMBER(10, 0) NULL,
   EQUIPTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.INTERNALWAYBILLS
  ADD CONSTRAINT PK_INTERNALWAYBILL UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.INTERNALWAYBILLS
  ADD CONSTRAINT CKC_FIXING_INTER CHECK (fixing IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.INTERNALWAYBILLS
  ADD CONSTRAINT CKC_EQUIPTYP_INTER CHECK ((equiptype IS NULL ) OR (equiptype IN ('S' ,'C' ,'G' )) );
 
ALTER TABLE INFORMIX.INTERNALWAYBILLS
  ADD CONSTRAINT SYS_C004210 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.INTERNALWAYBILLS
  ADD CONSTRAINT SYS_C004211 CHECK ("FIXING" IS NOT NULL);

CREATE TABLE INFORMIX.INVCONTRACTITEMS
  (ID NUMBER(10, 0) NULL,
   IDACT NUMBER(10, 0) NULL,
   GROUP_ NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CATEG NUMBER(10, 0) NULL,
   QUANTITY NUMBER(10, 0) NULL,
   SERIAL CHAR(1020) NULL,
   COMMENT_ CHAR(160) NULL,
   ROOMNUMBER NUMBER(10, 0) NULL,
   BEGINVOLT NUMBER(22) NULL,
   AFTERHOUR NUMBER(22) NULL,
   AZIMUTH CHAR(160) NULL,
   SECTOR CHAR(160) NULL,
   KSV NUMBER(22) NULL,
   GSM CHAR(20) NULL,
   COMPLECT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   CATEGRESOURCE NUMBER(10, 0) NULL,
   ISFICTSERIAL CHAR(4) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   NOTE CHAR(160) NULL);
 
ALTER TABLE INFORMIX.INVCONTRACTITEMS
  ADD CONSTRAINT SYS_C005368 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVCONTRACTITEMS
  ADD CONSTRAINT SYS_C005369 CHECK ("IDACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVCONTRACTITEMS
  ADD CONSTRAINT SYS_C005370 CHECK ("GROUP_" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVCONTRACTITEMS
  ADD CONSTRAINT SYS_C005371 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.INVCONTRACTS
  (ID NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   ORDERINDEX NUMBER(10, 0) NULL,
   ORDERNUMBER CHAR(160) NULL,
   CONTRACTOR NUMBER(10, 0) NULL,
   INSURANCEMAN CHAR(160) NULL,
   STATE CHAR(4) NULL,
   DOCUMENTS VARCHAR2(1020) NULL,
   SMAN NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.INVCONTRACTS
  ADD CONSTRAINT SYS_C005372 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.INVENTORYNUMBERS
  (SERID NUMBER(10, 0) NULL,
   SERPREFIX CHAR(12) NULL,
   SERSTART CHAR(32) NULL,
   SEREND CHAR(32) NULL,
   SERDATE DATE NULL,
   SERWORKER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT PK_INVENTORYNUMBER UNIQUE (SERID);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004216 CHECK ("SERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004217 CHECK ("SERPREFIX" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004218 CHECK ("SERSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004219 CHECK ("SEREND" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004220 CHECK ("SERDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYNUMBERS
  ADD CONSTRAINT SYS_C004221 CHECK ("SERWORKER" IS NOT NULL);

CREATE TABLE INFORMIX.INVENTORYOUTDOCS
  (ID NUMBER(10, 0) NULL,
   ID_DOC NUMBER(10, 0) NULL,
   DOC_DELIVERY_DATE DATE NULL,
   ID_TTN VARCHAR2(240) NULL,
   DATE_TTN DATE NULL,
   ID_ORDER VARCHAR2(240) NULL,
   DATE_ORDER DATE NULL,
   LAST_NAME_COMPILER VARCHAR2(240) NULL,
   DELIVERY_DATE DATE NULL,
   FERRYMAN VARCHAR2(240) NULL,
   RECIPIENT_TYPE VARCHAR2(80) NULL,
   RECIPIENT VARCHAR2(240) NULL,
   STORE_NAME VARCHAR2(240) NULL,
   COMPLETE_FLAG CHAR(4) NULL,
   ID_COMPLETE_SET VARCHAR2(240) NULL,
   NFS_CODE VARCHAR2(80) NULL,
   CODE_GOODS VARCHAR2(240) NULL,
   MARKING_GOODS VARCHAR2(240) NULL,
   NAME_GOODS VARCHAR2(240) NULL,
   QTY NUMBER(10, 0) NULL,
   USED_FLAG CHAR(4) NULL,
   WASTE_FLAG CHAR(4) NULL,
   IS_COMPLETE CHAR(80) NULL,
   ADDITIONAL_DATA VARCHAR2(400) NULL,
   STORE_CODE CHAR(80) NULL,
   SHEET_NAME VARCHAR2(160) NULL,
   AVIA_BAG_FLAG VARCHAR2(240) NULL,
   DELIVERY_FLAG VARCHAR2(240) NULL,
   EXTERNAL_ID NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.INVENTORYOUTDOCS
  ADD CONSTRAINT SYS_C004908 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.INVENTORYOUTSHEETS
  (ID NUMBER(10, 0) NULL,
   SHEET_NAME CHAR(160) NULL,
   IS_NEW NUMBER(5, 0) NULL);
 
ALTER TABLE INFORMIX.INVENTORYOUTSHEETS
  ADD CONSTRAINT SYS_C004993 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENTORYOUTSHEETS
  ADD CONSTRAINT SYS_C004994 CHECK ("IS_NEW" IS NOT NULL);

CREATE TABLE INFORMIX.INVENTORYREGISTRYACTS
  (ID NUMBER(10, 0) NULL,
   ID_DOC VARCHAR2(80) NULL,
   DOC_DELIVERY_DATE DATE NULL,
   ID_ORDER VARCHAR2(240) NULL,
   DATE_ORDER DATE NULL,
   STORE_CODE CHAR(80) NULL,
   NFS_CODE VARCHAR2(80) NULL,
   CODE_GOODS VARCHAR2(240) NULL,
   MARKING_GOODS VARCHAR2(240) NULL,
   NAME_GOODS VARCHAR2(240) NULL,
   SERIAL_NUMBER VARCHAR2(240) NULL,
   INVENTORY_NUMBER VARCHAR2(240) NULL,
   EXTERNAL_ID NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.INVENTORYREGISTRYACTS
  ADD CONSTRAINT SYS_C004909 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.INVENT_RESOURCES
  (ID NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   TYPE_NAME CHAR(1020) NULL,
   RESOURCE_NAME CHAR(1020) NULL,
   CODENFS CHAR(1020) NULL,
   MANUFACTURE CHAR(1020) NULL,
   MODEL CHAR(1020) NULL,
   QTY NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   PROCESSED CHAR(4) NULL);

ALTER TABLE INFORMIX.INVENT_RESOURCES
  ADD CONSTRAINT PK_INVENT_RESOURCE UNIQUE (ID);
 
ALTER TABLE INFORMIX.INVENT_RESOURCES
  ADD CONSTRAINT CKC_PROCESSE_INVEN CHECK (processed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.INVENT_RESOURCES
  ADD CONSTRAINT SYS_C005672 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.INVENT_RESOURCES
  ADD CONSTRAINT SYS_C005673 CHECK ("PROCESSED" IS NOT NULL);

CREATE TABLE INFORMIX.INWAYBILLS
  (DOCUMENT NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   CORDOCNUM CHAR(80) NULL,
   CORDOCDATE DATE NULL,
   GTDNUMBER CHAR(80) NULL,
   GTDDATE DATE NULL,
   SUPPLYCONDITION CHAR(4) NULL,
   DACTSTORMANAGER NUMBER(10, 0) NULL,
   DACTTECHSTUF NUMBER(10, 0) NULL,
   DACTNUMBER CHAR(80) NULL,
   DACTDATE DATE NULL,
   DACTTEXT BLOB NULL,
   DACTTEXTFILENAME CHAR(320) NULL,
   DACTREPRESENTATIVE CHAR(160) NULL,
   REPRESENTTYPE CHAR(4) NULL,
   REPRESENTATIVE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT PK_INWAYBILLS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT CKC_SUPPLYCO_INWAY CHECK ((supplycondition IS NULL ) OR (supplycondition IN ('P' ,'T' )) );
 
ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT CKC_REPRESEN_INWAY CHECK (representtype IN ('R' ,'W' ));
 
ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT SYS_C005103 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT SYS_C005104 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.INWAYBILLS
  ADD CONSTRAINT SYS_C005105 CHECK ("REPRESENTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.INWAYBILLSPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   OUTERDOCPOSITION NUMBER(10, 0) NULL,
   SOURCEPRICE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.INWAYBILLSPOS
  ADD CONSTRAINT PK_INWAYBILLSPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.INWAYBILLSPOS
  ADD CONSTRAINT SYS_C004268 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.INWAYBILLSPOS
  ADD CONSTRAINT SYS_C004269 CHECK ("OUTERDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.INWAYBILLSPOS
  ADD CONSTRAINT SYS_C004270 CHECK ("SOURCEPRICE" IS NOT NULL);

CREATE TABLE INFORMIX.I13ACTPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   CONTENTSSCANED CHAR(4) NULL,
   STATE CHAR(4) NULL,
   NOTE VARCHAR2(400) NULL,
   CORDOCNUM CHAR(80) NULL);

ALTER TABLE INFORMIX.I13ACTPOS
  ADD CONSTRAINT PK_I13ACTPOS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.I13ACTPOS
  ADD CONSTRAINT CKC_CONTENTS_I13AC CHECK ((contentsscaned IS NULL ) OR (contentsscaned IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.I13ACTPOS
  ADD CONSTRAINT CKC_STATE_I13AC CHECK (state IN ('B' ,'C' ,'R' ,'F' ,'L' ,'N' ));
 
ALTER TABLE INFORMIX.I13ACTPOS
  ADD CONSTRAINT SYS_C004282 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.I13ACTPOS
  ADD CONSTRAINT SYS_C004283 CHECK ("STATE" IS NOT NULL);

CREATE TABLE INFORMIX.I13NACT
  (DOCUMENT NUMBER(10, 0) NULL,
   AGREGATE NUMBER(10, 0) NULL,
   TECHSTUFF NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   AGREGATESERIAL CHAR(80) NULL,
   RECALCAGRPRICE CHAR(4) NULL,
   AGREGATERESOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.I13NACT
  ADD CONSTRAINT PK_I13NACT UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.I13NACT
  ADD CONSTRAINT CKC_TYPE_I13NA CHECK (TYPE_ IN ('F' ,'P' ,'A' ));
 
ALTER TABLE INFORMIX.I13NACT
  ADD CONSTRAINT SYS_C004016 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.I13NACT
  ADD CONSTRAINT SYS_C004017 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.I13NACTRESOURCESET
  (DOCUMENT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.I13NACTRESOURCESET
  ADD CONSTRAINT PK_I13NACTRESOURCE UNIQUE (DOCUMENT, RESOURCE_);
 
ALTER TABLE INFORMIX.I13NACTRESOURCESET
  ADD CONSTRAINT SYS_C004298 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.I13NACTRESOURCESET
  ADD CONSTRAINT SYS_C004299 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.I13NDATESAV
  (DOCUMENT NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   OLDI13NDATE DATE NULL);

ALTER TABLE INFORMIX.I13NDATESAV
  ADD CONSTRAINT PK_I13NDATESAV UNIQUE (DOCUMENT, STORAGECARD);
 
ALTER TABLE INFORMIX.I13NDATESAV
  ADD CONSTRAINT SYS_C004301 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.I13NDATESAV
  ADD CONSTRAINT SYS_C004302 CHECK ("STORAGECARD" IS NOT NULL);

CREATE TABLE INFORMIX.JOIN_DB_NRIUPDATE
  (TABLENAME CHAR(160) NULL,
   IDAPP NUMBER(10, 0) NULL,
   UPDATETIME DATE NULL);

ALTER TABLE INFORMIX.JOIN_DB_NRIUPDATE
  ADD CONSTRAINT PK_JOIN_DB_NRIUPDA UNIQUE (TABLENAME, IDAPP);
 
ALTER TABLE INFORMIX.JOIN_DB_NRIUPDATE
  ADD CONSTRAINT SYS_C004797 CHECK ("TABLENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_NRIUPDATE
  ADD CONSTRAINT SYS_C004798 CHECK ("IDAPP" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_NRIUPDATE
  ADD CONSTRAINT SYS_C004799 CHECK ("UPDATETIME" IS NOT NULL);

CREATE TABLE INFORMIX.JOIN_DB_QUERY
  (IDQUERY NUMBER(10, 0) NULL,
   IDAPP NUMBER(10, 0) NULL,
   REQSTATE CHAR(4) NULL,
   POSTTIME DATE NULL,
   STARTTIME DATE NULL,
   FINISHTIME DATE NULL,
   REQTYPE CHAR(160) NULL,
   SELSTARTDATE DATE NULL,
   SELENDDATE DATE NULL,
   MININTERVAL NUMBER(10, 0) NULL,
   MAXINTERVAL NUMBER(10, 0) NULL,
   REQPARAMS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT PK_JOIN_DB_QUERY UNIQUE (IDQUERY);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT CKC_REQSTATE_JOIN_ CHECK (reqstate IN ('Y' ,'E' ,'P' ,'O' ,'R' ));
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT SYS_C004800 CHECK ("IDQUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT SYS_C004801 CHECK ("IDAPP" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT SYS_C004802 CHECK ("REQSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT SYS_C004803 CHECK ("POSTTIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY
  ADD CONSTRAINT SYS_C004804 CHECK ("REQTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.JOIN_DB_QUERY_IDAPP
  (IDAPP NUMBER(10, 0) NULL,
   NOTES VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.JOIN_DB_QUERY_IDAPP
  ADD CONSTRAINT PK_JOIN_DB_QUERY_I UNIQUE (IDAPP);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY_IDAPP
  ADD CONSTRAINT SYS_C003492 CHECK ("IDAPP" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERY_IDAPP
  ADD CONSTRAINT SYS_C003493 CHECK ("NOTES" IS NOT NULL);

CREATE TABLE INFORMIX.JOIN_DB_QUERYLOG
  (IDQUERYLOG NUMBER(10, 0) NULL,
   IDQUERY NUMBER(10, 0) NULL,
   TYPEMSG CHAR(4) NULL,
   TXTMSG VARCHAR2(4000) NULL,
   DATECREATE DATE NULL);

ALTER TABLE INFORMIX.JOIN_DB_QUERYLOG
  ADD CONSTRAINT PK_JOIN_DB_QUERYLO UNIQUE (IDQUERYLOG);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERYLOG
  ADD CONSTRAINT CKC_TYPEMSG_JOIN_ CHECK (typemsg IN ('I' ,'E' ,'W' ));
 
ALTER TABLE INFORMIX.JOIN_DB_QUERYLOG
  ADD CONSTRAINT SYS_C006063 CHECK ("IDQUERYLOG" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERYLOG
  ADD CONSTRAINT SYS_C006064 CHECK ("IDQUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERYLOG
  ADD CONSTRAINT SYS_C006065 CHECK ("TYPEMSG" IS NOT NULL);

CREATE TABLE INFORMIX.JOIN_DB_QUERYTYPE
  (REQTYPE CHAR(160) NULL,
   NOTE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.JOIN_DB_QUERYTYPE
  ADD CONSTRAINT PK_JOIN_DB_QUERYTYPE UNIQUE (REQTYPE);
 
ALTER TABLE INFORMIX.JOIN_DB_QUERYTYPE
  ADD CONSTRAINT SYS_C006068 CHECK ("REQTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.KAZ_HIST
  (NEWNUMBER NUMBER(10, 0) NULL,
   PERMITNUMBER NUMBER(10, 0) NULL,
   NRINUMBER NUMBER(10, 0) NULL,
   CODEREGION NUMBER(10, 0) NULL,
   TEXT1 VARCHAR2(1020) NULL,
   TEXT2 VARCHAR2(1020) NULL,
   BSID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.KL_ALTNAMES
  (OLDCODE CHAR(76) NULL,
   NEWCODE CHAR(76) NULL,
   LEVEL_ CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KL_ALTNAMES
  ADD CONSTRAINT PK_KL_ALTNAMES UNIQUE (OLDCODE, NEWCODE);
 
ALTER TABLE INFORMIX.KL_ALTNAMES
  ADD CONSTRAINT CKC_RECORDST_KL_AL CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KL_ALTNAMES
  ADD CONSTRAINT SYS_C003659 CHECK ("OLDCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KL_ALTNAMES
  ADD CONSTRAINT SYS_C003660 CHECK ("NEWCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KL_ALTNAMES
  ADD CONSTRAINT SYS_C003661 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KL_KLADR
  (CODE CHAR(52) NULL,
   NAME CHAR(160) NULL,
   SOCR CHAR(40) NULL,
   INDEX_ CHAR(24) NULL,
   GNINMB CHAR(16) NULL,
   UNO CHAR(16) NULL,
   OCATD CHAR(44) NULL,
   STATUS CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KL_KLADR
  ADD CONSTRAINT PK_KL_KLADR UNIQUE (CODE);
 
ALTER TABLE INFORMIX.KL_KLADR
  ADD CONSTRAINT CKC_RECORDST_KL_KL CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KL_KLADR
  ADD CONSTRAINT SYS_C003662 CHECK ("CODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KL_KLADR
  ADD CONSTRAINT SYS_C003663 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KL_SOCRBASE
  (KOD_T_ST CHAR(12) NULL,
   LEVEL_ CHAR(20) NULL,
   SCNAME CHAR(40) NULL,
   SOCRNAME CHAR(116) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KL_SOCRBASE
  ADD CONSTRAINT PK_KL_SOCRBASE UNIQUE (KOD_T_ST);
 
ALTER TABLE INFORMIX.KL_SOCRBASE
  ADD CONSTRAINT CKC_RECORDST_KL_SO CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KL_SOCRBASE
  ADD CONSTRAINT SYS_C003657 CHECK ("KOD_T_ST" IS NOT NULL);
 
ALTER TABLE INFORMIX.KL_SOCRBASE
  ADD CONSTRAINT SYS_C003658 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KL_STREET
  (CODE CHAR(68) NULL,
   NAME CHAR(160) NULL,
   SOCR CHAR(40) NULL,
   INDEX_ CHAR(24) NULL,
   GNINMB CHAR(16) NULL,
   UNO CHAR(16) NULL,
   OCATD CHAR(44) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KL_STREET
  ADD CONSTRAINT PK_KL_STREET UNIQUE (CODE);
 
ALTER TABLE INFORMIX.KL_STREET
  ADD CONSTRAINT CKC_RECORDST_KL_ST CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KL_STREET
  ADD CONSTRAINT SYS_C003664 CHECK ("CODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KL_STREET
  ADD CONSTRAINT SYS_C003665 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLANTENNES2NRI
  (ANTPOSANTENNID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.KZLANTENNES2NRI
  ADD CONSTRAINT PK_KZLANTENNES2NRI UNIQUE (ANTPOSANTENNID);
 
ALTER TABLE INFORMIX.KZLANTENNES2NRI
  ADD CONSTRAINT SYS_C005021 CHECK ("ANTPOSANTENNID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLANTENNES2NRI
  ADD CONSTRAINT SYS_C005022 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.KZLANTENNS
  (ANTENNID NUMBER(10, 0) NULL,
   ANTENNNAME VARCHAR2(400) NULL,
   ANTENNVENDOR VARCHAR2(400) NULL,
   ANTENNFROMFILE VARCHAR2(1020) NULL,
   ANTENNBAND NUMBER(10, 0) NULL,
   ANTENNTYPE NUMBER(5, 0) NULL,
   ANTENNPOLARIZATION NUMBER(5, 0) NULL,
   ANTENNGAIN NUMBER(15, 6) NULL,
   ANTENNHPLAN NUMBER(10, 0) NULL,
   ANTENNVPLAN NUMBER(10, 0) NULL,
   ANTENNETILT NUMBER(10, 0) NULL,
   ANTENNHDIAGRAM BLOB NULL,
   ANTENNVDIAGRAM BLOB NULL,
   ANTENNDATE DATE NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLANTENNS
  ADD CONSTRAINT PK_KZLANTENNS UNIQUE (ANTENNID);
 
ALTER TABLE INFORMIX.KZLANTENNS
  ADD CONSTRAINT CKC_RECORDST_KZLAN CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLANTENNS
  ADD CONSTRAINT SYS_C005086 CHECK ("ANTENNID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLANTENNS
  ADD CONSTRAINT SYS_C005087 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLBSNEEDLOAD
  (ID NUMBER(10, 0) NULL,
   STARTBS NUMBER(10, 0) NULL,
   ENDBS NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.KZLBSNEEDLOAD
  ADD CONSTRAINT PK_KZLBSNEEDLOAD UNIQUE (ID);
 
ALTER TABLE INFORMIX.KZLBSNEEDLOAD
  ADD CONSTRAINT SYS_C004892 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLBSNEEDLOAD
  ADD CONSTRAINT SYS_C004893 CHECK ("STARTBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLBSNEEDLOAD
  ADD CONSTRAINT SYS_C004894 CHECK ("ENDBS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLDCTREGIONTYPE
  (RGNTYPEID NUMBER(10, 0) NULL,
   RGNTYPEIDENTITY VARCHAR2(200) NULL,
   ADD_NUMBER NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLDCTREGIONTYPE
  ADD CONSTRAINT PK_KZLDCTREGIONTYP UNIQUE (RGNTYPEID);
 
ALTER TABLE INFORMIX.KZLDCTREGIONTYPE
  ADD CONSTRAINT CKC_RECORDST_KZLD1 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLDCTREGIONTYPE
  ADD CONSTRAINT SYS_C005006 CHECK ("RGNTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLDCTREGIONTYPE
  ADD CONSTRAINT SYS_C005007 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLDCTSTATUS
  (STATUSID NUMBER(10, 0) NULL,
   STATUSNAME VARCHAR2(400) NULL,
   STATUSCOMMENT CHAR(2000) NULL,
   STATUSUNIQUE NUMBER(5, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLDCTSTATUS
  ADD CONSTRAINT PK_KZLDCTSTATUS UNIQUE (STATUSID);
 
ALTER TABLE INFORMIX.KZLDCTSTATUS
  ADD CONSTRAINT CKC_RECORDST_KZLDC CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLDCTSTATUS
  ADD CONSTRAINT SYS_C005004 CHECK ("STATUSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLDCTSTATUS
  ADD CONSTRAINT SYS_C005005 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLGATESTATIONS
  (RECORDID NUMBER(10, 0) NULL,
   LOADTIME DATE NULL,
   BSID NUMBER(10, 0) NULL,
   BSNUMBER NUMBER(10, 0) NULL,
   BSNAME VARCHAR2(400) NULL,
   BSADDR VARCHAR2(800) NULL,
   BSLG NUMBER(15, 6) NULL,
   BSLT NUMBER(15, 6) NULL,
   BSVENDOR VARCHAR2(400) NULL,
   BSCASES NUMBER(10, 0) NULL,
   BSSTATUSNUM NUMBER(10, 0) NULL,
   BSSTATUS VARCHAR2(200) NULL,
   CELLID NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   CELLSUFFIX CHAR(8) NULL,
   CELLCI NUMBER(10, 0) NULL,
   CELLBSC VARCHAR2(200) NULL,
   CELLSTATUSNUM NUMBER(10, 0) NULL,
   CELLSTATUS VARCHAR2(200) NULL,
   CELLBAND NUMBER(10, 0) NULL,
   CELLCASE NUMBER(10, 0) NULL,
   CELLRACK VARCHAR2(200) NULL,
   CELLLAC NUMBER(10, 0) NULL,
   CELLRAC NUMBER(10, 0) NULL,
   CELLTRX NUMBER(10, 0) NULL,
   ANTPOSID NUMBER(10, 0) NULL,
   ANTPOSANTENNID NUMBER(10, 0) NULL,
   ANTPOSTYPE VARCHAR2(200) NULL,
   ANTPOSDIRECT CHAR(8) NULL,
   ANTPOSHEIGHT NUMBER(15, 3) NULL,
   ANTPOSAZIMUTH NUMBER(10, 0) NULL,
   ANTPOSETILT NUMBER(10, 0) NULL,
   ANTPOSMTILT NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLGATESTATIONS
  ADD CONSTRAINT PK_KZLGATESTATIONS UNIQUE (RECORDID);
 
ALTER TABLE INFORMIX.KZLGATESTATIONS
  ADD CONSTRAINT CKC_RECORDST_KZLGA CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLGATESTATIONS
  ADD CONSTRAINT SYS_C005218 CHECK ("RECORDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLGATESTATIONS
  ADD CONSTRAINT SYS_C005219 CHECK ("BSLT" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLGATESTATIONS
  ADD CONSTRAINT SYS_C005220 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLNETZONES2NRI
  (KZLREGIONID NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.KZLNETZONES2NRI
  ADD CONSTRAINT PK_KZLNETZONES2NRI UNIQUE (KZLREGIONID);
 
ALTER TABLE INFORMIX.KZLNETZONES2NRI
  ADD CONSTRAINT SYS_C005023 CHECK ("KZLREGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLNETZONES2NRI
  ADD CONSTRAINT SYS_C005024 CHECK ("NETZONE" IS NOT NULL);

CREATE TABLE INFORMIX.KZLREGION
  (REGIONID NUMBER(10, 0) NULL,
   REGIONNAME VARCHAR2(400) NULL,
   REGIONCOMMENT CHAR(2000) NULL,
   REGIONTYPE NUMBER(10, 0) NULL,
   REGIONPOPULATION NUMBER(10, 0) NULL,
   RURALPOPULATION NUMBER(10, 0) NULL,
   REGIONAREA NUMBER(15, 3) NULL,
   RECORDSTATUS CHAR(4) NULL,
   REGIONNRI NUMBER(10, 0) NULL,
   REGIONLON FLOAT(126) NULL,
   REGIONLAT FLOAT(126) NULL,
   REGIONINMAP NUMBER(10, 0) NULL,
   REGIONKIND CHAR(200) NULL,
   REGIONCODE NUMBER(10, 0) NULL,
   FILIALNRI NUMBER(10, 0) NULL,
   REGIONMNC NUMBER(5, 0) NULL,
   REGIONMCC NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.KZLREGION
  ADD CONSTRAINT PK_KZLREGION UNIQUE (REGIONID);
 
ALTER TABLE INFORMIX.KZLREGION
  ADD CONSTRAINT CKC_RECORDST_KZLR3 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLREGION
  ADD CONSTRAINT SYS_C005011 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGION
  ADD CONSTRAINT SYS_C005012 CHECK ("REGIONNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGION
  ADD CONSTRAINT SYS_C005013 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLREGIONSHIERARHY
  (REGIONID NUMBER(10, 0) NULL,
   PARENT_REGIONID NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLREGIONSHIERARHY
  ADD CONSTRAINT PK_KZLREGIONSHIERA UNIQUE (REGIONID, PARENT_REGIONID);
 
ALTER TABLE INFORMIX.KZLREGIONSHIERARHY
  ADD CONSTRAINT CKC_RECORDST_KZLR1 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLREGIONSHIERARHY
  ADD CONSTRAINT SYS_C005008 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGIONSHIERARHY
  ADD CONSTRAINT SYS_C005009 CHECK ("PARENT_REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGIONSHIERARHY
  ADD CONSTRAINT SYS_C005010 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLREGIONSPREFIX
  (REGIONID NUMBER(10, 0) NULL,
   CELLID_PREFIX NUMBER(10, 0) NULL,
   CELLNAME_PREFIX NUMBER(10, 0) NULL,
   GROUP_PREFIX NUMBER(10, 0) NULL,
   SUPER_PREFIX NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT PK_KZLREGIONSPREFI UNIQUE (REGIONID, CELLID_PREFIX);
 
ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT CKC_RECORDST_KZLR2 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT SYS_C005014 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT SYS_C005015 CHECK ("CELLID_PREFIX" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT SYS_C005016 CHECK ("GROUP_PREFIX" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLREGIONSPREFIX
  ADD CONSTRAINT SYS_C005017 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLSECTORS
  (SECTORID NUMBER(10, 0) NULL,
   STATIONSID NUMBER(10, 0) NULL,
   MNC NUMBER(10, 0) NULL,
   LAC NUMBER(10, 0) NULL,
   SECTORCI NUMBER(10, 0) NULL,
   SECTORNUMBER NUMBER(10, 0) NULL,
   SECTORSUFFIX VARCHAR2(20) NULL,
   SECTORNAME VARCHAR2(40) NULL,
   SECTORBAND NUMBER(10, 0) NULL,
   SECTORSTATUS NUMBER(10, 0) NULL,
   SECTORRADIUS NUMBER(10, 0) NULL,
   SECTORCHANNELS NUMBER(10, 0) NULL,
   RAC NUMBER(10, 0) NULL,
   SECTOREQUIPMENT VARCHAR2(200) NULL,
   SECTORNUMCASE NUMBER(5, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT PK_KZLSECTORS UNIQUE (SECTORID);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT CKC_REDST_KZ23 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004910 CHECK ("SECTORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004911 CHECK ("STATIONSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004912 CHECK ("SECTORCI" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004913 CHECK ("SECTORNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004914 CHECK ("SECTORSUFFIX" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORS
  ADD CONSTRAINT SYS_C004915 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLSECTORSANTENNS
  (ANTENNNO NUMBER(10, 0) NULL,
   ANTENNID NUMBER(10, 0) NULL,
   SECTORID NUMBER(10, 0) NULL,
   SAHEIGHT FLOAT(126) NULL,
   SAAZIMUTH NUMBER(10, 0) NULL,
   SATILT NUMBER(5, 0) NULL,
   SAPOWER FLOAT(126) NULL,
   SATRX NUMBER(5, 0) NULL,
   SATIME DATE NULL,
   SACOMMENT VARCHAR2(400) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT PK_KZLSECTORSANTEN UNIQUE (ANTENNNO);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT CKC_RECO23_K34 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004916 CHECK ("ANTENNNO" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004917 CHECK ("ANTENNID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004918 CHECK ("SECTORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004919 CHECK ("SAHEIGHT" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004920 CHECK ("SAAZIMUTH" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004921 CHECK ("SATILT" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004922 CHECK ("SAPOWER" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004923 CHECK ("SATRX" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004924 CHECK ("SATIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSECTORSANTENNS
  ADD CONSTRAINT SYS_C004925 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLSTATIONS
  (STATIONSID NUMBER(10, 0) NULL,
   CONTROLLERID NUMBER(10, 0) NULL,
   STATIONSCI NUMBER(10, 0) NULL,
   STATIONSNUMBER NUMBER(10, 0) NULL,
   STATIONSNAME VARCHAR2(400) NULL,
   STATIONSSNAME VARCHAR2(80) NULL,
   STATIONSLONGITUDE FLOAT(126) NULL,
   STATIONSLATITUDE FLOAT(126) NULL,
   STATIONSTYPE NUMBER(10, 0) NULL,
   STATIONSADDRESS VARCHAR2(800) NULL,
   STATIONSTIME DATE NULL,
   STATIONSCOMMENT VARCHAR2(1020) NULL,
   STATIONSEQUIPMENT VARCHAR2(200) NULL,
   STATIONSVENDOR VARCHAR2(200) NULL,
   STATIONSCASES NUMBER(5, 0) NULL,
   STATIONSSTATUS NUMBER(5, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT PK_KZLSTATIONS UNIQUE (STATIONSID);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT CKC_REC_KZL24 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004926 CHECK ("STATIONSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004927 CHECK ("STATIONSNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004928 CHECK ("STATIONSNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004929 CHECK ("STATIONSLONGITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004930 CHECK ("STATIONSLATITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONS
  ADD CONSTRAINT SYS_C004931 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.KZLSTATIONSINREG
  (REGIONID NUMBER(10, 0) NULL,
   STATIONSID NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.KZLSTATIONSINREG
  ADD CONSTRAINT PK_KZLSTATIONSINRE UNIQUE (REGIONID, STATIONSID);
 
ALTER TABLE INFORMIX.KZLSTATIONSINREG
  ADD CONSTRAINT CKC_RECORDST_KZLS2 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.KZLSTATIONSINREG
  ADD CONSTRAINT SYS_C005018 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONSINREG
  ADD CONSTRAINT SYS_C005019 CHECK ("STATIONSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.KZLSTATIONSINREG
  ADD CONSTRAINT SYS_C005020 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.LAWYEARNOTEONPOSITION
  (ID NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   IDPOSITION NUMBER(10, 0) NULL,
   IDCONTRACT NUMBER(10, 0) NULL,
   NOTE CHAR(2000) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LAWYEARNOTEONPOSITION
  ADD CONSTRAINT PK_LAWYEARNOTEONPO UNIQUE (ID);
 
ALTER TABLE INFORMIX.LAWYEARNOTEONPOSITION
  ADD CONSTRAINT SYS_C005133 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LAWYEARNOTEONPOSITION
  ADD CONSTRAINT SYS_C005134 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LAWYEARNOTEONPOSITION
  ADD CONSTRAINT SYS_C005135 CHECK ("IDPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.LAYERS
  (ID NUMBER(10, 0) NULL,
   MAPID NUMBER(10, 0) NULL,
   NAME CHAR(512) NULL,
   TABLE_NAME CHAR(512) NULL,
   POSITION NUMBER(10, 0) NULL,
   VISIBILITY CHAR(4) NULL);

ALTER TABLE INFORMIX.LAYERS
  ADD CONSTRAINT PK_LAYERS UNIQUE (ID);
 
ALTER TABLE INFORMIX.LAYERS
  ADD CONSTRAINT CKC_VISIBILI_LAYER CHECK ((visibility IS NULL ) OR (visibility IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.LAYERS
  ADD CONSTRAINT SYS_C004955 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LAYERS
  ADD CONSTRAINT SYS_C004956 CHECK ("MAPID" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEABONENTBAN
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   BAN NUMBER(10, 0) NULL,
   BIL_ACCOUNTTYPE CHAR(12) NULL,
   BIL_ACCTYPENAME CHAR(120) NULL,
   BIL_INN CHAR(80) NULL,
   BIL_NAME CHAR(600) NULL,
   BIL_CONTRSTATUS CHAR(8) NULL,
   BIL_CONTRSTNAME CHAR(80) NULL,
   BIL_CONTRSTDATE DATE NULL,
   BIL_STARTSERVDATE DATE NULL,
   BIL_SUSPDATE DATE NULL,
   BIL_BILLADDRESS CHAR(400) NULL,
   FLAGWORKPIE CHAR(4) NULL,
   USEALLBEN CHAR(4) NULL,
   BALANS NUMBER(15, 2) NULL,
   MAINPOSITION NUMBER(10, 0) NULL,
   PROCTYPE CHAR(4) NULL,
   USEINACTS CHAR(4) NULL,
   TECHCONTRACT CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT PK_LEASEABONENTBAN UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT CKC_FLAGWORK_PIEA CHECK (flagworkpie IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT CKC_USEALLBE_LEASE CHECK (useallben IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT CKC_USEINACT_LEASE CHECK (useinacts IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT CKC_TECHCONT_LEASE CHECK (techcontract IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT CKC_PROCTYPE_LEASE CHECK ((proctype IS NULL ) OR (proctype IN ('A' ,'B' ,'C' ,'D' ,'E' )) );
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004041 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004042 CHECK ("BAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004043 CHECK ("FLAGWORKPIE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004044 CHECK ("USEALLBEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004045 CHECK ("USEINACTS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBAN
  ADD CONSTRAINT SYS_C004046 CHECK ("TECHCONTRACT" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEABONENTBEN
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   BEN NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.LEASEABONENTBEN
  ADD CONSTRAINT PK_LEASEABONENTBEN UNIQUE (LEASEDOCUMENT, BEN);
 
ALTER TABLE INFORMIX.LEASEABONENTBEN
  ADD CONSTRAINT SYS_C004536 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTBEN
  ADD CONSTRAINT SYS_C004537 CHECK ("BEN" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEABONENTDNOP
  (IDABONENTDNOP NUMBER(10, 0) NULL,
   LEASEBILL NUMBER(10, 0) NULL,
   PAYPOS NUMBER(10, 0) NULL,
   SUMLINKUSD NUMBER(15, 2) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT PK_LEASEABONENTDNO UNIQUE (IDABONENTDNOP);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT CKC_FLAGWORK_LDNP CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT CKC_RECORDST_LEASE CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004538 CHECK ("IDABONENTDNOP" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004539 CHECK ("LEASEBILL" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004540 CHECK ("PAYPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004541 CHECK ("SUMLINKUSD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004542 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTDNOP
  ADD CONSTRAINT SYS_C004543 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEABONENTPHONES
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   PHONENUMBER CHAR(120) NULL,
   PHONESTATUS CHAR(4) NULL,
   NETSTANDARD CHAR(4) NULL,
   IMSI CHAR(80) NULL,
   BEN NUMBER(5, 0) NULL,
   SOC CHAR(36) NULL,
   SOCDESCRIPTION VARCHAR2(1020) NULL,
   SOCSTARTDATE DATE NULL);

ALTER TABLE INFORMIX.LEASEABONENTPHONES
  ADD CONSTRAINT PK_LEASEABONENTPHO UNIQUE (LEASEDOCUMENT, PHONENUMBER);
 
ALTER TABLE INFORMIX.LEASEABONENTPHONES
  ADD CONSTRAINT SYS_C004356 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEABONENTPHONES
  ADD CONSTRAINT SYS_C004357 CHECK ("PHONENUMBER" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEARENDAAGRMNTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   MAINLEASEDOCUMENT NUMBER(10, 0) NULL,
   ISACTIVE CHAR(4) NULL,
   NUMBEROFPHONES NUMBER(10, 0) NULL,
   CALCELECTROTYPE CHAR(4) NULL,
   ISDOGELECTRO CHAR(4) NULL,
   DOGELECTONUM CHAR(80) NULL,
   DOGELECTRODATE DATE NULL,
   NUMBEROFPHONESTEMP NUMBER(10, 0) NULL,
   MAINPOSITION NUMBER(10, 0) NULL,
   OFFICIALDOC CHAR(4) NULL,
   ACTIVECONTRACT NUMBER(10, 0) NULL,
   MAINRESOURCE NUMBER(10, 0) NULL,
   SUMTRAFIC NUMBER(15, 2) NULL,
   SUMACCEPT NUMBER(15, 2) NULL,
   SUMPAY NUMBER(15, 2) NULL,
   NEEDOFFICIALDOC CHAR(4) NULL,
   BASESTARTDATE DATE NULL,
   BASEENDDATE DATE NULL,
   CUSTOMEROLD NUMBER(10, 0) NULL,
   HAVEIOACT CHAR(4) NULL,
   IOACTNUMBER CHAR(80) NULL,
   IOACTDATE DATE NULL);

ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT PK_LEASEARENDAAGRM UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_NEEDOFFI_LEASE CHECK (needofficialdoc IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_ISACTIVE_LEASE CHECK (isactive IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_ISDOGELE_LEASE CHECK (isdogelectro IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_OFFICIAL_LEASE CHECK (officialdoc IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_CALCELEC_LEASE CHECK (calcelectrotype IN ('1' ,'2' ,'3' ,'4' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT CKC_HAVEIOACT_LEASE CHECK (haveioact IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004036 CHECK ("CALCELECTROTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004037 CHECK ("ISDOGELECTRO" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004038 CHECK ("OFFICIALDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004039 CHECK ("NEEDOFFICIALDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004040 CHECK ("HAVEIOACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004034 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEARENDAAGRMNTS
  ADD CONSTRAINT SYS_C004035 CHECK ("ISACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECALCRATES
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RATE NUMBER(15, 4) NULL,
   BYHAND CHAR(4) NULL,
   ACT NUMBER(10, 0) NULL,
   SOURCE NUMBER(10, 0) NULL,
   RATEOLD NUMBER(15, 4) NULL,
   SOURCEOLD NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT PK_LEASECALCRATES UNIQUE (LEASEDOCPOSITION, CURRENCY);
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT CKC_BYHND_LESR CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT CKC_SOURCE_LEASE CHECK (source IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT SYS_C004230 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT SYS_C004231 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT SYS_C004232 CHECK ("RATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT SYS_C004233 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATES
  ADD CONSTRAINT SYS_C004234 CHECK ("SOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECALCRATESSLD
  (LEASECONTRACT NUMBER(10, 0) NULL,
   SALDATE DATE NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RATE NUMBER(15, 4) NULL,
   BYHAND CHAR(4) NULL,
   ACT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT PK_LSCALCRATESLD UNIQUE (LEASECONTRACT, SALDATE, RESOURCE_, CURRENCY);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004496 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004497 CHECK ("SALDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004498 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004499 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004500 CHECK ("RATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECALCRATESSLD
  ADD CONSTRAINT SYS_C004501 CHECK ("BYHAND" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECHARGERULES
  (LEASERULE NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   SUMM NUMBER(15, 2) NULL,
   CHARGEPERIOD CHAR(4) NULL,
   CHARGEDATERULE CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT PK_LEASECHARGERULE UNIQUE (LEASERULE);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT CKC_CHARGEPE_LEASE CHECK (chargeperiod IN ('M' ,'Q' ,'Y' ));
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT CKC_CHARGEDA_LEASE CHECK (chargedaterule IN ('S' ,'E' ));
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003941 CHECK ("LEASERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003942 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003943 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003944 CHECK ("SUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003945 CHECK ("CHARGEPERIOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGERULES
  ADD CONSTRAINT SYS_C003946 CHECK ("CHARGEDATERULE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECHARGES
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   LEASERULE NUMBER(10, 0) NULL,
   REMAINDERSUM NUMBER(15, 2) NULL,
   REMAINDERRATE2RUR NUMBER(15, 4) NULL,
   BYHANDRATERUR CHAR(4) NULL,
   BILLNUMBER CHAR(120) NULL,
   BILLDATE DATE NULL,
   ISSCHETFAKT1 CHAR(4) NULL,
   ISSCHETFAKT2 CHAR(4) NULL,
   ISSCHETFAKT3 CHAR(4) NULL,
   USEDINCWACT NUMBER(10, 0) NULL,
   ISWORKACT1 CHAR(4) NULL,
   ISWORKACT2 CHAR(4) NULL,
   ISWORKACT3 CHAR(4) NULL,
   OSTSUMFORSF NUMBER(15, 2) NULL,
   FLAGSF NUMBER(10, 0) NULL,
   OSTSUMFORCWACT NUMBER(15, 2) NULL,
   FLAGCWACT NUMBER(10, 0) NULL,
   NEEDCWACT CHAR(4) NULL,
   NEEDSF CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT PK_LEASECHARGES UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_BYHANDRA_LEASE CHECK (byhandraterur IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_ISSCHET1_LEASE CHECK (isschetfakt1 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_ISSCHET2_LEASE CHECK (isschetfakt2 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_ISSCHET3_LEASE CHECK (isschetfakt3 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_LCH_ACTWORK1 CHECK (isworkact1 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_LCH_ACTWORK2 CHECK (isworkact2 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_LCH_ACTWORK3 CHECK (isworkact3 IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_FLAGSF_LEASE CHECK (flagsf IN (0 ,1 ,2 ,10 ,4 ,3 ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_FLAGCWAC_LEASE CHECK (flagcwact IN (0 ,1 ,2 ,10 ,4 ,3 ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_NEEDCWAC_LEASE CHECK (needcwact IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT CKC_NEEDSF_LEASE CHECK (needsf IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003985 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003986 CHECK ("REMAINDERSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003987 CHECK ("BYHANDRATERUR" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003988 CHECK ("ISSCHETFAKT1" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003989 CHECK ("ISSCHETFAKT2" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003990 CHECK ("ISSCHETFAKT3" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003991 CHECK ("ISWORKACT1" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003992 CHECK ("ISWORKACT2" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003993 CHECK ("ISWORKACT3" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003994 CHECK ("OSTSUMFORSF" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003995 CHECK ("FLAGSF" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003996 CHECK ("OSTSUMFORCWACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003997 CHECK ("FLAGCWACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003998 CHECK ("NEEDCWACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECHARGES
  ADD CONSTRAINT SYS_C003999 CHECK ("NEEDSF" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECONTRACTPROBLEM
  (IDPROBLEM NUMBER(10, 0) NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   NOTE CHAR(2000) NULL,
   TYPEPROBLEM NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT PK_LEASECONTRACTPR UNIQUE (IDPROBLEM);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT CKC_STAT_LE_PR CHECK (state IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT CKC_TYPEPROB_LEASE CHECK (typeproblem IN (1 ,2 ,3 ,4 ,5 ,6 ));
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005829 CHECK ("IDPROBLEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005830 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005831 CHECK ("NOTE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005832 CHECK ("TYPEPROBLEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005833 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005834 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005835 CHECK ("EXECUTOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005836 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005837 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005838 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTPROBLEM
  ADD CONSTRAINT SYS_C005839 CHECK ("MODIFIEDBY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECONTRACTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   CONTRACTTYPE CHAR(4) NULL,
   CONTRACTSTATE CHAR(4) NULL,
   OLDORGCUSTOMER NUMBER(10, 0) NULL,
   OLDORGEXECUTOR NUMBER(10, 0) NULL,
   CUSTNAME CHAR(320) NULL,
   EXECNAME CHAR(320) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL,
   DOCTEXT BLOB NULL,
   DOCFILENAME CHAR(320) NULL,
   DOCCOMMENT CHAR(2000) NULL,
   DOCSUBJECT VARCHAR2(1020) NULL,
   EXTENDTYPE CHAR(4) NULL,
   EXTENDPERIOD CHAR(4) NULL,
   REPORTPERIOD CHAR(4) NULL,
   ECONOMIST NUMBER(10, 0) NULL,
   CURRENCY1 NUMBER(10, 0) NULL,
   CURRENCY2 NUMBER(10, 0) NULL,
   SUMM1 NUMBER(15, 2) NULL,
   SUMM2 NUMBER(15, 2) NULL,
   RATECALCRULE CHAR(4) NULL,
   RATECALCRULEDAY NUMBER(5, 0) NULL,
   RATEDELTA NUMBER(15, 2) NULL,
   MANAGER NUMBER(10, 0) NULL,
   DATECLOSE DATE NULL,
   CHARGENDS CHAR(4) NULL,
   ORGOWNER NUMBER(10, 0) NULL,
   CHANGEENDDATE CHAR(4) NULL,
   EXTENDYEARS NUMBER(5, 0) NULL,
   EXTENDMONTHES NUMBER(5, 0) NULL,
   EXTENDDAYS NUMBER(5, 0) NULL,
   RATEFIX NUMBER(15, 4) NULL,
   ISRATELIMIT CHAR(4) NULL,
   RATENDS NUMBER(15, 2) NULL,
   NALOGAGENT CHAR(4) NULL,
   ORGCUSTOMER NUMBER(10, 0) NULL,
   ORGEXECUTOR NUMBER(10, 0) NULL,
   RATELIMITMIN NUMBER(15, 4) NULL,
   RATELIMITMAX NUMBER(15, 4) NULL,
   BUCHDOCNUMBER CHAR(160) NULL,
   HAVEDOCSIGNED CHAR(4) NULL,
   HAVEDOCSIGNEDCUSTOMER CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT PK_LEASECONTRACTS UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_CONSTAT_LEASE CHECK (contractstate IN ('A' ,'B' ,'C' ,'D' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_EXTENDTY_LEASE CHECK (extendtype IN ('N' ,'A' ,'M' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_REPORTPE_LEASE CHECK (reportperiod IN ('M' ,'Q' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_CHANGEEN_LEASE CHECK (changeenddate IN ('A' ,'H' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_CONTRACT_LEASE CHECK (contracttype IN ('A' ,'B' ,'C' ,'D' ,'S' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_EXTENDPE_LEASE CHECK ((extendperiod IS NULL ) OR (extendperiod IN ('Y' ,'M' ,'D' ,'T' )) );
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_RATECALC_LEASE CHECK ((ratecalcrule IS NULL ) OR (ratecalcrule IN ('A' ,'B' ,'C' ,'D' ,'E' ,'F' ,'G' ,'H' ,'I' ,'K' )) );
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_ISRATELI_LEASE CHECK (isratelimit IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_HAVEDOCS_LEASE CHECK (havedocsigned IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT CKC_HAVEDCUS_LEASE CHECK (havedocsignedcustomer IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005654 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005655 CHECK ("CONTRACTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005656 CHECK ("CONTRACTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005657 CHECK ("CUSTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005658 CHECK ("EXECNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005659 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005660 CHECK ("ENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005661 CHECK ("EXTENDTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005662 CHECK ("REPORTPERIOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005663 CHECK ("CHARGENDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005664 CHECK ("CHANGEENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005665 CHECK ("ISRATELIMIT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005666 CHECK ("NALOGAGENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005667 CHECK ("ORGCUSTOMER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005668 CHECK ("ORGEXECUTOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005669 CHECK ("HAVEDOCSIGNED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASECONTRACTS
  ADD CONSTRAINT SYS_C005670 CHECK ("HAVEDOCSIGNEDCUSTOMER" IS NOT NULL);

CREATE TABLE INFORMIX.LEASECONTRACTS_OLD
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   DOCFILENAME CHAR(320) NULL,
   DOCTEXT BLOB NULL);

CREATE TABLE INFORMIX.LEASEDNOP
  (LEASECHARGE NUMBER(10, 0) NULL,
   LEASEPAYMENT NUMBER(10, 0) NULL,
   CHARGESUM NUMBER(15, 2) NULL,
   CHARGERURRATE NUMBER(15, 4) NULL,
   CHARGERURSUM NUMBER(15, 2) NULL,
   PAYRURSUM NUMBER(15, 2) NULL,
   SOURCE CHAR(4) NULL,
   ACT NUMBER(10, 0) NULL,
   USEDINACT NUMBER(10, 0) NULL,
   BYHANDCHRGRATERUR CHAR(4) NULL,
   PAYRURNDS NUMBER(15, 2) NULL,
   CHARGENDS NUMBER(15, 2) NULL,
   CHARGERURNDS NUMBER(15, 2) NULL,
   CURRLINK NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT PK_LEASEDNOP UNIQUE (LEASECHARGE, LEASEPAYMENT);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT CKC_SOURCE_LDNOP CHECK (source IN ('B' ,'H' ,'A' ));
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT CKC_BYHANDCH_LEASE CHECK (byhandchrgraterur IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004316 CHECK ("LEASECHARGE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004317 CHECK ("LEASEPAYMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004318 CHECK ("CHARGESUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004319 CHECK ("PAYRURSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004320 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP
  ADD CONSTRAINT SYS_C004321 CHECK ("BYHANDCHRGRATERUR" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEDNOP2
  (LEASECHARGE NUMBER(10, 0) NULL,
   LEASEPAYMENT NUMBER(10, 0) NULL,
   CHARGESUM NUMBER(15, 2) NULL,
   CHARGERURRATE NUMBER(15, 4) NULL,
   CHARGERURSUM NUMBER(15, 2) NULL,
   PAYRURSUM NUMBER(15, 2) NULL,
   SOURCE CHAR(4) NULL,
   ACT NUMBER(10, 0) NULL,
   USEDINACT NUMBER(10, 0) NULL,
   BYHANDCHRGRATERUR CHAR(4) NULL,
   PAYRURNDS NUMBER(15, 2) NULL,
   CHARGENDS NUMBER(15, 2) NULL,
   CHARGERURNDS NUMBER(15, 2) NULL,
   CURRLINK NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT PK_LEASEDNOP2 UNIQUE (LEASECHARGE, LEASEPAYMENT);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006057 CHECK ("LEASECHARGE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006058 CHECK ("LEASEPAYMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006059 CHECK ("CHARGESUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006060 CHECK ("PAYRURSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006061 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDNOP2
  ADD CONSTRAINT SYS_C006062 CHECK ("BYHANDCHRGRATERUR" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEDOCOPERJORNAL
  (RECORDID NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   WHO NUMBER(10, 0) NULL,
   WHEN_ DATE NULL,
   TYPE_ CHAR(4) NULL,
   WHAT VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT PK_LEASEDOCOPERJOR UNIQUE (RECORDID);
 
ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT SYS_C004340 CHECK ("RECORDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT SYS_C004341 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT SYS_C004342 CHECK ("WHO" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT SYS_C004343 CHECK ("WHEN_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCOPERJORNAL
  ADD CONSTRAINT SYS_C004344 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEDOCPOSITIONS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   DOCPOSTYPE CHAR(4) NULL,
   DATE_ DATE NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   SOURCE CHAR(4) NULL,
   DOCPOSVID CHAR(4) NULL,
   BEGINDATE DATE NULL,
   ENDDATE DATE NULL,
   ACT NUMBER(10, 0) NULL,
   USEDINACT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   SUMM NUMBER(15, 2) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   SUMNDS NUMBER(15, 2) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   WILLBEINACT NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   DOCPOSGROUP NUMBER(10, 0) NULL,
   IDSLDDETAIL NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT PK_LEASEDOCPOSITIO UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT CKC_DOCPOSTY_LEASE CHECK (docpostype IN ('C' ,'P' ,'O' ));
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT CKC_SOURCE_LDP CHECK (source IN ('A' ,'B' ,'P' ,'M' ));
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT CKC_DOCPOSVI_LEASE CHECK (docposvid IN ('Q' ,'K' ,'Z' ,'N' ,'C' ));
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT CKC_DOCPOSGROUP_LD CHECK (docposgroup IN (0 ,1 ));
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003962 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003963 CHECK ("DOCPOSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003964 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003965 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003966 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003967 CHECK ("DOCPOSVID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003968 CHECK ("BEGINDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003969 CHECK ("ENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003970 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003971 CHECK ("SUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003972 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003973 CHECK ("SUMNDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCPOSITIONS
  ADD CONSTRAINT SYS_C003974 CHECK ("DOCPOSGROUP" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEDOCUMENTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   DOCDATE DATE NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCTYPE CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   FLAGOLDSYSTEM NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   IDREGISTRYDOC NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT PK_LEASEDOCUMENTS UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT CKC_DOCTYPE_LEASE CHECK (doctype IN ('A' ,'N' ,'P' ,'M' ,'Q' ,'F' ,'K' ,'B' ,'S' ));
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT SYS_C004153 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT SYS_C004154 CHECK ("DOCDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT SYS_C004155 CHECK ("DOCNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT SYS_C004156 CHECK ("DOCTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEDOCUMENTS
  ADD CONSTRAINT SYS_C004157 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEELCHARGES
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   IDELECTRICITYMETER CHAR(160) NULL);

ALTER TABLE INFORMIX.LEASEELCHARGES
  ADD CONSTRAINT PK_LEASEELCHARGES UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.LEASEELCHARGES
  ADD CONSTRAINT SYS_C004502 CHECK ("LEASEDOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMRCNTPRIOR
  (REGLAMENT NUMBER(10, 0) NULL,
   CONTRACT1 NUMBER(10, 0) NULL,
   CONTRACT2 NUMBER(10, 0) NULL,
   PRIORITY NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.LEASEMRCNTPRIOR
  ADD CONSTRAINT PK_LEASEMRCNTPRIOR UNIQUE (REGLAMENT, CONTRACT1, CONTRACT2);
 
ALTER TABLE INFORMIX.LEASEMRCNTPRIOR
  ADD CONSTRAINT SYS_C004222 CHECK ("REGLAMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMRCNTPRIOR
  ADD CONSTRAINT SYS_C004223 CHECK ("CONTRACT1" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMRCNTPRIOR
  ADD CONSTRAINT SYS_C004224 CHECK ("CONTRACT2" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMRCNTPRIOR
  ADD CONSTRAINT SYS_C004225 CHECK ("PRIORITY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTACTINFO
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   LASTCALCTIME DATE NULL);

ALTER TABLE INFORMIX.LEASEMUTACTINFO
  ADD CONSTRAINT PK_LEASEMUTACTINFO UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEMUTACTINFO
  ADD CONSTRAINT SYS_C004570 CHECK ("LEASEDOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTCONTRACTS
  (REGLAMENT NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEMUTCONTRACTS
  ADD CONSTRAINT PK_LEASEMUTCONTRAC UNIQUE (REGLAMENT, CONTRACT, RESOURCE_);
 
ALTER TABLE INFORMIX.LEASEMUTCONTRACTS
  ADD CONSTRAINT SYS_C004313 CHECK ("REGLAMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTCONTRACTS
  ADD CONSTRAINT SYS_C004314 CHECK ("CONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTCONTRACTS
  ADD CONSTRAINT SYS_C004315 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTUALACTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   MUTUALREGLAMENT NUMBER(10, 0) NULL,
   ACTSTATE CHAR(4) NULL,
   ACTSTARTDATE DATE NULL,
   ACTENDDATE DATE NULL,
   HEADER VARCHAR2(1020) NULL,
   FOOTER VARCHAR2(1020) NULL,
   ISTEMP CHAR(4) NULL,
   ISSCHETFAKT CHAR(4) NULL,
   ACTTEXT BLOB NULL,
   ACTFILENAME CHAR(320) NULL,
   MUTUALNDS CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT PK_LEASEMUTUALACTS UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT CKC_ISTEMP_LEASE CHECK (istemp IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT CKC_ISSCHETF_LMA CHECK (isschetfakt IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT CKC_MUTUALND_LEASE CHECK (mutualnds IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT CKC_ACTSTATE_LEASE CHECK (actstate IN ('O' ,'R' ,'C' ,'V' ,'1' ,'2' ,'3' ,'4' ,'5' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005051 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005052 CHECK ("MUTUALREGLAMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005053 CHECK ("ACTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005054 CHECK ("ACTSTARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005055 CHECK ("ACTENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005056 CHECK ("ISTEMP" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005057 CHECK ("ISSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALACTS
  ADD CONSTRAINT SYS_C005058 CHECK ("MUTUALNDS" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTUALPHONE
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   PHONE CHAR(120) NULL);

ALTER TABLE INFORMIX.LEASEMUTUALPHONE
  ADD CONSTRAINT PK_LEASEMUTUALPHON UNIQUE (LEASEDOCUMENT, PHONE);
 
ALTER TABLE INFORMIX.LEASEMUTUALPHONE
  ADD CONSTRAINT SYS_C004338 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALPHONE
  ADD CONSTRAINT SYS_C004339 CHECK ("PHONE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTUALRGLMNT
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   MUTUALPERIOD CHAR(4) NULL,
   MAINCURRENCY NUMBER(10, 0) NULL,
   ADDITIONALCURRENCY NUMBER(10, 0) NULL,
   COMMONRATE CHAR(4) NULL,
   CALCRATETYPE CHAR(4) NULL,
   ACTTYPE CHAR(4) NULL,
   MUTSTATE CHAR(4) NULL,
   DUTYRATERULE CHAR(4) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL);

ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT PK_LEASEMUTUALRGLM UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_COMMONRA_LEASE CHECK (commonrate IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_CALCRATE_LEASE CHECK ((calcratetype IS NULL ) OR (calcratetype IN ('B' ,'E' )) );
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_ACTTYPE_LEASE CHECK (acttype IN ('A' ,'M' ,'S' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_MUTSTATE_LEASE CHECK (mutstate IN ('A' ,'B' ,'C' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_DUTYRATE_LEASE CHECK (dutyraterule IN ('A' ,'B' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT CKC_MUTUALPE_LEASE CHECK (mutualperiod IN ('M' ,'Q' ,'Y' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004393 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004394 CHECK ("MUTUALPERIOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004395 CHECK ("MAINCURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004396 CHECK ("COMMONRATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004397 CHECK ("ACTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004398 CHECK ("MUTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004399 CHECK ("DUTYRATERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004400 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRGLMNT
  ADD CONSTRAINT SYS_C004401 CHECK ("ENDDATE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEMUTUALRULES
  (REGLAMENT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CHARGEDATERULE CHAR(4) NULL,
   PAYDATERULE CHAR(4) NULL,
   DOPCHARGDATRUL CHAR(4) NULL,
   RATETYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT PK_LEASEMUTUALRULE UNIQUE (REGLAMENT, RESOURCE_);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT CKC_DOPCHARG_LEASE CHECK (dopchargdatrul IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT CKC_CHRGED_LEASE CHECK (chargedaterule IN ('A' ,'B' ,'C' ,'D' ,'E' ,'F' ,'G' ,'H' ,'J' ,'K' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT CKC_PAYDTR_LEASE CHECK (paydaterule IN ('A' ,'B' ,'C' ,'K' ));
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004307 CHECK ("REGLAMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004308 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004309 CHECK ("CHARGEDATERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004310 CHECK ("PAYDATERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004311 CHECK ("DOPCHARGDATRUL" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEMUTUALRULES
  ADD CONSTRAINT SYS_C004312 CHECK ("RATETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEONPOSITIONS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEONPOSITIONS
  ADD CONSTRAINT PK_LEASEONPOSITION UNIQUE (LEASEDOCUMENT, STORAGEPLACE);
 
ALTER TABLE INFORMIX.LEASEONPOSITIONS
  ADD CONSTRAINT SYS_C004305 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEONPOSITIONS
  ADD CONSTRAINT SYS_C004306 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAYMENTS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   SUMMRUB NUMBER(15, 2) NULL,
   NDS_RUB NUMBER(15, 2) NULL,
   LEASERULE NUMBER(10, 0) NULL,
   PAYMENTTYPE CHAR(4) NULL,
   RURREMAINDER NUMBER(15, 2) NULL,
   PAYRATE NUMBER(15, 4) NULL,
   PAYMENTSTATE CHAR(4) NULL,
   BYAUTORUR CHAR(4) NULL,
   ISSCHETFAKT CHAR(4) NULL,
   OFFICEMEMONUMBER CHAR(160) NULL,
   OTVWORKER NUMBER(10, 0) NULL,
   FLAGOPLNDS CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT PK_LEASEPAYMENTS UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT CKC_PAYMENTT_LEASE CHECK (paymenttype IN ('O' ,'P' ));
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT CKC_BYAUTORU_LEASE CHECK (byautorur IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT CKC_ISSCHETF_LEASE CHECK (isschetfakt IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT CKC_PAYMENTS_LEASE CHECK (paymentstate IN ('G' ,'M' ,'P' ,'N' ,'K' ,'V' ));
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT CKC_FLAGOPLN_LEASE CHECK (flagoplnds IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003979 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003980 CHECK ("PAYMENTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003981 CHECK ("PAYMENTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003982 CHECK ("BYAUTORUR" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003983 CHECK ("ISSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYMENTS
  ADD CONSTRAINT SYS_C003984 CHECK ("FLAGOPLNDS" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAYOFFICEMEMO
  (IDOFFICEMEMO NUMBER(10, 0) NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   BEGINDATE DATE NULL,
   ENDDATE DATE NULL,
   FLAGAVANS CHAR(4) NULL,
   FLAG3FACE CHAR(4) NULL,
   SUM_ NUMBER(15, 2) NULL,
   NDS NUMBER(15, 2) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RULERATE NUMBER(10, 0) NULL,
   ORGACC NUMBER(10, 0) NULL,
   PURPOSE VARCHAR2(1020) NULL,
   PP104 VARCHAR2(160) NULL,
   PP105 VARCHAR2(160) NULL,
   PPQUEUE NUMBER(10, 0) NULL,
   PPSTATUS VARCHAR2(160) NULL,
   STATE CHAR(4) NULL,
   SUMRUB NUMBER(15, 2) NULL,
   NDSRUB NUMBER(15, 2) NULL,
   BILLDATE DATE NULL,
   BILLNUMBER CHAR(120) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   RATECALCRULE CHAR(4) NULL,
   RATECALCRULEDAY NUMBER(5, 0) NULL,
   RATEDELTA NUMBER(15, 2) NULL,
   RATEDATE DATE NULL,
   RATEVALUE NUMBER(15, 4) NULL,
   RATENDS NUMBER(15, 2) NULL,
   IDZPNFS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT PK_LEASEPAYOFFICEM UNIQUE (IDOFFICEMEMO);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT CKC_FLAGAVAN_LEASE CHECK (flagavans IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT CKC_FLAG3FAC_LEASE CHECK (flag3face IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT CKC_RULERATE_LEASE CHECK (rulerate IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT CKC_STATE_LEASEOFFICEMEMO CHECK (state IN ('1' ,'2' ,'3' ));
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT CKC_RATECALC_LEASE_M CHECK ((ratecalcrule IS NULL ) OR (ratecalcrule IN ('A' ,'B' ,'C' ,'D' ,'E' ,'F' ,'G' ,'H' ,'I' ,'K' )) );
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005620 CHECK ("RULERATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005621 CHECK ("ORGACC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005622 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005623 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005624 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005625 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005626 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005611 CHECK ("IDOFFICEMEMO" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005612 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005613 CHECK ("BEGINDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005614 CHECK ("ENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005615 CHECK ("FLAGAVANS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005616 CHECK ("FLAG3FACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005617 CHECK ("SUM_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005618 CHECK ("NDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO
  ADD CONSTRAINT SYS_C005619 CHECK ("CURRENCY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  (IDOFFICEMEMO NUMBER(10, 0) NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   BEGINDATE DATE NULL,
   ENDDATE DATE NULL,
   FLAGAVANS CHAR(4) NULL,
   FLAG3FACE CHAR(4) NULL,
   SUM_ NUMBER(15, 2) NULL,
   NDS NUMBER(15, 2) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RULERATE CHAR(4) NULL,
   ORGACC NUMBER(10, 0) NULL,
   PURPOSE VARCHAR2(1020) NULL,
   PP104 VARCHAR2(160) NULL,
   PP105 VARCHAR2(160) NULL,
   PPQUEUE NUMBER(10, 0) NULL,
   PPSTATUS VARCHAR2(160) NULL,
   STATE CHAR(4) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005554 CHECK ("IDOFFICEMEMO" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005555 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005556 CHECK ("BEGINDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005557 CHECK ("ENDDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005558 CHECK ("FLAGAVANS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005559 CHECK ("FLAG3FACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005560 CHECK ("SUM_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005561 CHECK ("NDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005562 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005563 CHECK ("ORGACC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005564 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005565 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005566 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005567 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYOFFICEMEMO_OLD
  ADD CONSTRAINT SYS_C005568 CHECK ("MODIFIEDBY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAYORDER
  (LEASEDOCPOSITION NUMBER(10, 0) NULL,
   ORGACC NUMBER(10, 0) NULL,
   PAYPURPOSE VARCHAR2(1020) NULL,
   BILLDATE DATE NULL,
   BILLNUMBER CHAR(120) NULL,
   PPTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEPAYORDER
  ADD CONSTRAINT PK_LEASEPAYORDER UNIQUE (LEASEDOCPOSITION);
 
ALTER TABLE INFORMIX.LEASEPAYORDER
  ADD CONSTRAINT CKC_PPTYPE_LPO CHECK (pptype IN ('A' ,'B' ));
 
ALTER TABLE INFORMIX.LEASEPAYORDER
  ADD CONSTRAINT SYS_C004335 CHECK ("LEASEDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYORDER
  ADD CONSTRAINT SYS_C004336 CHECK ("PAYPURPOSE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYORDER
  ADD CONSTRAINT SYS_C004337 CHECK ("PPTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAYRULES
  (LEASERULE NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   SUMM NUMBER(15, 2) NULL,
   PAYPERIOD CHAR(4) NULL,
   PAYTYPE CHAR(4) NULL,
   PPTYPE CHAR(4) NULL,
   ORGTOPAY NUMBER(10, 0) NULL,
   ORGACC NUMBER(10, 0) NULL,
   PAYBEFOREDATE NUMBER(5, 0) NULL,
   PAYPURPOSE VARCHAR2(1020) NULL,
   PAYTERMS VARCHAR2(1020) NULL,
   SEPARATENDSPAY CHAR(4) NULL,
   VALIDDATEPAY CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT PK_LEASEPAYRULES UNIQUE (LEASERULE);
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT CKC_PAYPERIO_LEASE CHECK ((payperiod IS NULL ) OR (payperiod IN ('M' ,'Q' ,'Y' )) );
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT CKC_SEPARATE_LEASE CHECK ((separatendspay IS NULL ) OR (separatendspay IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT CKC_VALIDDAT_LEASE CHECK ((validdatepay IS NULL ) OR (validdatepay IN ('A' ,'B' ,'C' ,'D' ,'E' )) );
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT CKC_PAYTYPE_LEASE CHECK (paytype IN ('P' ,'M' ,'B' ));
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT CKC_PPTYPE_LEASE CHECK ((pptype IS NULL ) OR (pptype IN ('A' ,'B' ,'C' )) );
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT SYS_C003937 CHECK ("LEASERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT SYS_C003938 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT SYS_C003939 CHECK ("SUMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAYRULES
  ADD CONSTRAINT SYS_C003940 CHECK ("PAYTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPAY2BILL
  (LEASEMUTUALACT NUMBER(10, 0) NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   SUMMUSD NUMBER(15, 2) NULL,
   FLAGWORKPIE CHAR(4) NULL,
   RECORD_STATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT PK_LEASEPAY2BILL UNIQUE (LEASEMUTUALACT, LEASECONTRACT);
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT CKC_FLAGWORK_LEASE CHECK (flagworkpie IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT CKC_REC_S_LPAY CHECK (record_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT SYS_C004084 CHECK ("LEASEMUTUALACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT SYS_C004085 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT SYS_C004086 CHECK ("SUMMUSD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT SYS_C004087 CHECK ("FLAGWORKPIE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPAY2BILL
  ADD CONSTRAINT SYS_C004088 CHECK ("RECORD_STATUS" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  (IDRECORD NUMBER(10, 0) NULL,
   IDMAN NUMBER(10, 0) NULL,
   IDREGION NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT PK_LEASEPEOPLEFORR UNIQUE (IDRECORD);
 
ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT CKC_TYPE_LEASE CHECK (TYPE_ = 1 );
 
ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT SYS_C005647 CHECK ("IDRECORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT SYS_C005648 CHECK ("IDMAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT SYS_C005649 CHECK ("IDREGION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPEOPLEFORREPORTS
  ADD CONSTRAINT SYS_C005650 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPOSSCHETFAKT
  (IDPOSSCHETFAKT NUMBER(10, 0) NULL,
   IDSCHETFAKT NUMBER(10, 0) NULL,
   POSORDER NUMBER(10, 0) NULL,
   RESOURCENRI NUMBER(10, 0) NULL,
   NAMERESOURCE VARCHAR2(1020) NULL,
   EDIZM CHAR(40) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   SUMFREETAX NUMBER(15, 2) NULL,
   EXCISE NUMBER(15, 2) NULL,
   RATENDS NUMBER(5, 2) NULL,
   SUMNDS NUMBER(15, 2) NULL,
   SUMWITHTAX NUMBER(15, 2) NULL,
   COUNTRY CHAR(120) NULL,
   NUMGTD CHAR(120) NULL);

ALTER TABLE INFORMIX.LEASEPOSSCHETFAKT
  ADD CONSTRAINT PK_LEASEPOSSCHETFA UNIQUE (IDPOSSCHETFAKT);
 
ALTER TABLE INFORMIX.LEASEPOSSCHETFAKT
  ADD CONSTRAINT SYS_C004639 CHECK ("IDPOSSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPOSSCHETFAKT
  ADD CONSTRAINT SYS_C004640 CHECK ("IDSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPOSSCHETFAKT
  ADD CONSTRAINT SYS_C004641 CHECK ("POSORDER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPOSSCHETFAKT
  ADD CONSTRAINT SYS_C004642 CHECK ("RESOURCENRI" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEPRIORCNTFORACT
  (IDACT NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   PRIORITY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEPRIORCNTFORACT
  ADD CONSTRAINT PK_LEASEPRIORCNTF1 UNIQUE (IDACT, LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LEASEPRIORCNTFORACT
  ADD CONSTRAINT SYS_C005676 CHECK ("IDACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPRIORCNTFORACT
  ADD CONSTRAINT SYS_C005677 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEPRIORCNTFORACT
  ADD CONSTRAINT SYS_C005678 CHECK ("PRIORITY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  (IDREGISTRYDOC NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   TYPEREGISTRY NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   OWNER NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   TYPETRANSFERREGISTRY NUMBER(10, 0) NULL,
   IDREGISTRYDOCPURCHER NUMBER(10, 0) NULL,
   IDREGISTRYDOCACCOUNTANT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT PK_LEASEREGISTRYBU UNIQUE (IDREGISTRYDOC);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT CKC_TYPETRAN_LEASE CHECK (typetransferregistry IN (1 ,2 ));
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT CKC_STATE_LEASEREGDOCS CHECK (state IN ('1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ));
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT CKC_TYPEREGI_LEASE CHECK (typeregistry IN (1 ,2 ,3 ,4 ,5 ));
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005329 CHECK ("IDREGISTRYDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005330 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005331 CHECK ("TYPEREGISTRY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005332 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005333 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005334 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005335 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005336 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005337 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCS
  ADD CONSTRAINT SYS_C005338 CHECK ("TYPETRANSFERREGISTRY" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  (HISTORYID NUMBER(10, 0) NULL,
   IDREGISTRYDOC NUMBER(10, 0) NULL,
   ACTIONTIME DATE NULL,
   STATE CHAR(4) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT PK_LEASEREGISTRYHS UNIQUE (HISTORYID);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT SYS_C003645 CHECK ("HISTORYID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT SYS_C003646 CHECK ("IDREGISTRYDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT SYS_C003647 CHECK ("ACTIONTIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT SYS_C003648 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEREGISTRYBUCHDOCSHISTORY
  ADD CONSTRAINT SYS_C003649 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.LEASERESBIL2NRI
  (IDRESBILLING CHAR(160) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   BILLRESNAME CHAR(400) NULL,
   RECORD_STATUS CHAR(4) NULL,
   IDRECORD NUMBER(10, 0) NULL,
   TYPERES CHAR(4) NULL,
   ISACTIVE CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT PK_LEASERESBIL2NRI UNIQUE (IDRECORD);
 
ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT CKC_RECORD_S_LRBL CHECK (record_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT SYS_C004080 CHECK ("IDRESBILLING" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT SYS_C004081 CHECK ("BILLRESNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT SYS_C004082 CHECK ("RECORD_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESBIL2NRI
  ADD CONSTRAINT SYS_C004083 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.LEASERESOURCES
  (RESOURCE_ NUMBER(10, 0) NULL,
   NEEDCWACT CHAR(4) NULL,
   USEINARENDACONTRACT CHAR(4) NULL,
   USEINABONENTCONTRACT CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT PK_LEASERESOURCES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT CKC_NEEDCWAC_LEAS2 CHECK (needcwact IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT CKC_USEINARE_LEASE CHECK (useinarendacontract IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT CKC_USEINABO_LEASE CHECK (useinabonentcontract IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT SYS_C005760 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT SYS_C005761 CHECK ("NEEDCWACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT SYS_C005762 CHECK ("USEINARENDACONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERESOURCES
  ADD CONSTRAINT SYS_C005763 CHECK ("USEINABONENTCONTRACT" IS NOT NULL);

CREATE TABLE INFORMIX.LEASERULES
  (LEASERULE NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   RULETYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASERULES
  ADD CONSTRAINT PK_LEASERULES UNIQUE (LEASERULE);
 
ALTER TABLE INFORMIX.LEASERULES
  ADD CONSTRAINT CKC_RULETYPE_LEASE CHECK (ruletype IN ('N' ,'P' ));
 
ALTER TABLE INFORMIX.LEASERULES
  ADD CONSTRAINT SYS_C004402 CHECK ("LEASERULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERULES
  ADD CONSTRAINT SYS_C004403 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASERULES
  ADD CONSTRAINT SYS_C004404 CHECK ("RULETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESALDO
  (LEASECONTRACT NUMBER(10, 0) NULL,
   SALDATE DATE NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   MAINCURRENCY NUMBER(10, 0) NULL,
   ADDITIONALCURRENCY NUMBER(10, 0) NULL,
   ACT NUMBER(10, 0) NULL,
   MAINSUM NUMBER(15, 2) NULL,
   ADDITIONALSUM NUMBER(15, 2) NULL,
   MAINNDSSUM NUMBER(15, 2) NULL,
   ADDITIONALNDSSUM NUMBER(15, 2) NULL,
   ISTEMP CHAR(4) NULL,
   SALDOBYHAND CHAR(4) NULL,
   NOTES VARCHAR2(1020) NULL,
   MSUMCALC NUMBER(15, 2) NULL,
   MNDSCALC NUMBER(15, 2) NULL,
   ASUMCALC NUMBER(15, 2) NULL,
   ANDSCALC NUMBER(15, 2) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   MAINACTNDSSUM NUMBER(15, 2) NULL,
   MACTNDSSUM NUMBER(15, 2) NULL,
   ADDITIONALACTNDSSUM NUMBER(15, 2) NULL,
   AACTNDSSUM NUMBER(15, 2) NULL,
   ARATENDS NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT PK_LEASESALDO UNIQUE (LEASECONTRACT, SALDATE, RESOURCE_);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT CKC_ISTEMP_LSLD CHECK (istemp IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT CKC_SALDOBYH_LEASE CHECK (saldobyhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004322 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004323 CHECK ("SALDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004324 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004325 CHECK ("MAINCURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004326 CHECK ("MAINSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004327 CHECK ("MAINNDSSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004328 CHECK ("ISTEMP" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDO
  ADD CONSTRAINT SYS_C004329 CHECK ("SALDOBYHAND" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESALDODETAIL
  (IDSLDDETAIL NUMBER(10, 0) NULL,
   LEASECONTRACT NUMBER(10, 0) NULL,
   SALDATE DATE NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   MAINSUM NUMBER(15, 2) NULL,
   MAINNDSSUM NUMBER(15, 2) NULL,
   ADDITIONALSUM NUMBER(15, 2) NULL,
   ADDITIONALNDSSUM NUMBER(15, 2) NULL,
   RATENDS NUMBER(15, 2) NULL,
   GROUPREC NUMBER(10, 0) NULL,
   SALDOBYHAND CHAR(4) NULL,
   NOTES VARCHAR2(1020) NULL,
   MSUMCALC NUMBER(15, 2) NULL,
   MNDSCALC NUMBER(15, 2) NULL,
   ASUMCALC NUMBER(15, 2) NULL,
   ANDSCALC NUMBER(15, 2) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   MAINCURRENCY NUMBER(10, 0) NULL,
   ADDITIONALCURRENCY NUMBER(10, 0) NULL,
   ACT NUMBER(10, 0) NULL,
   FLAGSOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT PK_LEASESALDODETAI UNIQUE (IDSLDDETAIL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT CKC_FLAGSOUR_LEASE CHECK (flagsource IN (0 ,1 ));
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT CKC_GROUPREC_LEASE CHECK (grouprec IN (0 ,1 ));
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006069 CHECK ("IDSLDDETAIL" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006070 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006071 CHECK ("SALDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006072 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006073 CHECK ("MAINSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006074 CHECK ("MAINNDSSUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006075 CHECK ("RATENDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006076 CHECK ("GROUPREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006077 CHECK ("SALDOBYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006078 CHECK ("MAINCURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESALDODETAIL
  ADD CONSTRAINT SYS_C006079 CHECK ("FLAGSOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESCHETFAKT
  (IDSCHETFAKT NUMBER(10, 0) NULL,
   IDCONTRACT NUMBER(10, 0) NULL,
   IDAKT NUMBER(10, 0) NULL,
   IDCURRENCY NUMBER(10, 0) NULL,
   NUMBERSCHETFAKT CHAR(120) NULL,
   DATESCHETFAKT DATE NULL,
   BASEDOCNUMBER CHAR(120) NULL,
   BASEDOCDATE DATE NULL,
   DOCTEXT BLOB NULL,
   DOCFILENAME CHAR(320) NULL,
   DATESTARTSF DATE NULL,
   DATEENDSF DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   IDREGISTRYDOC NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT PK_LEASESCHETFAKT UNIQUE (IDSCHETFAKT);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT CKC_STATE_LEASE CHECK (state IN ('O' ,'R' ,'1' ,'2' ,'3' ,'4' ,'5' ,'V' ));
 
ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT SYS_C005082 CHECK ("IDSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT SYS_C005083 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT SYS_C005084 CHECK ("IDCURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT
  ADD CONSTRAINT SYS_C005085 CHECK ("STATE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESCHETFAKT2CHARGE
  (IDSCHETFAKT NUMBER(10, 0) NULL,
   IDCHARGE NUMBER(10, 0) NULL,
   LINKSUMCHARGE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.LEASESCHETFAKT2CHARGE
  ADD CONSTRAINT PK_LEASESCHETFAKT2 UNIQUE (IDSCHETFAKT, IDCHARGE);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT2CHARGE
  ADD CONSTRAINT SYS_C005321 CHECK ("IDSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT2CHARGE
  ADD CONSTRAINT SYS_C005322 CHECK ("IDCHARGE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESCHETFAKT2CHARGE
  ADD CONSTRAINT SYS_C005323 CHECK ("LINKSUMCHARGE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESFSTATE
  (IDREC NUMBER(10, 0) NULL,
   IDSCHETFAKT NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   WHEN_ DATE NULL,
   WHO NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT PK_LEASESFSTATE UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT SYS_C005324 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT SYS_C005325 CHECK ("IDSCHETFAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT SYS_C005326 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT SYS_C005327 CHECK ("WHEN_" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASESFSTATE
  ADD CONSTRAINT SYS_C005328 CHECK ("WHO" IS NOT NULL);

CREATE TABLE INFORMIX.LEASESUBSCRIPTMAN
  (USETYPE NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   FILIAL NUMBER(10, 0) NULL,
   FIO VARCHAR2(320) NULL,
   JOB VARCHAR2(1020) NULL,
   ORGBEELINE NUMBER(10, 0) NULL,
   TEXT VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.LEASESUBSCRIPTMAN
  ADD CONSTRAINT PK_LEASESUBSCRIPTMAN UNIQUE (USETYPE, DATESTART, FILIAL, ORGBEELINE);

CREATE TABLE INFORMIX.LEASESUBSCRIPTTYPE
  (USETYPE NUMBER(10, 0) NULL,
   PURPOSENOTES VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.LEASESUBSCRIPTTYPE
  ADD CONSTRAINT PK_LEASESUBSCRIPTTYPE UNIQUE (USETYPE);

CREATE TABLE INFORMIX.LEASETASKJOURNAL
  (TASKJOURNAL NUMBER(10, 0) NULL,
   TASKSTART NUMBER(10, 0) NULL,
   JRNDATE DATE NULL,
   JRNACTION NUMBER(10, 0) NULL,
   JRNTYPE CHAR(4) NULL,
   JRNMESSAGE VARCHAR2(1020) NULL,
   LEASERULE NUMBER(10, 0) NULL,
   LEASEDOCUMENT NUMBER(10, 0) NULL,
   LEASEDOCPOSITION NUMBER(10, 0) NULL,
   LEASEDOCPOSITION2 NUMBER(10, 0) NULL,
   DATE1 DATE NULL,
   DATE2 DATE NULL,
   SUMM1 NUMBER(15, 2) NULL,
   SUMM2 NUMBER(15, 2) NULL,
   CURRENCY1 NUMBER(10, 0) NULL,
   CURRENCY2 NUMBER(10, 0) NULL,
   RESOURCE1 NUMBER(10, 0) NULL,
   RESOURCE2 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT PK_LEASETASKJOURNA UNIQUE (TASKJOURNAL);
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT CKC_JRNTYPE_LEASE CHECK (jrntype IN ('E' ,'W' ,'S' ));
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT SYS_C004330 CHECK ("TASKJOURNAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT SYS_C004331 CHECK ("TASKSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT SYS_C004332 CHECK ("JRNDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT SYS_C004333 CHECK ("JRNACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKJOURNAL
  ADD CONSTRAINT SYS_C004334 CHECK ("JRNTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASETASKSSTARTS
  (TASKSTART NUMBER(10, 0) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL,
   WORKER NUMBER(10, 0) NULL,
   TASKTYPE CHAR(4) NULL,
   DATE1 DATE NULL,
   DATE2 DATE NULL,
   ECONOMIST NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT PK_LEASETASKSSTART UNIQUE (TASKSTART);
 
ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT CKC_TASKTYPE_LEASE CHECK (tasktype IN ('1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9' ,'L' ,'H' ,'B' ));
 
ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT SYS_C004030 CHECK ("TASKSTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT SYS_C004031 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT SYS_C004032 CHECK ("WORKER" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASETASKSSTARTS
  ADD CONSTRAINT SYS_C004033 CHECK ("TASKTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEVACTNDS
  (ACT NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   SUMNDS NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.LEASEVACTNDS
  ADD CONSTRAINT PK_LEASEVACTNDS UNIQUE (ACT, CONTRACT);
 
ALTER TABLE INFORMIX.LEASEVACTNDS
  ADD CONSTRAINT SYS_C003572 CHECK ("ACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEVACTNDS
  ADD CONSTRAINT SYS_C003573 CHECK ("CONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEVACTNDS
  ADD CONSTRAINT SYS_C003574 CHECK ("SUMNDS" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEVPAYMENT
  (ACT NUMBER(10, 0) NULL,
   DEBETCONTRACT NUMBER(10, 0) NULL,
   CREDITCONTRACT NUMBER(10, 0) NULL,
   SUMM NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.LEASEVPAYMENT
  ADD CONSTRAINT PK_LEASEVPAYMENT UNIQUE (ACT, DEBETCONTRACT, CREDITCONTRACT);
 
ALTER TABLE INFORMIX.LEASEVPAYMENT
  ADD CONSTRAINT SYS_C004226 CHECK ("ACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEVPAYMENT
  ADD CONSTRAINT SYS_C004227 CHECK ("DEBETCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEVPAYMENT
  ADD CONSTRAINT SYS_C004228 CHECK ("CREDITCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEVPAYMENT
  ADD CONSTRAINT SYS_C004229 CHECK ("SUMM" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEWORKTIMEKOEF
  (ID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   VALUE NUMBER(15, 2) NULL);
 
ALTER TABLE INFORMIX.LEASEWORKTIMEKOEF
  ADD CONSTRAINT SYS_C005136 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEWORKTIMEKOEF
  ADD CONSTRAINT SYS_C005137 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.LEASEZP
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   IDZPNFS NUMBER(10, 0) NULL,
   ISACTIVE CHAR(4) NULL);

ALTER TABLE INFORMIX.LEASEZP
  ADD CONSTRAINT PK_LEASEZP UNIQUE (LEASEDOCUMENT, IDZPNFS);
 
ALTER TABLE INFORMIX.LEASEZP
  ADD CONSTRAINT CKCISACTIVELEASEZP CHECK (isactive IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.LEASEZP
  ADD CONSTRAINT SYS_C004691 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEZP
  ADD CONSTRAINT SYS_C004692 CHECK ("IDZPNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.LEASEZP
  ADD CONSTRAINT SYS_C004693 CHECK ("ISACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.LICENCIESONPOS
  (IDLICENCE NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   TYPELICENCE NUMBER(10, 0) NULL,
   DATELICENCE DATE NULL,
   NOTELICENCE CHAR(2000) NULL,
   DOCNUMBER VARCHAR2(160) NULL,
   DOCDATE DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LICENCIESONPOS
  ADD CONSTRAINT PK_LICENCIESONPOS UNIQUE (IDLICENCE);
 
ALTER TABLE INFORMIX.LICENCIESONPOS
  ADD CONSTRAINT SYS_C005174 CHECK ("IDLICENCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.LICENCIESONPOS
  ADD CONSTRAINT SYS_C005175 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.LINKUSERNRI2MS
  (USERNRI NUMBER(10, 0) NULL,
   USERMS CHAR(320) NULL,
   PASSWORDMS CHAR(320) NULL);
 
ALTER TABLE INFORMIX.LINKUSERNRI2MS
  ADD CONSTRAINT SYS_C004786 CHECK ("USERNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.LINKUSERNRI2MS
  ADD CONSTRAINT SYS_C004787 CHECK ("USERMS" IS NOT NULL);

CREATE TABLE INFORMIX.LISTEVPALOV
  (IDREC NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL,
   TYPE_ VARCHAR2(200) NULL,
   STATE VARCHAR2(200) NULL,
   ERROR VARCHAR2(1020) NULL);
 
ALTER TABLE INFORMIX.LISTEVPALOV
  ADD CONSTRAINT SYS_C003695 CHECK ("IDREC" IS NOT NULL);

CREATE TABLE INFORMIX.LNKACCNRI2NFS
  (ACCOUNTID NUMBER(10, 0) NULL,
   ACCOUNT CHAR(160) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   IDVENDOR NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL,
   FLAG CHAR(4) NULL);

ALTER TABLE INFORMIX.LNKACCNRI2NFS
  ADD CONSTRAINT PK_LNKACCNRI2NFS UNIQUE (ACCOUNTID);
 
ALTER TABLE INFORMIX.LNKACCNRI2NFS
  ADD CONSTRAINT SYS_C005595 CHECK ("ACCOUNTID" IS NOT NULL);

CREATE TABLE INFORMIX.LNKORGNRI2NFS
  (ORGANIZATION_ NUMBER(10, 0) NULL,
   IDVENDOR NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LNKORGNRI2NFS
  ADD CONSTRAINT PK_LNKORGNRI2NFS UNIQUE (ORGANIZATION_);
 
ALTER TABLE INFORMIX.LNKORGNRI2NFS
  ADD CONSTRAINT SYS_C005594 CHECK ("ORGANIZATION_" IS NOT NULL);

CREATE TABLE INFORMIX.LNKORGNRI2VENDORSITE
  (IDCONTRACT NUMBER(10, 0) NULL,
   IDORGNRI NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LNKORGNRI2VENDORSITE
  ADD CONSTRAINT PK_LNKORGNRI2VENDO UNIQUE (IDCONTRACT, IDORGNRI);
 
ALTER TABLE INFORMIX.LNKORGNRI2VENDORSITE
  ADD CONSTRAINT SYS_C005943 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LNKORGNRI2VENDORSITE
  ADD CONSTRAINT SYS_C005944 CHECK ("IDORGNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.LNKORGNRI2VENDORSITE
  ADD CONSTRAINT SYS_C005945 CHECK ("IDVENDORSITE" IS NOT NULL);

CREATE TABLE INFORMIX.LNKZONE
  (NETZONE NUMBER(10, 0) NULL,
   CODE CHAR(160) NULL);

CREATE TABLE INFORMIX.LOANACTSGETPUT
  (IDACT NUMBER(10, 0) NULL,
   LOANCONTRACT NUMBER(10, 0) NULL,
   NUMBERACT CHAR(160) NULL,
   DATEACT DATE NULL,
   OURMAN NUMBER(10, 0) NULL,
   OTHERMAN VARCHAR2(1020) NULL,
   TYPEACT CHAR(4) NULL,
   IDLEASEBILL NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LOANACTSGETPUT
  ADD CONSTRAINT PK_LOANACTSGETPUT UNIQUE (IDACT);
 
ALTER TABLE INFORMIX.LOANACTSGETPUT
  ADD CONSTRAINT SYS_C005447 CHECK ("IDACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.LOANACTSGETPUT
  ADD CONSTRAINT SYS_C005448 CHECK ("LOANCONTRACT" IS NOT NULL);

CREATE TABLE INFORMIX.LOANCONTRACTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   REASON VARCHAR2(1020) NULL,
   PLANSUM NUMBER(15, 2) NULL,
   PLANCURR NUMBER(10, 0) NULL,
   MAINPOSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.LOANCONTRACTS
  ADD CONSTRAINT PK_LOANCONTRACTS UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.LOANCONTRACTS
  ADD CONSTRAINT SYS_C005432 CHECK ("LEASEDOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.LOGINLOG
  (LOGID NUMBER(10, 0) NULL,
   OPERATORID NUMBER(10, 0) NULL,
   ACTIVEOPERATORID NUMBER(10, 0) NULL,
   LOGINTIME DATE NULL);

ALTER TABLE INFORMIX.LOGINLOG
  ADD CONSTRAINT PK_LOGINLOG UNIQUE (LOGID);
 
ALTER TABLE INFORMIX.LOGINLOG
  ADD CONSTRAINT SYS_C005694 CHECK ("LOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LOGINLOG
  ADD CONSTRAINT SYS_C005695 CHECK ("OPERATORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LOGINLOG
  ADD CONSTRAINT SYS_C005696 CHECK ("ACTIVEOPERATORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.LOGINLOG
  ADD CONSTRAINT SYS_C005697 CHECK ("LOGINTIME" IS NOT NULL);

CREATE TABLE INFORMIX.LU_DAY
  (DAY_DATE DATE NULL,
   MONTH_ID NUMBER(10, 0) NULL,
   QUARTER_ID NUMBER(5, 0) NULL,
   YEAR_ID NUMBER(5, 0) NULL,
   PREV_DAY_DATE DATE NULL,
   LM_DAY_DATE DATE NULL,
   LQ_DAY_DATE DATE NULL,
   LY_DAY_DATE DATE NULL);
 
ALTER TABLE INFORMIX.LU_DAY
  ADD CONSTRAINT SYS_C005367 CHECK ("DAY_DATE" IS NOT NULL);

CREATE TABLE INFORMIX.MAILLOG
  (ID NUMBER(10, 0) NULL,
   SERVICENAME CHAR(100) NULL,
   MAN NUMBER(10, 0) NULL,
   MSGTYPE CHAR(4) NULL,
   LOGDATE DATE NULL,
   ERRORTEXT VARCHAR2(4000) NULL,
   MAILFROM VARCHAR2(1020) NULL,
   MAILTO VARCHAR2(4000) NULL,
   SUBJECT VARCHAR2(4000) NULL,
   MODIFIED DATE NULL);

ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT PK_MAILLOG UNIQUE (ID);
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT CKC_MSGTYPE_MAILL CHECK (msgtype IN ('E' ,'I' ,'W' ,'S' ));
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT SYS_C005909 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT SYS_C005910 CHECK ("SERVICENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT SYS_C005911 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT SYS_C005912 CHECK ("MSGTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAILLOG
  ADD CONSTRAINT SYS_C005913 CHECK ("LOGDATE" IS NOT NULL);

CREATE TABLE INFORMIX.MAINORGANIZATIONS
  (MAINORGANIZATION NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   SHORTNAME VARCHAR2(1020) NULL,
   INN CHAR(160) NULL,
   LEGALADDRESS VARCHAR2(1020) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MAINORGANIZATIONS
  ADD CONSTRAINT PK_MAINORGANIZATIONS UNIQUE (MAINORGANIZATION);
 
ALTER TABLE INFORMIX.MAINORGANIZATIONS
  ADD CONSTRAINT SYS_C005319 CHECK ("MAINORGANIZATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAINORGANIZATIONS
  ADD CONSTRAINT SYS_C005320 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.MAN_NEW
  (MANNEW NUMBER(10, 0) NULL,
   TABNUM NUMBER(10, 0) NULL,
   OLDMAN NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.MAN_OLD
  (MANOLD NUMBER(10, 0) NULL,
   TABNUM NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.MANPOS
  (POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   POS NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.MANUF2EQUIP
  (MANUFID NUMBER(10, 0) NULL,
   EQUIPTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.MANUF2EQUIP
  ADD CONSTRAINT PK_MANUF2EQUIP UNIQUE (MANUFID, EQUIPTYPE);
 
ALTER TABLE INFORMIX.MANUF2EQUIP
  ADD CONSTRAINT CKC_EQUIPTYP_MANUF CHECK (equiptype IN ('B' ,'C' ,'O' ,'W' ,'R' ,'L' ,'D' ,'M' ));
 
ALTER TABLE INFORMIX.MANUF2EQUIP
  ADD CONSTRAINT SYS_C005342 CHECK ("MANUFID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MANUF2EQUIP
  ADD CONSTRAINT SYS_C005343 CHECK ("EQUIPTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.MAPS
  (ID NUMBER(10, 0) NULL,
   NAME CHAR(256) NULL,
   DESCRIPTION CHAR(512) NULL,
   DEFINITION BLOB NULL,
   VISIBILITY CHAR(4) NULL,
   PREVIEW CHAR(4) NULL);

ALTER TABLE INFORMIX.MAPS
  ADD CONSTRAINT PK_MAPS UNIQUE (ID);
 
ALTER TABLE INFORMIX.MAPS
  ADD CONSTRAINT CKC_VISIBILI_MAPS CHECK ((visibility IS NULL ) OR (visibility IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.MAPS
  ADD CONSTRAINT CKC_PREVIEW_MAPS CHECK ((preview IS NULL ) OR (preview IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.MAPS
  ADD CONSTRAINT SYS_C005059 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAPS
  ADD CONSTRAINT SYS_C005060 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.MAPS2NETZONES
  (NETZONEID NUMBER(10, 0) NULL,
   MAPID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MAPS2NETZONES
  ADD CONSTRAINT PK_M2NZ_420325 UNIQUE (NETZONEID, MAPID);
 
ALTER TABLE INFORMIX.MAPS2NETZONES
  ADD CONSTRAINT SYS_C005389 CHECK ("NETZONEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAPS2NETZONES
  ADD CONSTRAINT SYS_C005390 CHECK ("MAPID" IS NOT NULL);

CREATE TABLE INFORMIX.MAPS2REGIONS
  (MAPID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MAPS2REGIONS
  ADD CONSTRAINT PK_MAPS2REGIONS UNIQUE (MAPID, REGIONID);
 
ALTER TABLE INFORMIX.MAPS2REGIONS
  ADD CONSTRAINT SYS_C004958 CHECK ("MAPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAPS2REGIONS
  ADD CONSTRAINT SYS_C004959 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.MAPS2SUPREGIONS
  (MAPID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MAPS2SUPREGIONS
  ADD CONSTRAINT PK_MAPS2SUPREGIONS UNIQUE (MAPID, SUPREGID);
 
ALTER TABLE INFORMIX.MAPS2SUPREGIONS
  ADD CONSTRAINT SYS_C004960 CHECK ("MAPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MAPS2SUPREGIONS
  ADD CONSTRAINT SYS_C004961 CHECK ("SUPREGID" IS NOT NULL);

CREATE TABLE INFORMIX.MARINA_PERMITBS3
  (IDREC NUMBER(10, 0) NULL,
   IDFILIAL NUMBER(10, 0) NULL,
   GSM NUMBER(10, 0) NULL,
   N_SITE_NRI NUMBER(10, 0) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LAT FLOAT(126) NULL,
   LON FLOAT(126) NULL,
   TYPEBS900 VARCHAR2(200) NULL,
   TYPEBS1800 VARCHAR2(200) NULL,
   SS900_NUM VARCHAR2(200) NULL,
   SS900_DATE DATE NULL,
   SS900_EXPIRE DATE NULL,
   SS900_FILE VARCHAR2(1020) NULL,
   SS1800_NUM VARCHAR2(200) NULL,
   SS1800_DATE DATE NULL,
   SS1800_EXPIRE DATE NULL,
   SS1800_FILE VARCHAR2(1020) NULL,
   RES900_NUM VARCHAR2(200) NULL,
   RES900_DATE DATE NULL,
   RES900_EXPIRE DATE NULL,
   RES1800_NUM VARCHAR2(200) NULL,
   RES1800_DATE DATE NULL,
   RES1800_EXPIRE DATE NULL,
   I NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   BSID900 NUMBER(10, 0) NULL,
   BSID1800 NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.MARINA_PERMITBS3
  ADD CONSTRAINT SYS_C005640 CHECK ("IDREC" IS NOT NULL);

CREATE TABLE INFORMIX.MFS_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MFS_CONFIGURATIONS
  ADD CONSTRAINT PK_MFS_CONFIGURATI UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.MFS_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003685 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.MISSEDOPTIC
  (IDREC NUMBER(10, 0) NULL,
   DATALOADID NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   SHEETNAME CHAR(1020) NULL,
   NAME CHAR(1020) NULL,
   CREATEDATE DATE NULL);

ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT PK_MISSEDOPTIC UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT CKC_TYPE_MISSE CHECK (TYPE_ IN (0 ,1 ));
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT SYS_C005413 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT SYS_C005414 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT SYS_C005415 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT SYS_C005416 CHECK ("SHEETNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.MISSEDOPTIC
  ADD CONSTRAINT SYS_C005417 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.MISSINGPOSITIONLOG
  (ID NUMBER(10, 0) NULL,
   POSTYPE CHAR(4) NULL,
   REGIONID NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   NUMBER_ CHAR(320) NULL,
   NAME VARCHAR2(1020) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   STATE CHAR(4) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.MISSINGPOSITIONLOG
  ADD CONSTRAINT PK_MISSINGPOSITION UNIQUE (ID);
 
ALTER TABLE INFORMIX.MISSINGPOSITIONLOG
  ADD CONSTRAINT CKC_POSTYPE_MISSI CHECK ((postype IS NULL ) OR (postype IN ('B' ,'O' ,'W' ,'C' ,'A' )) );
 
ALTER TABLE INFORMIX.MISSINGPOSITIONLOG
  ADD CONSTRAINT CKC_STATE_MISSI CHECK ((state IS NULL ) OR (state IN ('P' ,'E' ,'D' )) );
 
ALTER TABLE INFORMIX.MISSINGPOSITIONLOG
  ADD CONSTRAINT SYS_C003405 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.MSUSERS
  (MSUCODE NUMBER(10, 0) NULL,
   MSUSER CHAR(320) NULL,
   MSPASSWORD CHAR(320) NULL);

ALTER TABLE INFORMIX.MSUSERS
  ADD CONSTRAINT PK_MSUSERS UNIQUE (MSUCODE);
 
ALTER TABLE INFORMIX.MSUSERS
  ADD CONSTRAINT SYS_C004721 CHECK ("MSUCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.MSUSERS
  ADD CONSTRAINT SYS_C004722 CHECK ("MSUSER" IS NOT NULL);

CREATE TABLE INFORMIX.NAMEDVALUES
  (ID CHAR(200) NULL,
   CHARVALUE VARCHAR2(1020) NULL,
   DATEVALUE DATE NULL,
   INTVALUE NUMBER(10, 0) NULL,
   DECIMALVALUE NUMBER(15, 3) NULL,
   NOTE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.NAMEDVALUES
  ADD CONSTRAINT U100_1 UNIQUE (ID);
 
ALTER TABLE INFORMIX.NAMEDVALUES
  ADD CONSTRAINT SYS_C004047 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.NETWORKS
  (PLMN NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   NETTYPE NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT PK_NETWORKS UNIQUE (PLMN);
 
ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT CKC_NETTYPE_NETWO CHECK (nettype IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT SYS_C005193 CHECK ("PLMN" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT SYS_C005194 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT SYS_C005195 CHECK ("NETTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETWORKS
  ADD CONSTRAINT SYS_C005196 CHECK ("SUPREGID" IS NOT NULL);

CREATE TABLE INFORMIX.NETZONES
  (NETZONE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ZONECODE CHAR(20) NULL,
   REGIONID NUMBER(10, 0) NULL,
   TCODE NUMBER(2, 0) NULL,
   IDTCODE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT PK_NETZONES UNIQUE (NETZONE);
 
ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT SYS_C004141 CHECK ("NETZONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT SYS_C004142 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT SYS_C004143 CHECK ("ZONECODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT SYS_C004144 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NETZONES
  ADD CONSTRAINT SYS_C004145 CHECK ("TCODE" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_ACCOUNTBUCH
  (ACCOUNTBUCH VARCHAR2(600) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT PK_NFS_ACCOUNTBUCH UNIQUE (ACCOUNTBUCH);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT CKC_FLAGWORK_100 CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT CKC_RECORDST_100 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT SYS_C005248 CHECK ("ACCOUNTBUCH" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT SYS_C005249 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTBUCH
  ADD CONSTRAINT SYS_C005250 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_ACCOUNTS
  (IDACCOUNTNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   IDBANKNFS NUMBER(10, 0) NULL,
   ACCOUNTNUM CHAR(120) NULL,
   CURRACC CHAR(60) NULL,
   IDACCOUNTNRI NUMBER(10, 0) NULL,
   INACTIVE_DATE DATE NULL,
   PRIMARY_FLAG CHAR(4) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL);

ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT PK_NFS_ACCOUNTS UNIQUE (IDACCOUNTNFS, IDVENDORSITENFS);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT CKC_FLAGWORK_NFS_A CHECK ((flagworknri IS NULL ) OR (flagworknri IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT CKC_RECORDST_NFS_A CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT SYS_C004864 CHECK ("IDACCOUNTNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT SYS_C004865 CHECK ("IDVENDORSITENFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT SYS_C004866 CHECK ("IDVENDORNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT SYS_C004867 CHECK ("IDBANKNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ACCOUNTS
  ADD CONSTRAINT SYS_C004868 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_BANKACCOUNTS
  (IDBANKACCOUNTNFS NUMBER(10, 0) NULL,
   IDBANKNFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   ACCOUNTNUM CHAR(120) NULL,
   CURRACC CHAR(60) NULL,
   INACTIVE_DATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT PK_NFS_BANKACCOUNT UNIQUE (IDBANKACCOUNTNFS);
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT CKC_FLAGWORK_103 CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT CKC_RECORDST_103 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT SYS_C005259 CHECK ("IDBANKACCOUNTNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT SYS_C005260 CHECK ("IDBANKNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT SYS_C005261 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_BANKACCOUNTS
  ADD CONSTRAINT SYS_C005262 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_BANKS
  (IDBANKNFS NUMBER(10, 0) NULL,
   NAME CHAR(1280) NULL,
   BIK CHAR(120) NULL,
   SWIFT CHAR(120) NULL,
   KORSCHET CHAR(120) NULL,
   ADDRESS CHAR(400) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   USERCREATE NUMBER(10, 0) NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   DATEMODIFY DATE NULL,
   ERRCODENRI NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT PK_NFS_BANKS UNIQUE (IDBANKNFS);
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT CKC_FLAGWORK_NFS_B CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT CKC_RECORDST_NFS_B CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT CKC_ERRCODEN_NFS_B CHECK ((errcodenri IS NULL ) OR (errcodenri IN (0 ,1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT SYS_C004829 CHECK ("IDBANKNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT SYS_C004830 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_BANKS
  ADD CONSTRAINT SYS_C004831 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_CATEGORYBUCH
  (CATEGORYBUCH NUMBER(10, 0) NULL,
   CATEGORYBUCHCODE CHAR(160) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT PK_NFS_CATEGORYBUC UNIQUE (CATEGORYBUCH);
 
ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT CKC_FLAGWORK_101 CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT CKC_RECORDST_101 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT SYS_C005251 CHECK ("CATEGORYBUCH" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT SYS_C005252 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CATEGORYBUCH
  ADD CONSTRAINT SYS_C005253 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_CBO
  (CBO VARCHAR2(160) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT PK_NFS_CBO UNIQUE (CBO);
 
ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT CKC_CBO_FLAGWORK_NFS_C CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT CKC_CBO_RECORDST_NFS_C CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT SYS_C005130 CHECK ("CBO" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT SYS_C005131 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CBO
  ADD CONSTRAINT SYS_C005132 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_CONTRACTS
  (IDCONTRACTNFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   NUMCONTRACTNFS CHAR(160) NULL,
   NUMCONTRACT CHAR(960) NULL,
   SUMCONTRACT NUMBER(15, 2) NULL,
   CURRCONTRACT CHAR(60) NULL,
   RATEDATE DATE NULL,
   RATE NUMBER(15, 4) NULL,
   DATECONTRACT CHAR(400) NULL,
   SEVNUMCONTRACT CHAR(600) NULL,
   TERMSPAY NUMBER(10, 0) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL,
   SUMLIMIT NUMBER(15, 2) NULL,
   STATUSCONTRACT CHAR(100) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   USERCREATE NUMBER(10, 0) NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL,
   DATECREATE DATE NULL);

ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT PK_NFS_CONTRACTS UNIQUE (IDCONTRACTNFS);
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT CKC_FLAGWORK_NFSCT CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT CKC_RECORDST_NFSCT CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT SYS_C004842 CHECK ("IDCONTRACTNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT SYS_C004843 CHECK ("IDORGNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT SYS_C004844 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CONTRACTS
  ADD CONSTRAINT SYS_C004845 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_CURRENCY
  (IDCURRENCYNFS CHAR(60) NULL,
   NAME CHAR(320) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   DATEMODIFY DATE NULL,
   USERCREATE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT PK_NFS_CURRENCY UNIQUE (IDCURRENCYNFS);
 
ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT CKC_FLAGWORK_NFSCR CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT CKC_RECORDST_NFS_C CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT SYS_C004839 CHECK ("IDCURRENCYNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT SYS_C004840 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_CURRENCY
  ADD CONSTRAINT SYS_C004841 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_LNKBANK
  (IDBANKNFS NUMBER(10, 0) NULL,
   IDBANKNRI NUMBER(10, 0) NULL,
   FLAGMAIN CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_LNKBANK
  ADD CONSTRAINT PK_NFS_LNKBANK UNIQUE (IDBANKNFS);
 
ALTER TABLE INFORMIX.NFS_LNKBANK
  ADD CONSTRAINT CKC_FLAGMAIN_NFS_L CHECK (flagmain IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_LNKBANK
  ADD CONSTRAINT SYS_C004869 CHECK ("IDBANKNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKBANK
  ADD CONSTRAINT SYS_C004870 CHECK ("IDBANKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKBANK
  ADD CONSTRAINT SYS_C004871 CHECK ("FLAGMAIN" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_LNKCURRENCY
  (IDCURRENCYNFS CHAR(60) NULL,
   IDCURRENCYNRI NUMBER(10, 0) NULL,
   FLAGMAIN CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_LNKCURRENCY
  ADD CONSTRAINT PK_NFS_LNKCURRENCY UNIQUE (IDCURRENCYNFS);
 
ALTER TABLE INFORMIX.NFS_LNKCURRENCY
  ADD CONSTRAINT CKC_FLAGMAIN_NFSLC CHECK (flagmain IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_LNKCURRENCY
  ADD CONSTRAINT SYS_C004674 CHECK ("IDCURRENCYNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKCURRENCY
  ADD CONSTRAINT SYS_C004675 CHECK ("IDCURRENCYNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKCURRENCY
  ADD CONSTRAINT SYS_C004676 CHECK ("FLAGMAIN" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_LNKPAYS
  (IDPAYNFS NUMBER(10, 0) NULL,
   IDPAYNRI NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_LNKPAYS
  ADD CONSTRAINT PK_NFS_LNKPAYS UNIQUE (IDPAYNFS);
 
ALTER TABLE INFORMIX.NFS_LNKPAYS
  ADD CONSTRAINT SYS_C004680 CHECK ("IDPAYNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKPAYS
  ADD CONSTRAINT SYS_C004681 CHECK ("IDPAYNRI" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_LNKUSER
  (PERSONID NUMBER(10, 0) NULL,
   IDUSERNRI NUMBER(10, 0) NULL,
   FLAGMAIN CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_LNKUSER
  ADD CONSTRAINT PK_NFS_LNKUSER UNIQUE (PERSONID);
 
ALTER TABLE INFORMIX.NFS_LNKUSER
  ADD CONSTRAINT CKC_FLAGMAIN_NFSLU CHECK (flagmain IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_LNKUSER
  ADD CONSTRAINT SYS_C004677 CHECK ("PERSONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKUSER
  ADD CONSTRAINT SYS_C004678 CHECK ("IDUSERNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKUSER
  ADD CONSTRAINT SYS_C004679 CHECK ("FLAGMAIN" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_LNKVENDOR
  (IDORGNRI NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   FLAGMAIN CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_LNKVENDOR
  ADD CONSTRAINT PK_NFS_LNKVENDOR UNIQUE (IDORGNRI);
 
ALTER TABLE INFORMIX.NFS_LNKVENDOR
  ADD CONSTRAINT CKC_FLAGMAIN_NFSLV CHECK (flagmain IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_LNKVENDOR
  ADD CONSTRAINT SYS_C004861 CHECK ("IDORGNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKVENDOR
  ADD CONSTRAINT SYS_C004862 CHECK ("IDVENDORNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_LNKVENDOR
  ADD CONSTRAINT SYS_C004863 CHECK ("FLAGMAIN" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_ORGBEELINE
  (IDORGNFS NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.NFS_ORGBEELINE
  ADD CONSTRAINT PK_NFS_ORGBEELINE UNIQUE (IDORGNFS);
 
ALTER TABLE INFORMIX.NFS_ORGBEELINE
  ADD CONSTRAINT SYS_C005297 CHECK ("IDORGNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ORGBEELINE
  ADD CONSTRAINT SYS_C005298 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_PAYS
  (IDPAYNFS NUMBER(10, 0) NULL,
   IDSFNFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   IDBANKPAYER NUMBER(10, 0) NULL,
   NUMACCOUNTPAYER CHAR(120) NULL,
   IDACCOUNTRECIPIENT NUMBER(10, 0) NULL,
   NUMPAY NUMBER(10, 0) NULL,
   STATEPAY CHAR(800) NULL,
   SUMPAY NUMBER(15, 2) NULL,
   CURRPAY CHAR(60) NULL,
   PURPOSE CHAR(1200) NULL,
   DATEPAY DATE NULL,
   SUMRUBPAY NUMBER(15, 2) NULL,
   DATEMODIFY DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT PK_NFS_PAYS UNIQUE (IDPAYNFS);
 
ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT CKC_FLAGWORK_NFS_P CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT CKC_RECORDST_NFS_P CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT SYS_C004854 CHECK ("IDPAYNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT SYS_C004855 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_PAYS
  ADD CONSTRAINT SYS_C004856 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_QUERY
  (IDQUERY NUMBER(10, 0) NULL,
   REQSTATE CHAR(4) NULL,
   POSTTIME DATE NULL,
   STARTTIME DATE NULL,
   FINISHTIME DATE NULL,
   REQTYPE CHAR(160) NULL,
   SELSTARTDATE DATE NULL,
   SELENDDATE DATE NULL);

ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT PK_NFS_QUERY UNIQUE (IDQUERY);
 
ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT CKC_REQSTATE_NFS_Q CHECK (reqstate IN ('Y' ,'E' ,'P' ,'O' ,'R' ));
 
ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT SYS_C004832 CHECK ("IDQUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT SYS_C004833 CHECK ("REQSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT SYS_C004834 CHECK ("POSTTIME" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERY
  ADD CONSTRAINT SYS_C004835 CHECK ("REQTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_QUERYLOG
  (IDQUERYLOG NUMBER(10, 0) NULL,
   IDQUERY NUMBER(10, 0) NULL,
   TYPEMSG CHAR(4) NULL,
   TXTMSG VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT PK_NFS_QUERYLOG UNIQUE (IDQUERYLOG);
 
ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT CKC_TYPEMSG_NFS_Q CHECK (typemsg IN ('I' ,'E' ,'W' ));
 
ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT SYS_C004857 CHECK ("IDQUERYLOG" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT SYS_C004858 CHECK ("IDQUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT SYS_C004859 CHECK ("TYPEMSG" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_QUERYLOG
  ADD CONSTRAINT SYS_C004860 CHECK ("TXTMSG" IS NOT NULL);

CREATE TABLE INFORMIX.NFSREQ_ERRORLOG
  (IDREC NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   DESCRIPTION CHAR(1020) NULL,
   CREATED DATE NULL,
   RESCODE NUMBER(10, 0) NULL,
   ERRORTYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFSREQ_ERRORLOG
  ADD CONSTRAINT PK_NFSREQ_ERRORLOG UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.NFSREQ_ERRORLOG
  ADD CONSTRAINT SYS_C005991 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQ_ERRORLOG
  ADD CONSTRAINT SYS_C005992 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQ_ERRORLOG
  ADD CONSTRAINT SYS_C005993 CHECK ("DESCRIPTION" IS NOT NULL);

CREATE TABLE INFORMIX.NFSREQPOSITIONS
  (DOCPOSITION NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   RESOURCESET NUMBER(10, 0) NULL,
   STORAGECARDTO NUMBER(10, 0) NULL,
   STORAGECARDFROM NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   CALCQTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   TYPE_ CHAR(4) NULL,
   PARTY CHAR(80) NULL,
   SERIALNUMBER CHAR(80) NULL,
   SOURCEBOXED CHAR(4) NULL,
   RESULTBOXED CHAR(4) NULL,
   SOURCEBROKEN CHAR(4) NULL,
   RESULTBROKEN CHAR(4) NULL,
   SOURCECLOSED CHAR(4) NULL,
   RESULTCLOSED CHAR(4) NULL,
   CONFIGURATION CHAR(320) NULL,
   AGREGATE NUMBER(10, 0) NULL,
   AGREGATESERIAL CHAR(80) NULL,
   OLDAGREGATESERIAL CHAR(80) NULL,
   NOTES VARCHAR2(1020) NULL,
   OLDPLACE CHAR(160) NULL,
   NEWPLACE CHAR(160) NULL,
   INVENTSERIAL CHAR(80) NULL,
   AGREGATECARDFROM NUMBER(10, 0) NULL,
   AGREGATECARDTO NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   ISFICTSERIAL CHAR(4) NULL,
   REALSERIAL CHAR(80) NULL,
   AGREGATERESOURCE NUMBER(10, 0) NULL,
   OLDAGREGATERESOURCE NUMBER(10, 0) NULL,
   VISUALTAGID NUMBER(10, 0) NULL,
   LOCALSERIAL CHAR(80) NULL,
   AGRINVENTSERIAL CHAR(80) NULL,
   AGRLOCSERIAL CHAR(80) NULL,
   OLDAGRINVENTSERIAL CHAR(80) NULL,
   OLDAGRLOCSERIAL CHAR(80) NULL,
   PARENTBTSDOCPOS NUMBER(10, 0) NULL,
   NFSRESOURCE CHAR(1020) NULL);

ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT PK_NFSREQPOSITIONS UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_TYPE_NFSRE CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN ('I' ,'Q' ,'W' ,'C' ,'N' ,'B' ,'P' ,'K' )) );
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_SOURCEBO_NFSRE CHECK (sourceboxed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_RESULTBO_NFSRE CHECK (resultboxed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_SOURCEBR_NFSRE CHECK (sourcebroken IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_RESULTBR_NFSRE CHECK (resultbroken IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_SOURCECL_NFSRE CHECK (sourceclosed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_RESULTCL_NFSRE CHECK ((resultclosed IS NULL ) OR (resultclosed IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT CKC_ISFICTSE_NFSRE CHECK (isfictserial IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005708 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005709 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005710 CHECK ("ORDER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005711 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005712 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005713 CHECK ("CALCQTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005714 CHECK ("SOURCEBOXED" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005715 CHECK ("RESULTBOXED" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005716 CHECK ("SOURCEBROKEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005717 CHECK ("RESULTBROKEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005718 CHECK ("SOURCECLOSED" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSREQPOSITIONS
  ADD CONSTRAINT SYS_C005719 CHECK ("ISFICTSERIAL" IS NOT NULL);

CREATE TABLE INFORMIX.NFSREQUESTS
  (DOCUMENT NUMBER(10, 0) NULL,
   CREATOR NUMBER(10, 0) NULL,
   PLANBUILDDATE DATE NULL,
   REQUESTSTATE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFSREQUESTS
  ADD CONSTRAINT PK_NFSREQUESTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.NFSREQUESTS
  ADD CONSTRAINT CKC_REQUESTS_NFSRE CHECK ((requeststate IS NULL ) OR (requeststate IN (0 ,1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.NFSREQUESTS
  ADD CONSTRAINT SYS_C005990 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.NFSRESCATEGORIES
  (CATEGORYID NUMBER(10, 0) NULL,
   SEGMENT1 CHAR(80) NULL,
   SEGMENT2 CHAR(80) NULL,
   SEGMENT3 CHAR(80) NULL,
   SEGMENT4 CHAR(80) NULL,
   SEGMENT5 CHAR(80) NULL,
   DESCRIPTION CHAR(1020) NULL,
   CATEGORYCODE CHAR(320) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFSRESCATEGORIES
  ADD CONSTRAINT PK_NFSRESCATEGORIE UNIQUE (CATEGORYID);
 
ALTER TABLE INFORMIX.NFSRESCATEGORIES
  ADD CONSTRAINT SYS_C005394 CHECK ("CATEGORYID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRESCATEGORIES
  ADD CONSTRAINT SYS_C005395 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRESCATEGORIES
  ADD CONSTRAINT SYS_C005396 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFSRESOURCES
  (ITEM_ID CHAR(160) NULL,
   SEGMENT1 CHAR(1020) NULL,
   DESCRIPTION CHAR(1020) NULL,
   SHORTNAME CHAR(1020) NULL,
   NAME CHAR(1020) NULL,
   MODEL CHAR(1020) NULL,
   MANUCODE CHAR(1020) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   ENGDESCR CHAR(1020) NULL,
   PUREMODEL CHAR(1020) NULL,
   PUREMANUCODE CHAR(1020) NULL);

ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT PK_NFSRESOURCES UNIQUE (ITEM_ID);
 
ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT CKC_FLAGWORK_NFSRE CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT CKC_RECORDST_NFSRE CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT SYS_C005391 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT SYS_C005392 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRESOURCES
  ADD CONSTRAINT SYS_C005393 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFSRES2CATEGORIES
  (ITEM_ID CHAR(160) NULL,
   CATEGORY_ID NUMBER(10, 0) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT PK_NFSRES2CATEGORI UNIQUE (ITEM_ID, CATEGORY_ID);
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT CKC_FLAGWORK_NFSRC CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT CKC_RECORDST_NFSRC CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT SYS_C005401 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT SYS_C005402 CHECK ("CATEGORY_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT SYS_C005403 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2CATEGORIES
  ADD CONSTRAINT SYS_C005404 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFSRES2NRIRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   ITEM_ID CHAR(160) NULL,
   DATATYPE CHAR(4) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT PK_NFSRES2NRIRES UNIQUE (RESOURCE_, ITEM_ID);
 
ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT CKC_DATATYPE_NFSRE CHECK (datatype IN ('A' ,'U' ,'I' ));
 
ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT SYS_C005405 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT SYS_C005406 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT SYS_C005407 CHECK ("DATATYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSRES2NRIRES
  ADD CONSTRAINT SYS_C005408 CHECK ("CREATED" IS NOT NULL);

CREATE TABLE INFORMIX.NFSSERIALS
  (ITEM_ID CHAR(160) NULL,
   SERIAL CHAR(320) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   INVENTSERIAL CHAR(320) NULL);

ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT PK_NFSSERIALS UNIQUE (ITEM_ID, SERIAL);
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT CKC_FLAGWORK_NFSSE CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT CKC_RECORDST_NFSSE CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT SYS_C005397 CHECK ("ITEM_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT SYS_C005398 CHECK ("SERIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT SYS_C005399 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFSSERIALS
  ADD CONSTRAINT SYS_C005400 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_SF
  (IDSFNFS NUMBER(10, 0) NULL,
   IDZPNFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDVENDOR3NFS NUMBER(10, 0) NULL,
   IDVENDORSITE3NFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   NUMSF CHAR(200) NULL,
   NUMRELISESF CHAR(600) NULL,
   VATCODE CHAR(160) NULL,
   FLAGOPL CHAR(4) NULL,
   STATESF CHAR(160) NULL,
   SUMWITHOUTVAT NUMBER(15, 2) NULL,
   CURRSF CHAR(60) NULL,
   SUMVAT NUMBER(15, 2) NULL,
   DESCRIPTION CHAR(960) NULL,
   IDACCNFS NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT PK_NFS_SF UNIQUE (IDSFNFS);
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT CKC_FLAGWORK_NFS_S CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT CKC_RECORDST_NFS_S CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT SYS_C004850 CHECK ("IDSFNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT SYS_C004851 CHECK ("IDORGNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT SYS_C004852 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_SF
  ADD CONSTRAINT SYS_C004853 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_TAXRATES
  (IDTAXRATE NUMBER(10, 0) NULL,
   VATCODE CHAR(160) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   DESCRIPTION CHAR(1020) NULL,
   TAXRATE NUMBER(15, 4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   FLAGWORKNRI CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT PK_NFS_TAXRATES UNIQUE (IDTAXRATE);
 
ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT CKC_RECORDST_NFS_T CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT CKC_FLAGWORK_NFS_T CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT SYS_C004826 CHECK ("IDTAXRATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT SYS_C004827 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_TAXRATES
  ADD CONSTRAINT SYS_C004828 CHECK ("FLAGWORKNRI" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_USERS
  (PERSONID NUMBER(10, 0) NULL,
   IDUSERNFS NUMBER(10, 0) NULL,
   LOGIN CHAR(400) NULL,
   FULLNAME CHAR(400) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT PK_NFS_USERS UNIQUE (PERSONID);
 
ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT CKC_FLAGWORK_NFS_U CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT CKC_RECORDST_NFS_U CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT SYS_C004836 CHECK ("PERSONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT SYS_C004837 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_USERS
  ADD CONSTRAINT SYS_C004838 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_VENDORS
  (IDVENDORNFS NUMBER(10, 0) NULL,
   VENDORCODE NUMBER(10, 0) NULL,
   END_DATE_ACTIVE DATE NULL,
   NAME CHAR(1020) NULL,
   INN CHAR(160) NULL,
   TYPE_ CHAR(160) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   DATEMODIFY DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   ERRCODENRI NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_VENDORS
  ADD CONSTRAINT PK_NFS_VENDORS UNIQUE (IDVENDORNFS);
 
ALTER TABLE INFORMIX.NFS_VENDORS
  ADD CONSTRAINT CKC_ERRCODEN_NFS_V CHECK ((errcodenri IS NULL ) OR (errcodenri IN (0 ,1 ,2 )) );
 
ALTER TABLE INFORMIX.NFS_VENDORS
  ADD CONSTRAINT SYS_C005547 CHECK ("IDVENDORNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORS
  ADD CONSTRAINT SYS_C005548 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORS
  ADD CONSTRAINT SYS_C005549 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_VENDORSITES
  (IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   VENDORSITECODE CHAR(60) NULL,
   NAME CHAR(1020) NULL,
   MATCHOPTION CHAR(4) NULL,
   ADDRESS CHAR(1020) NULL,
   KPP CHAR(160) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   DATEMODIFY DATE NULL,
   DATECREATE DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   USERCREATE NUMBER(10, 0) NULL,
   ERRCODENRI NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_VENDORSITES
  ADD CONSTRAINT PK_NFS_VENDORSITES UNIQUE (IDVENDORSITENFS);
 
ALTER TABLE INFORMIX.NFS_VENDORSITES
  ADD CONSTRAINT SYS_C005550 CHECK ("IDVENDORSITENFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORSITES
  ADD CONSTRAINT SYS_C005551 CHECK ("IDORGNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORSITES
  ADD CONSTRAINT SYS_C005552 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORSITES
  ADD CONSTRAINT SYS_C005553 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  (ID NUMBER(10, 0) NULL,
   IDBANKACCOUNTNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   INACTIVE_DATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   DATECREATE DATE NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   IDACCOUNTNRI NUMBER(10, 0) NULL,
   ERRCODENRI NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT PK_NFS_VENDORSITE2 UNIQUE (ID);
 
ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT CKC_FLAGWORK_104 CHECK ((flagworknri IS NULL ) OR (flagworknri IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT CKC_RECORDST_104 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT SYS_C005106 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT SYS_C005107 CHECK ("IDBANKACCOUNTNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_VENDORSITE2BANKACCOUNT
  ADD CONSTRAINT SYS_C005108 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_ZP
  (IDZPNFS NUMBER(10, 0) NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   IDORGNFS NUMBER(10, 0) NULL,
   NUMZP CHAR(80) NULL,
   IDCONTRACTNFS NUMBER(10, 0) NULL,
   STATEZP CHAR(100) NULL,
   SUMWITHOUTVAT NUMBER(15, 2) NULL,
   CURRZP CHAR(60) NULL,
   SUMVAT NUMBER(15, 2) NULL,
   CBO VARCHAR2(160) NULL,
   COMMENTS CHAR(960) NULL,
   DATECREATE DATE NULL,
   USERCREATE NUMBER(10, 0) NULL,
   USERMODIFY NUMBER(10, 0) NULL,
   DATEMODIFY DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT PK_NFS_ZP UNIQUE (IDZPNFS);
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT CKC_FLAGWORK_NFS_Z CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT CKC_RECORDST_NFS_Z CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT SYS_C004846 CHECK ("IDZPNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT SYS_C004847 CHECK ("IDORGNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT SYS_C004848 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP
  ADD CONSTRAINT SYS_C004849 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NFS_ZP_STAT
  (IDZPNFS NUMBER(10, 0) NULL,
   PO_LINE_ID NUMBER(10, 0) NULL,
   ACCOUNTBUCH VARCHAR2(600) NULL,
   CATEGORYBUCH NUMBER(10, 0) NULL,
   AMOUNT NUMBER(15, 2) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT PK_NFS_ZP_STAT UNIQUE (IDZPNFS, PO_LINE_ID, ACCOUNTBUCH);
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT CKC_FLAGWORK_102 CHECK (flagworknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT CKC_RECORDST_102 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT SYS_C005254 CHECK ("IDZPNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT SYS_C005255 CHECK ("PO_LINE_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT SYS_C005256 CHECK ("ACCOUNTBUCH" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT SYS_C005257 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.NFS_ZP_STAT
  ADD CONSTRAINT SYS_C005258 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.NOKIABCF
  (DATALOADID NUMBER(10, 0) NULL,
   OBJECT_ID NUMBER(10, 0) NULL,
   BSC_ID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NOKIABCF
  ADD CONSTRAINT PK_NOKIABCF UNIQUE (DATALOADID, OBJECT_ID);
 
ALTER TABLE INFORMIX.NOKIABCF
  ADD CONSTRAINT SYS_C005201 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIABCF
  ADD CONSTRAINT SYS_C005202 CHECK ("OBJECT_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIABCF
  ADD CONSTRAINT SYS_C005203 CHECK ("BSC_ID" IS NOT NULL);

CREATE TABLE INFORMIX.NOKIABSC
  (DATALOADID NUMBER(10, 0) NULL,
   OBJECT_ID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ADDRESS CHAR(320) NULL,
   SYS_VERSION CHAR(80) NULL,
   LATITUDE NUMBER(10, 8) NULL,
   LONGITUDE NUMBER(10, 8) NULL);

ALTER TABLE INFORMIX.NOKIABSC
  ADD CONSTRAINT PK_NOKIABSC UNIQUE (DATALOADID, OBJECT_ID);
 
ALTER TABLE INFORMIX.NOKIABSC
  ADD CONSTRAINT SYS_C005199 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIABSC
  ADD CONSTRAINT SYS_C005200 CHECK ("OBJECT_ID" IS NOT NULL);

CREATE TABLE INFORMIX.NOKIABTS
  (DATALOADID NUMBER(10, 0) NULL,
   OBJECT_ID NUMBER(10, 0) NULL,
   BCF_ID NUMBER(10, 0) NULL,
   LAC NUMBER(10, 0) NULL,
   CELLID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ADDRESS CHAR(320) NULL,
   NCC NUMBER(10, 0) NULL,
   BCC NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NOKIABTS
  ADD CONSTRAINT PK_NOKIABTS UNIQUE (DATALOADID, OBJECT_ID);
 
ALTER TABLE INFORMIX.NOKIABTS
  ADD CONSTRAINT SYS_C005206 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIABTS
  ADD CONSTRAINT SYS_C005207 CHECK ("OBJECT_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIABTS
  ADD CONSTRAINT SYS_C005208 CHECK ("BCF_ID" IS NOT NULL);

CREATE TABLE INFORMIX.NOKIAHARDWAREUNITS
  (DATALOADID NUMBER(10, 0) NULL,
   EQUIPMENT_ID NUMBER(10, 0) NULL,
   BCF_ID NUMBER(10, 0) NULL,
   PARENT_ID NUMBER(10, 0) NULL,
   UNIT_NAME CHAR(320) NULL,
   UNIT_NRO NUMBER(10, 0) NULL,
   SERIAL CHAR(80) NULL,
   RACK NUMBER(10, 0) NULL,
   SHELF NUMBER(10, 0) NULL,
   SLOT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NOKIAHARDWAREUNITS
  ADD CONSTRAINT PK_NOKIAHARDWAREUN UNIQUE (DATALOADID, EQUIPMENT_ID);
 
ALTER TABLE INFORMIX.NOKIAHARDWAREUNITS
  ADD CONSTRAINT SYS_C005209 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIAHARDWAREUNITS
  ADD CONSTRAINT SYS_C005210 CHECK ("EQUIPMENT_ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.NOKIAHARDWAREUNITS
  ADD CONSTRAINT SYS_C005211 CHECK ("BCF_ID" IS NOT NULL);

CREATE TABLE INFORMIX.NOKIARES2NRIRES
  (NOKIAMODEL CHAR(320) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.NOKIARES2NRIRES
  ADD CONSTRAINT PK_NOKIARES2NRIRES UNIQUE (NOKIAMODEL);
 
ALTER TABLE INFORMIX.NOKIARES2NRIRES
  ADD CONSTRAINT SYS_C005163 CHECK ("NOKIAMODEL" IS NOT NULL);

CREATE TABLE INFORMIX.NRIMODULES
  (MODULE NUMBER(10, 0) NULL,
   NAME CHAR(160) NULL);

ALTER TABLE INFORMIX.NRIMODULES
  ADD CONSTRAINT PK_NRIMODULES UNIQUE (MODULE);
 
ALTER TABLE INFORMIX.NRIMODULES
  ADD CONSTRAINT SYS_C003620 CHECK ("MODULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.NRIMODULES
  ADD CONSTRAINT SYS_C003621 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.NRIUPDATE
  (TABLENAME CHAR(72) NULL,
   UPDATETIME DATE NULL);

ALTER TABLE INFORMIX.NRIUPDATE
  ADD CONSTRAINT PK_NRIUPDATE UNIQUE (TABLENAME);
 
ALTER TABLE INFORMIX.NRIUPDATE
  ADD CONSTRAINT SYS_C004824 CHECK ("TABLENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.NRIUPDATE
  ADD CONSTRAINT SYS_C004825 CHECK ("UPDATETIME" IS NOT NULL);

CREATE TABLE INFORMIX.OFFICEMEMOHEADERS
  (IDHEADER NUMBER(10, 0) NULL,
   ABONENTCONTRACT NUMBER(10, 0) NULL,
   NUMBER_ CHAR(160) NULL,
   DATE_ DATE NULL,
   MAN NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   TARGET NUMBER(10, 0) NULL,
   USETYPE CHAR(4) NULL,
   FROM_ VARCHAR2(1020) NULL,
   TO_ VARCHAR2(1020) NULL,
   LEASEBILL NUMBER(10, 0) NULL,
   FILENAME CHAR(320) NULL,
   FILETEXT BLOB NULL,
   STATE CHAR(4) NULL,
   ARENDACONTRACT NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   ORGCUSTOMER NUMBER(10, 0) NULL,
   TXTARENDACONTRACT CHAR(320) NULL,
   LOANCONTRACT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT PK_OFFICEMEMOHEADE UNIQUE (IDHEADER);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT CKC_USETYPE_OFFIC CHECK ((usetype IS NULL ) OR (usetype IN ('A' ,'B' ,'C' ,'D' ,'E' )) );
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT CKC_STATE_OFFIC CHECK ((state IS NULL ) OR (state IN ('A' ,'B' )) );
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT CKC_TYPE_OFFIC CHECK (TYPE_ IN ('1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9' ,'0' ,'A' ,'B' ,'C' ,'D' ,'E' ,'F' ,'J' ,'I' ));
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005070 CHECK ("IDHEADER" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005071 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005072 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005073 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005074 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOHEADERS
  ADD CONSTRAINT SYS_C005075 CHECK ("TARGET" IS NOT NULL);

CREATE TABLE INFORMIX.OFFICEMEMOPOS
  (IDPOS NUMBER(10, 0) NULL,
   IDHEADER NUMBER(10, 0) NULL,
   PHONENUMBER CHAR(160) NULL,
   TARIFPLAN VARCHAR2(1020) NULL,
   COMCARDCNT NUMBER(10, 0) NULL,
   CARDAMOUNT NUMBER(15, 2) NULL,
   SIMCARDCNT NUMBER(10, 0) NULL,
   EQUIPNAME VARCHAR2(1020) NULL,
   EQUIPCNT NUMBER(10, 0) NULL,
   DEFECTDESCR VARCHAR2(1020) NULL,
   SERVICE VARCHAR2(1020) NULL,
   OPERTYPE CHAR(4) NULL,
   STARTDATE DATE NULL,
   ENDDATE DATE NULL,
   ISGARANTIE CHAR(4) NULL,
   CARDNAME VARCHAR2(1020) NULL,
   EQUIPCODE NUMBER(10, 0) NULL,
   IDTARIFPLAN NUMBER(10, 0) NULL,
   IDSERVICE NUMBER(10, 0) NULL,
   BILLDELIVERY NUMBER(10, 0) NULL,
   BILLADDRESS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT PK_OFFICEMEMOPOS UNIQUE (IDPOS);
 
ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT CKC_BILLDELI_OFFIC CHECK ((billdelivery IS NULL ) OR (billdelivery IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT CKC_ISGARANT_OFFIC CHECK ((isgarantie IS NULL ) OR (isgarantie IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT CKC_OPERTYPE_OFFIC CHECK ((opertype IS NULL ) OR (opertype IN ('C' ,'D' )) );
 
ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT SYS_C004978 CHECK ("IDPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOPOS
  ADD CONSTRAINT SYS_C004979 CHECK ("IDHEADER" IS NOT NULL);

CREATE TABLE INFORMIX.OFFICEMEMOTARGETS
  (IDTARGET NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.OFFICEMEMOTARGETS
  ADD CONSTRAINT PK_OFFICEMEMOTARGE UNIQUE (IDTARGET);
 
ALTER TABLE INFORMIX.OFFICEMEMOTARGETS
  ADD CONSTRAINT SYS_C004773 CHECK ("IDTARGET" IS NOT NULL);
 
ALTER TABLE INFORMIX.OFFICEMEMOTARGETS
  ADD CONSTRAINT SYS_C004774 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.OMWB_ACT1
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_ANTENNES_FOR_BEEPLAN
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 NUMBER(10, 6) NULL,
   COL04 NUMBER(10, 6) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(4) NULL,
   COL09 CHAR(320) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(6, 2) NULL,
   COL12 NUMBER(6, 2) NULL,
   COL13 NUMBER(6, 2) NULL,
   COL14 NUMBER(6, 2) NULL,
   COL15 NUMBER(6, 2) NULL);

CREATE TABLE INFORMIX.OMWB_ANTENNES_FOR_FILIAL
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 CHAR(1020) NULL,
   COL04 CHAR(120) NULL,
   COL05 CHAR(120) NULL,
   COL06 CHAR(160) NULL,
   COL07 CHAR(160) NULL,
   COL08 CHAR(120) NULL,
   COL09 NUMBER(4, 1) NULL,
   COL10 CHAR(120) NULL,
   COL11 CHAR(120) NULL,
   COL12 CHAR(120) NULL,
   COL13 CHAR(120) NULL,
   COL14 CHAR(120) NULL,
   COL15 CHAR(320) NULL,
   COL16 NUMBER(6, 2) NULL,
   COL17 NUMBER(4, 2) NULL,
   COL18 NUMBER(6, 2) NULL,
   COL19 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_APPLYDOCUMENT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 DATE NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 CHAR(80) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 3) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_CALCACTWARNING
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CANCELDOCUMENT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 DATE NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 CHAR(80) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 3) NULL,
   COL12 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_CFGREPORTDIFFANTENNES
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL,
   COL02 VARCHAR2(1020) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 VARCHAR2(1020) NULL,
   COL06 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CFGREPORTDIFFBSSTANDS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL,
   COL02 VARCHAR2(1020) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 VARCHAR2(1020) NULL,
   COL06 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CFGREPORTDIFFTRX
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL,
   COL02 VARCHAR2(1020) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 VARCHAR2(1020) NULL,
   COL06 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CHECKADMINREGIONS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CHECKDPDEVPLAN
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CHECKERR101
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CHECK1
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_CHECK77
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_COUNT_ANTENNES_RRL
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(4, 1) NULL,
   COL03 NUMBER(8, 4) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_COUNTPRJBS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(320) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 DATE NULL);

CREATE TABLE INFORMIX.OMWB_DELETEUZBEKISTAN
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_DPCALCONEBSSPEC
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 NUMBER(15, 3) NULL,
   COL04 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_DPCALCVARIABLES
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(1020) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_DPCONVERTBSTYPE
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(120) NULL);

CREATE TABLE INFORMIX.OMWB_DPSELECTWORKS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 DATE NULL,
   COL07 NUMBER(6, 0) NULL);

CREATE TABLE INFORMIX.OMWB_DPSELECTWORKSBSSI
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 DATE NULL,
   COL07 NUMBER(6, 0) NULL);

CREATE TABLE INFORMIX.OMWB_FILES_FOR_POSITION
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(512) NULL,
   COL05 CHAR(256) NULL);

CREATE TABLE INFORMIX.OMWB_FILLALLINFOPOS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_FILLALLINFOPOS2
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_GETALLLICENCEPOSITION
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(320) NULL,
   COL05 DATE NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 VARCHAR2(320) NULL,
   COL08 DATE NULL,
   COL09 CHAR(2000) NULL);

CREATE TABLE INFORMIX.OMWB_GET_BADSECTORS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(24) NULL,
   COL06 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GETCNTFORGOSREGISTR
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(1020) NULL,
   COL10 CHAR(320) NULL,
   COL11 CHAR(320) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 CHAR(160) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(160) NULL);

CREATE TABLE INFORMIX.OMWB_GETCONTRARONOTV
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(320) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(160) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(15, 2) NULL,
   COL19 NUMBER(15, 2) NULL,
   COL20 NUMBER(15, 2) NULL,
   COL21 NUMBER(15, 2) NULL,
   COL22 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_GETCONTRARONOTV_2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(320) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(160) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(15, 2) NULL,
   COL19 NUMBER(15, 2) NULL,
   COL20 NUMBER(15, 2) NULL,
   COL21 NUMBER(15, 2) NULL,
   COL22 NUMBER(15, 2) NULL,
   COL23 DATE NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(200) NULL,
   COL26 CHAR(200) NULL);

CREATE TABLE INFORMIX.OMWB_GETCONTRARONOTV_3
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(320) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(160) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(15, 2) NULL,
   COL19 NUMBER(15, 2) NULL,
   COL20 NUMBER(15, 2) NULL,
   COL21 NUMBER(15, 2) NULL,
   COL22 NUMBER(15, 2) NULL,
   COL23 DATE NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(200) NULL,
   COL26 CHAR(200) NULL);

CREATE TABLE INFORMIX.OMWB_GETCOUNTPOS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GETDOCPOSFORACT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET_FOR_MARINA
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(320) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET_HZ_RASR_BS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(320) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(10, 0) NULL,
   COL16 NUMBER(10, 0) NULL,
   COL17 NUMBER(10, 0) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GETINFO_BYSITES
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(120) NULL,
   COL02 VARCHAR2(120) NULL,
   COL03 VARCHAR2(80) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 VARCHAR2(200) NULL,
   COL06 VARCHAR2(600) NULL,
   COL07 CHAR(12) NULL,
   COL08 CHAR(12) NULL,
   COL09 DATE NULL,
   COL10 DATE NULL,
   COL11 CHAR(12) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 VARCHAR2(48) NULL,
   COL15 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_GETINFO_BYSITES1
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(80) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 VARCHAR2(200) NULL,
   COL04 VARCHAR2(600) NULL,
   COL05 CHAR(12) NULL,
   COL06 CHAR(12) NULL,
   COL07 DATE NULL,
   COL08 DATE NULL,
   COL09 CHAR(12) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 VARCHAR2(48) NULL,
   COL13 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_GETINTERVALSONPERIOD
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 DATE NULL);

CREATE TABLE INFORMIX.OMWB_GETLISTBADCHARGES
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(320) NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(320) NULL,
   COL09 DATE NULL,
   COL10 DATE NULL,
   COL11 CHAR(4) NULL,
   COL12 CHAR(4) NULL,
   COL13 CHAR(4) NULL,
   COL14 CHAR(4) NULL,
   COL15 CHAR(4) NULL,
   COL16 CHAR(4) NULL);

CREATE TABLE INFORMIX.OMWB_GETLISTNEWCONTRACTS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(1020) NULL,
   COL06 CHAR(320) NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(1020) NULL,
   COL10 CHAR(160) NULL,
   COL11 CHAR(320) NULL,
   COL12 DATE NULL);

CREATE TABLE INFORMIX.OMWB_GETLISTSTANDBS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(320) NULL,
   COL05 VARCHAR2(80) NULL,
   COL06 VARCHAR2(320) NULL,
   COL07 VARCHAR2(160) NULL);

CREATE TABLE INFORMIX.OMWB_GETLSTARNDFORAB
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_GET_POSBSSTATUS_DATE
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 VARCHAR2(320) NULL,
   COL06 VARCHAR2(600) NULL,
   COL07 CHAR(4) NULL,
   COL08 VARCHAR2(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 CHAR(4) NULL,
   COL11 VARCHAR2(40) NULL,
   COL12 CHAR(4) NULL,
   COL13 CHAR(4) NULL,
   COL14 VARCHAR2(120) NULL,
   COL15 VARCHAR2(120) NULL,
   COL16 DATE NULL,
   COL17 DATE NULL);

CREATE TABLE INFORMIX.OMWB_GET_POSBSSTATUS_LW
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 VARCHAR2(320) NULL,
   COL06 VARCHAR2(600) NULL,
   COL07 CHAR(4) NULL,
   COL08 VARCHAR2(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 CHAR(4) NULL,
   COL11 VARCHAR2(40) NULL,
   COL12 CHAR(4) NULL,
   COL13 CHAR(4) NULL,
   COL14 VARCHAR2(120) NULL,
   COL15 VARCHAR2(120) NULL,
   COL16 DATE NULL,
   COL17 DATE NULL);

CREATE TABLE INFORMIX.OMWB_GETREPITERONPOSITION
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(320) NULL,
   COL02 VARCHAR2(320) NULL,
   COL03 VARCHAR2(320) NULL,
   COL04 VARCHAR2(320) NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 DATE NULL);

CREATE TABLE INFORMIX.OMWB_GET_ROLLOUTT_F1
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 VARCHAR2(400) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(10, 0) NULL,
   COL16 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET_ROLLOUTT_ZONE
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 VARCHAR2(400) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(10, 0) NULL,
   COL16 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET_ROLLOUTT_ZONE1
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 VARCHAR2(400) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(10, 0) NULL,
   COL16 NUMBER(10, 0) NULL,
   COL17 NUMBER(10, 0) NULL,
   COL18 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET_ROLLOUTT_ZONE2
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(400) NULL,
   COL02 VARCHAR2(400) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 VARCHAR2(400) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_GET1
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 CHAR(80) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(1020) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(320) NULL,
   COL13 CHAR(160) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 NUMBER(15, 2) NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(15, 2) NULL,
   COL19 CHAR(160) NULL,
   COL20 CHAR(320) NULL,
   COL21 CHAR(320) NULL,
   COL22 CHAR(160) NULL);

CREATE TABLE INFORMIX.OMWB_HEXAGONFREQCONSTRAINTS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(40) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_HEXAGONLOADCOORDINATES
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(40) NULL,
   COL02 FLOAT(126) NULL,
   COL03 FLOAT(126) NULL,
   COL04 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_HEXAGONLOADTRX
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 VARCHAR2(1020) NULL,
   COL04 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_HEXAGONUNLOADANTENS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL,
   COL02 VARCHAR2(1020) NULL,
   COL03 VARCHAR2(1020) NULL,
   COL04 VARCHAR2(1020) NULL,
   COL05 VARCHAR2(1020) NULL,
   COL06 VARCHAR2(1020) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 FLOAT(126) NULL,
   COL09 VARCHAR2(1020) NULL,
   COL10 VARCHAR2(1020) NULL,
   COL11 VARCHAR2(1020) NULL,
   COL12 VARCHAR2(1020) NULL,
   COL13 FLOAT(126) NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(10, 0) NULL,
   COL16 NUMBER(10, 0) NULL,
   COL17 FLOAT(126) NULL,
   COL18 FLOAT(126) NULL,
   COL19 FLOAT(126) NULL,
   COL20 NUMBER(10, 0) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 VARCHAR2(1020) NULL,
   COL23 VARCHAR2(1020) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 NUMBER(10, 0) NULL,
   COL26 CHAR(12) NULL,
   COL27 CHAR(40) NULL);

CREATE TABLE INFORMIX.OMWB_LISTACTIVECONTRARENDA
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(1020) NULL,
   COL10 CHAR(320) NULL,
   COL11 CHAR(320) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 CHAR(160) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(160) NULL,
   COL18 CHAR(200) NULL,
   COL19 CHAR(200) NULL);

CREATE TABLE INFORMIX.OMWB_LISTACTIVECONTRARENDA_2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 DATE NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(1020) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(320) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 CHAR(160) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(320) NULL,
   COL18 CHAR(160) NULL,
   COL19 CHAR(200) NULL,
   COL20 CHAR(200) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 NUMBER(10, 0) NULL,
   COL23 NUMBER(10, 0) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(4) NULL,
   COL26 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_LISTALLCONTRACTSARENDA
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 DATE NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(1020) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(320) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 CHAR(160) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(320) NULL,
   COL18 CHAR(160) NULL,
   COL19 CHAR(200) NULL,
   COL20 CHAR(200) NULL,
   COL21 CHAR(1020) NULL,
   COL22 CHAR(1020) NULL,
   COL23 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_LISTALLCONTRACTSARENDA_M
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 DATE NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(1020) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(320) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 CHAR(160) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(320) NULL,
   COL18 CHAR(160) NULL,
   COL19 CHAR(200) NULL,
   COL20 CHAR(200) NULL);

CREATE TABLE INFORMIX.OMWB_LISTALLCONTRACTSARENDA2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 VARCHAR2(200) NULL,
   COL04 DATE NULL,
   COL05 CHAR(160) NULL,
   COL06 CHAR(160) NULL,
   COL07 CHAR(320) NULL,
   COL08 CHAR(320) NULL,
   COL09 VARCHAR2(200) NULL,
   COL10 VARCHAR2(200) NULL,
   COL11 VARCHAR2(200) NULL,
   COL12 VARCHAR2(200) NULL,
   COL13 VARCHAR2(200) NULL,
   COL14 CHAR(320) NULL,
   COL15 VARCHAR2(200) NULL);

CREATE TABLE INFORMIX.OMWB_LISTPOTEHINA
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 CHAR(160) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 CHAR(160) NULL,
   COL06 CHAR(160) NULL,
   COL07 CHAR(160) NULL,
   COL08 VARCHAR2(1020) NULL,
   COL09 CHAR(160) NULL,
   COL10 CHAR(160) NULL,
   COL11 VARCHAR2(1020) NULL,
   COL12 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_LISTSFONOTV_M
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 CHAR(320) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(160) NULL,
   COL07 DATE NULL,
   COL08 CHAR(160) NULL,
   COL09 CHAR(160) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 CHAR(160) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(160) NULL,
   COL15 DATE NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(15, 4) NULL,
   COL19 CHAR(160) NULL,
   COL20 CHAR(320) NULL,
   COL21 CHAR(1020) NULL,
   COL22 CHAR(320) NULL,
   COL23 CHAR(320) NULL,
   COL24 CHAR(160) NULL,
   COL25 CHAR(4) NULL,
   COL26 CHAR(160) NULL,
   COL27 CHAR(160) NULL,
   COL28 CHAR(320) NULL,
   COL29 CHAR(320) NULL,
   COL30 CHAR(160) NULL,
   COL31 CHAR(160) NULL);

CREATE TABLE INFORMIX.OMWB_LOAD_GETDOUBLED
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_LOADPOS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_LOADPOSITIONS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_LOAD3
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEACCMUTUALHEADER
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(120) NULL,
   COL03 DATE NULL,
   COL04 CHAR(200) NULL,
   COL05 CHAR(2000) NULL,
   COL06 CHAR(2000) NULL,
   COL07 CHAR(2000) NULL,
   COL08 CHAR(2000) NULL,
   COL09 DATE NULL,
   COL10 DATE NULL,
   COL11 CHAR(4) NULL,
   COL12 NUMBER(15, 4) NULL,
   COL13 DATE NULL,
   COL14 CHAR(320) NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(320) NULL,
   COL17 CHAR(120) NULL,
   COL18 CHAR(120) NULL,
   COL19 CHAR(1020) NULL,
   COL20 CHAR(1020) NULL,
   COL21 CHAR(1020) NULL,
   COL22 CHAR(1020) NULL,
   COL23 CHAR(1020) NULL,
   COL24 CHAR(1020) NULL,
   COL25 CHAR(320) NULL,
   COL26 CHAR(320) NULL,
   COL27 CHAR(320) NULL,
   COL28 CHAR(320) NULL,
   COL29 NUMBER(10, 0) NULL,
   COL30 NUMBER(10, 0) NULL,
   COL31 NUMBER(10, 0) NULL,
   COL32 NUMBER(10, 0) NULL,
   COL33 NUMBER(15, 2) NULL,
   COL34 NUMBER(15, 2) NULL,
   COL35 NUMBER(15, 2) NULL,
   COL36 NUMBER(15, 2) NULL,
   COL37 NUMBER(10, 0) NULL,
   COL38 CHAR(320) NULL,
   COL39 CHAR(320) NULL,
   COL40 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTSTARTDEBT
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL,
   COL02 CHAR(1020) NULL,
   COL03 CHAR(320) NULL,
   COL04 CHAR(120) NULL,
   COL05 DATE NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 CHAR(120) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 CHAR(120) NULL,
   COL10 DATE NULL,
   COL11 CHAR(120) NULL,
   COL12 DATE NULL,
   COL13 NUMBER(10, 0) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 NUMBER(15, 2) NULL,
   COL16 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTTEMPDEBT
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL,
   COL02 CHAR(1020) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 CHAR(120) NULL,
   COL06 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTUALCHARGES
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(1020) NULL,
   COL05 CHAR(1020) NULL,
   COL06 CHAR(320) NULL,
   COL07 CHAR(120) NULL,
   COL08 DATE NULL,
   COL09 CHAR(120) NULL,
   COL10 DATE NULL,
   COL11 DATE NULL,
   COL12 DATE NULL,
   COL13 DATE NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 NUMBER(15, 2) NULL,
   COL16 CHAR(120) NULL,
   COL17 NUMBER(15, 4) NULL,
   COL18 NUMBER(15, 2) NULL,
   COL19 NUMBER(15, 2) NULL,
   COL20 CHAR(120) NULL,
   COL21 NUMBER(15, 4) NULL,
   COL22 NUMBER(15, 2) NULL,
   COL23 NUMBER(15, 2) NULL,
   COL24 CHAR(120) NULL,
   COL25 NUMBER(15, 4) NULL,
   COL26 NUMBER(15, 2) NULL,
   COL27 NUMBER(15, 2) NULL,
   COL28 NUMBER(10, 0) NULL,
   COL29 NUMBER(15, 2) NULL,
   COL30 NUMBER(10, 0) NULL,
   COL31 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTUALDEBTNDS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL,
   COL02 CHAR(1020) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 CHAR(120) NULL,
   COL05 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTUALENDDEBT
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL,
   COL02 CHAR(1020) NULL,
   COL03 VARCHAR2(1020) NULL,
   COL04 CHAR(120) NULL,
   COL05 DATE NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 CHAR(120) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 CHAR(120) NULL,
   COL12 DATE NULL,
   COL13 DATE NULL,
   COL14 NUMBER(10, 0) NULL,
   COL15 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_MAKEMUTUALPAYMENTS
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 DATE NULL,
   COL05 CHAR(120) NULL,
   COL06 CHAR(120) NULL,
   COL07 DATE NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(1020) NULL,
   COL10 DATE NULL,
   COL11 DATE NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 CHAR(120) NULL,
   COL15 NUMBER(15, 4) NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 CHAR(120) NULL,
   COL19 NUMBER(15, 4) NULL,
   COL20 NUMBER(15, 2) NULL,
   COL21 NUMBER(15, 2) NULL,
   COL22 CHAR(120) NULL,
   COL23 NUMBER(15, 4) NULL,
   COL24 NUMBER(15, 2) NULL,
   COL25 NUMBER(15, 2) NULL,
   COL26 NUMBER(10, 0) NULL,
   COL27 CHAR(1020) NULL,
   COL28 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_MOVEPAYNFS2NRI2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_OTCH_BYACTIVECONTRARENDA
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(160) NULL,
   COL15 DATE NULL,
   COL16 CHAR(4) NULL,
   COL17 CHAR(4) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 NUMBER(10, 0) NULL,
   COL20 CHAR(4) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 CHAR(240) NULL,
   COL23 NUMBER(10, 0) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(400) NULL,
   COL26 NUMBER(10, 0) NULL,
   COL27 CHAR(400) NULL,
   COL28 CHAR(200) NULL,
   COL29 CHAR(200) NULL,
   COL30 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_OTCH_BYACTIVECONTRARENDAR
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(160) NULL,
   COL15 DATE NULL,
   COL16 CHAR(4) NULL,
   COL17 CHAR(4) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 NUMBER(10, 0) NULL,
   COL20 CHAR(4) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 CHAR(240) NULL,
   COL23 NUMBER(10, 0) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(400) NULL,
   COL26 NUMBER(10, 0) NULL,
   COL27 CHAR(400) NULL,
   COL28 CHAR(200) NULL,
   COL29 CHAR(200) NULL,
   COL30 NUMBER(10, 0) NULL,
   COL31 CHAR(4) NULL,
   COL32 NUMBER(15, 2) NULL,
   COL33 NUMBER(15, 2) NULL,
   COL34 NUMBER(15, 2) NULL,
   COL35 NUMBER(15, 2) NULL,
   COL36 NUMBER(15, 2) NULL,
   COL37 CHAR(12) NULL,
   COL38 CHAR(80) NULL,
   COL39 DATE NULL,
   COL40 CHAR(12) NULL,
   COL41 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_OTCH_BYACTIVECONTRARENDA1
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(160) NULL,
   COL15 DATE NULL,
   COL16 CHAR(4) NULL,
   COL17 CHAR(4) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 NUMBER(10, 0) NULL,
   COL20 CHAR(4) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 CHAR(240) NULL,
   COL23 NUMBER(10, 0) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(400) NULL,
   COL26 NUMBER(10, 0) NULL,
   COL27 CHAR(400) NULL,
   COL28 CHAR(200) NULL,
   COL29 CHAR(200) NULL,
   COL30 NUMBER(10, 0) NULL,
   COL31 CHAR(4) NULL,
   COL32 FLOAT(126) NULL,
   COL33 NUMBER(15, 2) NULL,
   COL34 NUMBER(15, 2) NULL,
   COL35 NUMBER(15, 2) NULL,
   COL36 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_OTCH_BYACTIVECONTRARENDA2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 DATE NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 DATE NULL,
   COL06 DATE NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(160) NULL,
   COL14 CHAR(160) NULL,
   COL15 DATE NULL,
   COL16 CHAR(4) NULL,
   COL17 CHAR(4) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 NUMBER(10, 0) NULL,
   COL20 CHAR(4) NULL,
   COL21 NUMBER(10, 0) NULL,
   COL22 CHAR(240) NULL,
   COL23 NUMBER(10, 0) NULL,
   COL24 NUMBER(10, 0) NULL,
   COL25 CHAR(400) NULL,
   COL26 NUMBER(10, 0) NULL,
   COL27 CHAR(400) NULL,
   COL28 CHAR(200) NULL,
   COL29 CHAR(200) NULL,
   COL30 NUMBER(10, 0) NULL,
   COL31 CHAR(4) NULL,
   COL32 NUMBER(15, 2) NULL,
   COL33 NUMBER(15, 2) NULL,
   COL34 NUMBER(15, 2) NULL,
   COL35 NUMBER(15, 2) NULL,
   COL36 NUMBER(15, 2) NULL,
   COL37 CHAR(12) NULL,
   COL38 CHAR(80) NULL,
   COL39 DATE NULL,
   COL40 CHAR(12) NULL,
   COL41 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_POSITIONS_NOTINF
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(1020) NULL,
   COL06 NUMBER(10, 6) NULL,
   COL07 NUMBER(10, 6) NULL,
   COL08 CHAR(4) NULL);

CREATE TABLE INFORMIX.OMWB_PRINTSHFHEADER
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(120) NULL,
   COL02 DATE NULL,
   COL03 CHAR(120) NULL,
   COL04 DATE NULL,
   COL05 CHAR(1020) NULL,
   COL06 CHAR(1020) NULL,
   COL07 CHAR(1020) NULL,
   COL08 CHAR(1020) NULL,
   COL09 CHAR(1020) NULL,
   COL10 CHAR(1020) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(320) NULL,
   COL13 CHAR(320) NULL,
   COL14 CHAR(320) NULL,
   COL15 CHAR(1020) NULL,
   COL16 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_PRINTSHFPOSITION
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL,
   COL03 CHAR(120) NULL,
   COL04 NUMBER(15, 3) NULL,
   COL05 NUMBER(15, 2) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 CHAR(120) NULL,
   COL12 CHAR(120) NULL,
   COL13 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_RECODESECTOR
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_REMOVEPOSITIONS
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDALISTABONENT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 DATE NULL,
   COL04 DATE NULL,
   COL05 CHAR(160) NULL,
   COL06 VARCHAR2(1020) NULL,
   COL07 VARCHAR2(1020) NULL,
   COL08 VARCHAR2(320) NULL,
   COL09 VARCHAR2(320) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 CHAR(160) NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 NUMBER(15, 2) NULL,
   COL18 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDALISTOFMMOPL
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL,
   COL02 VARCHAR2(160) NULL,
   COL03 DATE NULL,
   COL04 VARCHAR2(320) NULL,
   COL05 VARCHAR2(160) NULL,
   COL06 VARCHAR2(1020) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 VARCHAR2(1020) NULL,
   COL09 VARCHAR2(160) NULL,
   COL10 DATE NULL,
   COL11 NUMBER(10, 0) NULL,
   COL12 VARCHAR2(200) NULL,
   COL13 CHAR(12) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 NUMBER(15, 2) NULL,
   COL16 VARCHAR2(160) NULL,
   COL17 DATE NULL,
   COL18 DATE NULL,
   COL19 VARCHAR2(1020) NULL,
   COL20 VARCHAR2(160) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDASTATIST9
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(10, 0) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 NUMBER(15, 4) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDA4
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 DATE NULL,
   COL03 CHAR(120) NULL,
   COL04 CHAR(120) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(320) NULL,
   COL07 CHAR(120) NULL,
   COL08 DATE NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDA5
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 DATE NULL,
   COL03 CHAR(320) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(15, 2) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDA6
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 DATE NULL,
   COL03 DATE NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL,
   COL12 NUMBER(15, 2) NULL,
   COL13 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_REPARENDA7
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 NUMBER(15, 2) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_REPLISTCONTRACTSFORNFS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(200) NULL,
   COL02 CHAR(2000) NULL,
   COL03 CHAR(320) NULL,
   COL04 CHAR(120) NULL,
   COL05 CHAR(320) NULL,
   COL06 DATE NULL,
   COL07 DATE NULL,
   COL08 DATE NULL,
   COL09 DATE NULL,
   COL10 CHAR(200) NULL,
   COL11 CHAR(200) NULL,
   COL12 CHAR(1020) NULL,
   COL13 CHAR(1020) NULL,
   COL14 CHAR(1020) NULL,
   COL15 CHAR(1020) NULL,
   COL16 DATE NULL);

CREATE TABLE INFORMIX.OMWB_REPWARNINGAKT
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(160) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(120) NULL,
   COL07 DATE NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(160) NULL,
   COL11 DATE NULL,
   COL12 DATE NULL,
   COL13 DATE NULL,
   COL14 DATE NULL,
   COL15 CHAR(320) NULL,
   COL16 CHAR(160) NULL);

CREATE TABLE INFORMIX.OMWB_REPWARNINGAKT_M
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(160) NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(120) NULL,
   COL07 DATE NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(320) NULL,
   COL10 DATE NULL,
   COL11 DATE NULL,
   COL12 DATE NULL,
   COL13 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_REPWARNINGPROLONG
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(120) NULL,
   COL07 DATE NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(320) NULL,
   COL10 DATE NULL,
   COL11 DATE NULL,
   COL12 CHAR(320) NULL,
   COL13 CHAR(320) NULL,
   COL14 NUMBER(15, 2) NULL,
   COL15 CHAR(200) NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 CHAR(200) NULL,
   COL18 CHAR(120) NULL,
   COL19 VARCHAR2(200) NULL,
   COL20 VARCHAR2(200) NULL);

CREATE TABLE INFORMIX.OMWB_REPWARNINGPROLONG_M
  (COL00 NUMBER(22) NULL,
   COL01 DATE NULL,
   COL02 CHAR(320) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(120) NULL,
   COL07 DATE NULL,
   COL08 CHAR(320) NULL,
   COL09 CHAR(320) NULL,
   COL10 DATE NULL,
   COL11 DATE NULL,
   COL12 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_REPYEARPRICEBS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(80) NULL,
   COL02 CHAR(80) NULL,
   COL03 CHAR(200) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(80) NULL,
   COL06 CHAR(160) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_RP_BSINREGIONS
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(160) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 CHAR(160) NULL,
   COL04 NUMBER(10, 0) NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 CHAR(160) NULL,
   COL07 CHAR(4) NULL,
   COL08 NUMBER(10, 0) NULL,
   COL09 CHAR(4) NULL,
   COL10 NUMBER(10, 0) NULL,
   COL11 CHAR(4) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 DATE NULL,
   COL14 DATE NULL,
   COL15 CHAR(80) NULL,
   COL16 NUMBER(10, 0) NULL,
   COL17 CHAR(80) NULL,
   COL18 NUMBER(10, 0) NULL,
   COL19 CHAR(4) NULL);

CREATE TABLE INFORMIX.OMWB_RPGETINFOPOSITION
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(256) NULL,
   COL02 CHAR(2000) NULL);

CREATE TABLE INFORMIX.OMWB_RPINITPOSCODES
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_SETKOORDINAT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(1020) NULL);

CREATE TABLE INFORMIX.OMWB_SETPOSCODEREESTR
  (COL00 NUMBER(22) NULL,
   COL01 VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.OMWB_TEST_BDV
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(1020) NULL,
   COL02 CHAR(1020) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 CHAR(120) NULL,
   COL06 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_TMPWORKTIMEONECONOMIST
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 NUMBER(15, 2) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 NUMBER(15, 2) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_UNPROCESSCONFIG
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 DATE NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 CHAR(80) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 3) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_UNPROCESSDOCUMENT
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 NUMBER(10, 0) NULL,
   COL04 DATE NULL,
   COL05 NUMBER(10, 0) NULL,
   COL06 CHAR(80) NULL,
   COL07 NUMBER(10, 0) NULL,
   COL08 CHAR(80) NULL,
   COL09 NUMBER(10, 0) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 3) NULL,
   COL12 NUMBER(10, 0) NULL,
   COL13 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.OMWB_VIEWINFOREGLAMENT2
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 NUMBER(10, 0) NULL,
   COL03 CHAR(160) NULL,
   COL04 DATE NULL,
   COL05 CHAR(320) NULL,
   COL06 CHAR(320) NULL,
   COL07 DATE NULL,
   COL08 DATE NULL,
   COL09 CHAR(320) NULL,
   COL10 CHAR(320) NULL,
   COL11 CHAR(320) NULL,
   COL12 CHAR(160) NULL,
   COL13 NUMBER(15, 2) NULL,
   COL14 CHAR(40) NULL,
   COL15 CHAR(40) NULL,
   COL16 NUMBER(15, 2) NULL,
   COL17 CHAR(40) NULL,
   COL18 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OMWB_VIEWINFOREGLAMENT3
  (COL00 NUMBER(22) NULL,
   COL01 NUMBER(10, 0) NULL,
   COL02 CHAR(160) NULL,
   COL03 CHAR(320) NULL,
   COL04 CHAR(320) NULL,
   COL05 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_VIEWINFOREGLAMENT4
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 CHAR(320) NULL,
   COL03 CHAR(20) NULL,
   COL04 CHAR(320) NULL);

CREATE TABLE INFORMIX.OMWB_WORKTIMEONECONOMIST
  (COL00 NUMBER(22) NULL,
   COL01 CHAR(320) NULL,
   COL02 NUMBER(15, 2) NULL,
   COL03 NUMBER(15, 2) NULL,
   COL04 NUMBER(15, 2) NULL,
   COL05 NUMBER(15, 2) NULL,
   COL06 NUMBER(15, 2) NULL,
   COL07 NUMBER(15, 2) NULL,
   COL08 NUMBER(15, 2) NULL,
   COL09 NUMBER(15, 2) NULL,
   COL10 NUMBER(15, 2) NULL,
   COL11 NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.OPERATIONJORNAL
  (JORNALID NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   TASK NUMBER(10, 0) NULL,
   OPERTIME DATE NULL,
   OPERTEXT CHAR(400) NULL);

ALTER TABLE INFORMIX.OPERATIONJORNAL
  ADD CONSTRAINT PK_OPERATIONJORNAL UNIQUE (JORNALID);
 
ALTER TABLE INFORMIX.OPERATIONJORNAL
  ADD CONSTRAINT SYS_C004430 CHECK ("JORNALID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATIONJORNAL
  ADD CONSTRAINT SYS_C004431 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATIONJORNAL
  ADD CONSTRAINT SYS_C004432 CHECK ("TASK" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATIONJORNAL
  ADD CONSTRAINT SYS_C004433 CHECK ("OPERTIME" IS NOT NULL);

CREATE TABLE INFORMIX.OPERATORS
  (OPERATOR_ NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL,
   LOIGINID CHAR(160) NULL,
   PASSWORD CHAR(160) NULL,
   ISENABLED CHAR(4) NULL,
   MSUCODE NUMBER(10, 0) NULL,
   IDREGION NUMBER(10, 0) NULL,
   LASTLOGINTIME DATE NULL,
   OLDPWD CHAR(160) NULL,
   LASTREGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT PK_OPERATORS UNIQUE (OPERATOR_);
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT CKC_ISENABLE_OPERA CHECK (isenabled IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT SYS_C004374 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT SYS_C004375 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT SYS_C004376 CHECK ("LOIGINID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT SYS_C004377 CHECK ("PASSWORD" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORS
  ADD CONSTRAINT SYS_C004378 CHECK ("ISENABLED" IS NOT NULL);

CREATE TABLE INFORMIX.OPERATORSN
  (OPERATOR_ NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL,
   LOIGINID VARCHAR2(1020) NULL,
   TABNUM NUMBER(10, 0) NULL,
   LASTNAME VARCHAR2(1020) NULL,
   FIRSTNAME VARCHAR2(1020) NULL,
   MIDDLENAME VARCHAR2(1020) NULL);
 
ALTER TABLE INFORMIX.OPERATORSN
  ADD CONSTRAINT SYS_C004781 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORSN
  ADD CONSTRAINT SYS_C004782 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.OPERATORS2ROLES
  (ROLE CHAR(80) NULL,
   OPERATOR_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OPERATORS2ROLES
  ADD CONSTRAINT PK_OPERATORS2ROLES UNIQUE (ROLE, OPERATOR_);
 
ALTER TABLE INFORMIX.OPERATORS2ROLES
  ADD CONSTRAINT SYS_C004436 CHECK ("ROLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPERATORS2ROLES
  ADD CONSTRAINT SYS_C004437 CHECK ("OPERATOR_" IS NOT NULL);

CREATE TABLE INFORMIX.OPORAOWNERS
  (OWNERID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.OPORAOWNERS
  ADD CONSTRAINT PK_OPORAOWNERS UNIQUE (OWNERID);
 
ALTER TABLE INFORMIX.OPORAOWNERS
  ADD CONSTRAINT SYS_C005698 CHECK ("OWNERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPORAOWNERS
  ADD CONSTRAINT SYS_C005699 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.OPORAPLACES
  (OPLACEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.OPORAPLACES
  ADD CONSTRAINT PK_OPORAPLACES UNIQUE (OPLACEID);
 
ALTER TABLE INFORMIX.OPORAPLACES
  ADD CONSTRAINT SYS_C004515 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPORAPLACES
  ADD CONSTRAINT SYS_C004514 CHECK ("OPLACEID" IS NOT NULL);

CREATE TABLE INFORMIX.OPORATYPES
  (OPORATYPEID NUMBER(10, 0) NULL,
   OPORATYPENAME CHAR(320) NULL);

ALTER TABLE INFORMIX.OPORATYPES
  ADD CONSTRAINT PK_OPORATYPES UNIQUE (OPORATYPEID);
 
ALTER TABLE INFORMIX.OPORATYPES
  ADD CONSTRAINT SYS_C005692 CHECK ("OPORATYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPORATYPES
  ADD CONSTRAINT SYS_C005693 CHECK ("OPORATYPENAME" IS NOT NULL);

CREATE TABLE INFORMIX.OPTICALHOPS
  (HOPSID NUMBER(10, 0) NULL,
   HOPSCOMMENT CHAR(1000) NULL);

ALTER TABLE INFORMIX.OPTICALHOPS
  ADD CONSTRAINT PK_OPTICALHOPS UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.OPTICALHOPS
  ADD CONSTRAINT SYS_C004565 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.OPTICALREPITERS
  (EQUIPMENT NUMBER(10, 0) NULL,
   ISWDM CHAR(4) NULL,
   ISOPTICDIVISOR CHAR(4) NULL,
   DIVISORFACTORID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OPTICALREPITERS
  ADD CONSTRAINT PK_OPTICALREPITERS UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.OPTICALREPITERS
  ADD CONSTRAINT SYS_C003426 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.OPTICCARDS
  (CARDID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   CARDNAME CHAR(200) NULL,
   PORTID CHAR(80) NULL,
   BUSTYPE CHAR(80) NULL,
   POVER_ID CHAR(80) NULL,
   SERIALNUMBER CHAR(200) NULL,
   APPTYPE CHAR(80) NULL,
   LASTEDITDATE DATE NULL);

ALTER TABLE INFORMIX.OPTICCARDS
  ADD CONSTRAINT PK_OPTICCARDS UNIQUE (CARDID);
 
ALTER TABLE INFORMIX.OPTICCARDS
  ADD CONSTRAINT SYS_C005409 CHECK ("CARDID" IS NOT NULL);

CREATE TABLE INFORMIX.OPTICCARDS_CHANGELOG
  (IDREC NUMBER(10, 0) NULL,
   CARDID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CARDNAME CHAR(200) NULL,
   PORTID CHAR(80) NULL,
   BUSTYPE CHAR(80) NULL,
   POVER_ID CHAR(80) NULL,
   SERIALNUMBER CHAR(200) NULL,
   APPTYPE CHAR(80) NULL,
   LASTEDITDATE DATE NULL,
   CREATEDATE DATE NULL);

ALTER TABLE INFORMIX.OPTICCARDS_CHANGELOG
  ADD CONSTRAINT PK_OPTICCARDS_CHAN UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.OPTICCARDS_CHANGELOG
  ADD CONSTRAINT SYS_C005410 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICCARDS_CHANGELOG
  ADD CONSTRAINT SYS_C005411 CHECK ("CARDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICCARDS_CHANGELOG
  ADD CONSTRAINT SYS_C005412 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.OPTICGATETABLE
  (IDREC NUMBER(10, 0) NULL,
   DATALOADID NUMBER(10, 0) NULL,
   SHEETNAME CHAR(200) NULL,
   MUXNAME CHAR(200) NULL,
   PORTID CHAR(80) NULL,
   CARDTYPE CHAR(200) NULL,
   BUSTYPE CHAR(80) NULL,
   POVER_ID CHAR(80) NULL,
   SERIALNUMBER CHAR(80) NULL,
   APPTYPE CHAR(80) NULL,
   STATE NUMBER(10, 0) NULL,
   CREATEDATE DATE NULL);

ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT PK_OPTICGATETABLE UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT CKC_STATE_OPTIC CHECK ((state IS NULL ) OR (state IN (0 ,1 ,2 )) );
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005418 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005419 CHECK ("DATALOADID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005420 CHECK ("SHEETNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005421 CHECK ("MUXNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005422 CHECK ("PORTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005423 CHECK ("CARDTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.OPTICGATETABLE
  ADD CONSTRAINT SYS_C005424 CHECK ("SERIALNUMBER" IS NOT NULL);

CREATE TABLE INFORMIX.ORGANIZATIONS
  (ORGANIZATION_ NUMBER(10, 0) NULL,
   COMPANY NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   SHORTNAME CHAR(480) NULL,
   ISSUPPLIER CHAR(4) NULL,
   ISPROVIDER CHAR(4) NULL,
   ISRENTER CHAR(4) NULL,
   OKONH CHAR(160) NULL,
   OKPO CHAR(160) NULL,
   INN CHAR(160) NULL,
   ACCOUNTMANAGERFIO CHAR(320) NULL,
   DIRECTORFIO CHAR(320) NULL,
   PHISICALADDRESS CHAR(320) NULL,
   LEGALADDRESS CHAR(320) NULL,
   PHONE CHAR(320) NULL,
   FAX CHAR(320) NULL,
   ISBANK CHAR(4) NULL,
   SWIFT CHAR(160) NULL,
   KORACCOUNT CHAR(160) NULL,
   BIK CHAR(160) NULL,
   ORGANIZATIONTYPE CHAR(80) NULL,
   BOSSPOSITION VARCHAR2(1020) NULL,
   ZIP CHAR(80) NULL,
   CONTACTLIST BLOB NULL,
   KPP CHAR(160) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   ISCHANNALRENTER CHAR(4) NULL,
   TYPEORG CHAR(4) NULL,
   LASTNAME CHAR(320) NULL,
   FIRSTNAME CHAR(320) NULL,
   MIDDLENAME CHAR(320) NULL,
   PASSPORTSER CHAR(320) NULL,
   PASSPORTNUM CHAR(320) NULL,
   PASSPORTDATE DATE NULL,
   PASSPORTWHOM CHAR(320) NULL,
   MAINORGANIZATION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT PK_ORGANIZATIONS UNIQUE (ORGANIZATION_);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_ISSUPPLI_ORGAN CHECK (issupplier IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_ISPROVID_ORGAN CHECK (isprovider IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_ISRENTER_ORGAN CHECK (isrenter IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_ISCHANNA_ORGAN CHECK (ischannalrenter IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_TYPEORG_ORGAN CHECK (typeorg IN ('B' ,'O' ,'P' ));
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT CKC_ISBANK_ORGAN CHECK (isbank = 'N' );
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005043 CHECK ("ORGANIZATION_" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005044 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005045 CHECK ("ISSUPPLIER" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005046 CHECK ("ISPROVIDER" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005047 CHECK ("ISRENTER" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005048 CHECK ("ISBANK" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005049 CHECK ("ISCHANNALRENTER" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGANIZATIONS
  ADD CONSTRAINT SYS_C005050 CHECK ("TYPEORG" IS NOT NULL);

CREATE TABLE INFORMIX.ORGBEELINEINREGION
  (REGIONID NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ORGBEELINEINREGION
  ADD CONSTRAINT PK_ORGBEELINEINREG UNIQUE (REGIONID, ORGANIZATION_);
 
ALTER TABLE INFORMIX.ORGBEELINEINREGION
  ADD CONSTRAINT SYS_C005295 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.ORGBEELINEINREGION
  ADD CONSTRAINT SYS_C005296 CHECK ("ORGANIZATION_" IS NOT NULL);

CREATE TABLE INFORMIX.OS_CURRENTSTEP
  (ID NUMBER(19, 0) NULL,
   ACTION_ID NUMBER(10, 0) NULL,
   CALLER VARCHAR2(1020) NULL,
   FINISH_DATE DATE NULL,
   START_DATE DATE NULL,
   DUE_DATE DATE NULL,
   OWNER VARCHAR2(1020) NULL,
   STATUS VARCHAR2(1020) NULL,
   STEP_ID NUMBER(10, 0) NULL,
   ENTRY_ID NUMBER(19, 0) NULL,
   STEPINDEX NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OS_CURRENTSTEP
  ADD CONSTRAINT PK_OS_CURRENTSTEP UNIQUE (ID);
 
ALTER TABLE INFORMIX.OS_CURRENTSTEP
  ADD CONSTRAINT SYS_C003643 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.OS_HISTORYSTEP
  (ID NUMBER(19, 0) NULL,
   ACTION_ID NUMBER(10, 0) NULL,
   CALLER VARCHAR2(1020) NULL,
   FINISH_DATE DATE NULL,
   START_DATE DATE NULL,
   DUE_DATE DATE NULL,
   OWNER VARCHAR2(1020) NULL,
   STATUS VARCHAR2(1020) NULL,
   STEP_ID NUMBER(10, 0) NULL,
   ENTRY_ID NUMBER(19, 0) NULL,
   STEPINDEX NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OS_HISTORYSTEP
  ADD CONSTRAINT PK_OS_HISTORYSTEP UNIQUE (ID);
 
ALTER TABLE INFORMIX.OS_HISTORYSTEP
  ADD CONSTRAINT SYS_C003644 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.OS_WFENTRY
  (ID NUMBER(19, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   STATE NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OS_WFENTRY
  ADD CONSTRAINT PK_OS_WFENTRY UNIQUE (ID);
 
ALTER TABLE INFORMIX.OS_WFENTRY
  ADD CONSTRAINT SYS_C006054 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OS_WFENTRY
  ADD CONSTRAINT SYS_C006055 CHECK ("VERSION" IS NOT NULL);

CREATE TABLE INFORMIX.OTHEREQUIPMENT
  (EQUIPMENT NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL);

ALTER TABLE INFORMIX.OTHEREQUIPMENT
  ADD CONSTRAINT PK_OTHEREQUIPMENT UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.OTHEREQUIPMENT
  ADD CONSTRAINT CKC_TYPE_OTHER CHECK (TYPE_ IN ('A' ,'B' ,'C' ,'D' ,'E' ));
 
ALTER TABLE INFORMIX.OTHEREQUIPMENT
  ADD CONSTRAINT SYS_C004214 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.OTHEREQUIPMENT
  ADD CONSTRAINT SYS_C004215 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.OUTERCONNECTIONS
  (ASSOCIATION NUMBER(10, 0) NULL,
   OUTERSYSTEM NUMBER(10, 0) NULL,
   INNERCODE CHAR(160) NULL,
   OUTERCODE CHAR(160) NULL);

ALTER TABLE INFORMIX.OUTERCONNECTIONS
  ADD CONSTRAINT PK_OUTERCONNECTION UNIQUE (ASSOCIATION, OUTERSYSTEM, INNERCODE, OUTERCODE);
 
ALTER TABLE INFORMIX.OUTERCONNECTIONS
  ADD CONSTRAINT SYS_C004050 CHECK ("ASSOCIATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTERCONNECTIONS
  ADD CONSTRAINT SYS_C004051 CHECK ("OUTERSYSTEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTERCONNECTIONS
  ADD CONSTRAINT SYS_C004052 CHECK ("INNERCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTERCONNECTIONS
  ADD CONSTRAINT SYS_C004053 CHECK ("OUTERCODE" IS NOT NULL);

CREATE TABLE INFORMIX.OUTERDOCPOSITIONS
  (OUTERDOCPOSITION NUMBER(10, 0) NULL,
   OUTERQTY NUMBER(15, 3) NULL,
   OUTERPRICE NUMBER(15, 2) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CONFIGURATION CHAR(320) NULL,
   NOTE CHAR(320) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OUTERDOCPOSITIONS
  ADD CONSTRAINT PK_OUTERDOCPOSITIO UNIQUE (OUTERDOCPOSITION);
 
ALTER TABLE INFORMIX.OUTERDOCPOSITIONS
  ADD CONSTRAINT SYS_C003934 CHECK ("OUTERDOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTERDOCPOSITIONS
  ADD CONSTRAINT SYS_C003935 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTERDOCPOSITIONS
  ADD CONSTRAINT SYS_C003936 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.OUTWAYBILLS
  (DOCUMENT NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OUTWAYBILLS
  ADD CONSTRAINT PK_OUTWAYBILLS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.OUTWAYBILLS
  ADD CONSTRAINT SYS_C004208 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.OUTWAYBILLS
  ADD CONSTRAINT SYS_C004209 CHECK ("CURRENCY" IS NOT NULL);

CREATE TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  (REGIONID NUMBER(10, 0) NULL,
   IDOWNERCONTRACT NUMBER(10, 0) NULL,
   ISCONTRACTARENDA CHAR(4) NULL,
   ISABONENTCONTRACT CHAR(4) NULL,
   RATEDELTABILLING NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT PK_OWNERCONTRACT2F UNIQUE (REGIONID, IDOWNERCONTRACT);
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT CKC_ISCONTRA_OWNER CHECK (iscontractarenda IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT CKC_ISABONEN_OWNER CHECK (isabonentcontract IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT SYS_C005994 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT SYS_C005995 CHECK ("IDOWNERCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT SYS_C005996 CHECK ("ISCONTRACTARENDA" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT SYS_C005997 CHECK ("ISABONENTCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERCONTRACT2FILIALNRI
  ADD CONSTRAINT SYS_C005998 CHECK ("RATEDELTABILLING" IS NOT NULL);

CREATE TABLE INFORMIX.OWNERSYSTEMNFS
  (IDOWNERNFS NUMBER(10, 0) NULL,
   NAMEOWNERNFS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.OWNERSYSTEMNFS
  ADD CONSTRAINT PK_OWNERSYSTEMNFS UNIQUE (IDOWNERNFS);
 
ALTER TABLE INFORMIX.OWNERSYSTEMNFS
  ADD CONSTRAINT SYS_C005569 CHECK ("IDOWNERNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERSYSTEMNFS
  ADD CONSTRAINT SYS_C005570 CHECK ("NAMEOWNERNFS" IS NOT NULL);

CREATE TABLE INFORMIX.OWNERSYSTEMNFS2FILIALNRI
  (IDOWNERNFS NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.OWNERSYSTEMNFS2FILIALNRI
  ADD CONSTRAINT PK_OWNERSYSTEMNFS2 UNIQUE (IDOWNERNFS, REGIONID);
 
ALTER TABLE INFORMIX.OWNERSYSTEMNFS2FILIALNRI
  ADD CONSTRAINT SYS_C005592 CHECK ("IDOWNERNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.OWNERSYSTEMNFS2FILIALNRI
  ADD CONSTRAINT SYS_C005593 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.PAPDOCTYPES
  (ID_TYPE_DOC NUMBER(10, 0) NULL,
   TD_NAME CHAR(200) NULL,
   TD_DESCR VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.PAPDOCTYPES
  ADD CONSTRAINT PK_PAPDOCTYPES UNIQUE (ID_TYPE_DOC);
 
ALTER TABLE INFORMIX.PAPDOCTYPES
  ADD CONSTRAINT SYS_C003858 CHECK ("ID_TYPE_DOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.PAPDOCTYPES
  ADD CONSTRAINT SYS_C003859 CHECK ("TD_NAME" IS NOT NULL);

CREATE TABLE INFORMIX.PAPDOCUMENTS
  (PAPDOCUMENT NUMBER(10, 0) NULL,
   DOC_TYPE NUMBER(10, 0) NULL,
   BLANKDATE DATE NULL,
   BLANKNUMBER CHAR(160) NULL,
   DATE_END DATE NULL,
   COMMENT_ VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.PAPDOCUMENTS
  ADD CONSTRAINT PK_PAPDOCUMENTS UNIQUE (PAPDOCUMENT);
 
ALTER TABLE INFORMIX.PAPDOCUMENTS
  ADD CONSTRAINT SYS_C004417 CHECK ("PAPDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PAPDOCUMENTS
  ADD CONSTRAINT SYS_C004418 CHECK ("DOC_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PAPDOCUMENTS
  ADD CONSTRAINT SYS_C004419 CHECK ("BLANKDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PAPDOCUMENTS
  ADD CONSTRAINT SYS_C004420 CHECK ("BLANKNUMBER" IS NOT NULL);

CREATE TABLE INFORMIX.PAPDOC2POS
  (PAPDOCUMENT NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PAPDOC2POS
  ADD CONSTRAINT PK_PAPDOC2POS UNIQUE (PAPDOCUMENT, STORAGEPLACE);
 
ALTER TABLE INFORMIX.PAPDOC2POS
  ADD CONSTRAINT SYS_C004579 CHECK ("PAPDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PAPDOC2POS
  ADD CONSTRAINT SYS_C004580 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.PAYOFFACTS
  (DOCUMENT NUMBER(10, 0) NULL,
   CHAIRMAN NUMBER(10, 0) NULL,
   MEMBER1 NUMBER(10, 0) NULL,
   MEMBER2 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PAYOFFACTS
  ADD CONSTRAINT PK_PAYOFFACTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.PAYOFFACTS
  ADD CONSTRAINT SYS_C004271 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.PBS_BASESTATIONS
  (ID NUMBER(10, 0) NULL,
   BSNUMBER NUMBER(10, 0) NULL,
   BSNAME CHAR(320) NULL,
   DATATYPE NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   ADMINREGIONID NUMBER(10, 0) NULL,
   BSTYPE CHAR(4) NULL,
   EQUIPMANUF NUMBER(10, 0) NULL,
   STARTDATE DATE NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL);

ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT PK_PBS_BASESTATION UNIQUE (ID);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT CKC_DATATYPE_PBS_B CHECK ((datatype IS NULL ) OR (datatype IN (1 ,2 )) );
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT CKC_BSTYPE_PBS_B CHECK (bstype IN ('S' ,'C' ,'G' ,'U' ));
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005731 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005732 CHECK ("NETZONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005733 CHECK ("BSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005734 CHECK ("EQUIPMANUF" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005735 CHECK ("STARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005736 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PBS_BASESTATIONS
  ADD CONSTRAINT SYS_C005737 CHECK ("CREATED" IS NOT NULL);

CREATE TABLE INFORMIX.PEOPLE
  (MAN NUMBER(10, 0) NULL,
   FIRSTNAME CHAR(320) NULL,
   LASTNAME CHAR(320) NULL,
   MIDDLENAME CHAR(320) NULL,
   PASSPORTSER CHAR(320) NULL,
   PASSPORTDATE DATE NULL,
   PASSPORTWHOM CHAR(320) NULL,
   ISACTIVE CHAR(4) NULL,
   TABNUM NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT PK_PEOPLE UNIQUE (MAN);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT CKC_ISACTIVE_PEOPL CHECK (isactive IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004123 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004124 CHECK ("FIRSTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004125 CHECK ("LASTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004126 CHECK ("MIDDLENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004127 CHECK ("PASSPORTSER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PEOPLE
  ADD CONSTRAINT SYS_C004128 CHECK ("ISACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.PERMISSION
  (PERMISSIONID NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   PERMISSIONTX FLOAT(126) NULL,
   PERMISSIONPTX FLOAT(126) NULL,
   PERMISSIONANTENNA FLOAT(126) NULL,
   PERMISSIONHEIGHT FLOAT(126) NULL);

ALTER TABLE INFORMIX.PERMISSION
  ADD CONSTRAINT PK_PERMISSION UNIQUE (PERMISSIONID);
 
ALTER TABLE INFORMIX.PERMISSION
  ADD CONSTRAINT SYS_C004109 CHECK ("PERMISSIONID" IS NOT NULL);

CREATE TABLE INFORMIX.PERMISSION_HOPS
  (PERMISSIONID NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   DATEREG DATE NULL,
   NUMBER_PERMISSION CHAR(512) NULL,
   TYPE_PERMISSION CHAR(512) NULL,
   DATEFINISH DATE NULL,
   COMMENT_ CHAR(512) NULL);

ALTER TABLE INFORMIX.PERMISSION_HOPS
  ADD CONSTRAINT U272_1090 UNIQUE (PERMISSIONID);
 
ALTER TABLE INFORMIX.PERMISSION_HOPS
  ADD CONSTRAINT SYS_C004610 CHECK ("PERMISSIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PERMISSION_HOPS
  ADD CONSTRAINT SYS_C004611 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.PERM2HOPS
  (FREQPERMID NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   NUMBERINFILE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PERM2HOPS
  ADD CONSTRAINT PK_PERM2HOPS UNIQUE (FREQPERMID, HOPSID);
 
ALTER TABLE INFORMIX.PERM2HOPS
  ADD CONSTRAINT SYS_C004724 CHECK ("FREQPERMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PERM2HOPS
  ADD CONSTRAINT SYS_C004725 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_BANKSPLATINUM
  (OWNER NUMBER(10, 0) NULL,
   IDBANKPLATINUM CHAR(160) NULL,
   IDBANKNRI NUMBER(10, 0) NULL,
   P_STATUS CHAR(4) NULL,
   NAME CHAR(400) NULL,
   BIK CHAR(120) NULL,
   SWIFT CHAR(120) NULL,
   KORSCHET CHAR(120) NULL,
   ADDRESS CHAR(400) NULL,
   KORBANK CHAR(400) NULL,
   FLAGWORKNRI CHAR(4) NULL,
   TEMP_STATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT PK_PIE_BANKSPLATIN UNIQUE (OWNER, IDBANKPLATINUM);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT CKC_OWNER_PIE_B CHECK (owner IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT CKC_P_STATUS_PIE_B CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT CKC_FLAGWORK_PIE_B CHECK (flagworknri IN ('N' ,'Y' ,'E' ));
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT CKC_T_STATUS_PIE_B CHECK (temp_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004093 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004094 CHECK ("IDBANKPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004095 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004096 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004097 CHECK ("BIK" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BANKSPLATINUM
  ADD CONSTRAINT SYS_C004098 CHECK ("FLAGWORKNRI" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_BUDJETS
  (IDBUDJETNRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDBUDJET CHAR(160) NULL,
   NAMEBUDJET CHAR(320) NULL,
   IDDIRECT CHAR(160) NULL,
   NAMEDIRECT CHAR(320) NULL,
   IDPROJECT CHAR(160) NULL,
   NAMEPROJECT CHAR(320) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT PK_PIE_BUDJETS UNIQUE (IDBUDJETNRI);
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT CKC_RECORDST_PIE_B CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT SYS_C004110 CHECK ("IDBUDJETNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT SYS_C004111 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT SYS_C004112 CHECK ("IDBUDJET" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT SYS_C004113 CHECK ("NAMEBUDJET" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_BUDJETS
  ADD CONSTRAINT SYS_C004114 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOCPOSNRI
  (IDRECDOCPOS NUMBER(10, 0) NULL,
   IDRECDOC NUMBER(10, 0) NULL,
   IDRESNRI NUMBER(10, 0) NULL,
   COUNTPOLICY CHAR(4) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   SERIALNUMPLAT CHAR(160) NULL,
   PARTYNUM CHAR(160) NULL,
   PARTYNUMPLAT CHAR(160) NULL,
   OLDSTORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT PK_PIE_DOCPOSNRI UNIQUE (IDRECDOCPOS);
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT CKC_CP_PIE_D CHECK (countpolicy IN ('S' ,'P' ,'B' ));
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT SYS_C004250 CHECK ("IDRECDOCPOS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT SYS_C004251 CHECK ("IDRECDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT SYS_C004252 CHECK ("IDRESNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT SYS_C004253 CHECK ("COUNTPOLICY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCPOSNRI
  ADD CONSTRAINT SYS_C004254 CHECK ("QTY" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOCPOSPLATINUM
  (DOCPOSPLATINUM CHAR(120) NULL,
   IDDOCLINK NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_DOCPOSPLATINUM
  ADD CONSTRAINT PK_PIE_DOCPOSPLATI UNIQUE (DOCPOSPLATINUM);
 
ALTER TABLE INFORMIX.PIE_DOCPOSPLATINUM
  ADD CONSTRAINT SYS_C004260 CHECK ("DOCPOSPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCPOSPLATINUM
  ADD CONSTRAINT SYS_C004261 CHECK ("IDDOCLINK" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOCSLINK
  (IDDOCLINK NUMBER(10, 0) NULL,
   IDDOCNRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDDOCPLATINUM CHAR(120) NULL);

ALTER TABLE INFORMIX.PIE_DOCSLINK
  ADD CONSTRAINT PK_PIE_DOCSLINK UNIQUE (IDDOCLINK);
 
ALTER TABLE INFORMIX.PIE_DOCSLINK
  ADD CONSTRAINT SYS_C004169 CHECK ("IDDOCLINK" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSLINK
  ADD CONSTRAINT SYS_C004170 CHECK ("IDDOCNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSLINK
  ADD CONSTRAINT SYS_C004171 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSLINK
  ADD CONSTRAINT SYS_C004172 CHECK ("IDDOCPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOCSNRI
  (IDRECDOC NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   TYPEDOCNRI NUMBER(5, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDDOGOVNRI NUMBER(10, 0) NULL,
   TYPEDOGOVNRI CHAR(4) NULL,
   DATEDOC DATE NULL,
   SOPRNUMBER VARCHAR2(160) NULL,
   GTDNUMBER VARCHAR2(160) NULL,
   HEADUSER NUMBER(10, 0) NULL,
   CONTRGAGENT NUMBER(10, 0) NULL,
   PLACEFROM NUMBER(10, 0) NULL,
   PLACETO NUMBER(10, 0) NULL,
   IDVALUTA NUMBER(10, 0) NULL,
   SUMDOC NUMBER(15, 2) NULL,
   TEMPINBILL CHAR(4) NULL,
   PRIM VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT PK_PIE_DOCSNRI UNIQUE (IDRECDOC);
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT CKC_TYPEDOCN_PIE_D CHECK (typedocnri IN (1 ,2 ,3 ,4 ,5 ,6 ,7 ,12 ,8 ,9 ,10 ));
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT CKC_TYPGO_PIE_D CHECK ((typedogovnri IS NULL ) OR (typedogovnri IN ('O' ,'A' )) );
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT CKC_TEMPINBI_PIE_D CHECK ((tempinbill IS NULL ) OR (tempinbill IN ('P' ,'T' )) );
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT SYS_C004405 CHECK ("IDRECDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT SYS_C004406 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT SYS_C004407 CHECK ("TYPEDOCNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOCSNRI
  ADD CONSTRAINT SYS_C004408 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOGOVORSLINK
  (IDDOGOVORNRI NUMBER(10, 0) NULL,
   TYPEDOGOVORNRI CHAR(4) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDDOGOVORPLATINUM CHAR(160) NULL,
   FLAGUNLOAD NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT PK_PIE_DOGOVORSLIN UNIQUE (IDDOGOVORNRI, TYPEDOGOVORNRI);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT CKC_TYPEDOGO_PIE_L CHECK (typedogovornri IN ('O' ,'A' ));
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT CKC_OWNER_PIE_D CHECK (owner IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT SYS_C004089 CHECK ("IDDOGOVORNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT SYS_C004090 CHECK ("TYPEDOGOVORNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT SYS_C004091 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSLINK
  ADD CONSTRAINT SYS_C004092 CHECK ("IDDOGOVORPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOGOVORSNRI
  (IDRECDOGOVOR NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   IDORGBEELINE NUMBER(10, 0) NULL,
   IDPARTNERNRI NUMBER(10, 0) NULL,
   IDACCOUNTNRI NUMBER(10, 0) NULL,
   IDDOGOVORPLATINUM CHAR(160) NULL,
   PURPOSE VARCHAR2(1020) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   IDBUDJET NUMBER(10, 0) NULL,
   IDEXPENCE NUMBER(10, 0) NULL,
   DOGDATE DATE NULL,
   DOGSTARTDATE DATE NULL,
   DOGFINISHDATE DATE NULL,
   DOGBLANKCODE CHAR(160) NULL,
   IDHEADUSER NUMBER(10, 0) NULL,
   SUMDOG NUMBER(15, 2) NULL,
   VALUTE NUMBER(10, 0) NULL,
   OVERPRICE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT PK_PIE_DOGOVORSNRI UNIQUE (IDRECDOGOVOR);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004544 CHECK ("IDRECDOGOVOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004545 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004546 CHECK ("IDORGBEELINE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004547 CHECK ("IDPARTNERNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004548 CHECK ("IDACCOUNTNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004549 CHECK ("IDDOGOVORPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004550 CHECK ("IDBUDJET" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004551 CHECK ("IDEXPENCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004552 CHECK ("DOGDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004553 CHECK ("DOGSTARTDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004554 CHECK ("DOGFINISHDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004555 CHECK ("DOGBLANKCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004556 CHECK ("SUMDOG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOGOVORSNRI
  ADD CONSTRAINT SYS_C004557 CHECK ("VALUTE" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOPINFOCONTR
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   VENDOR CHAR(160) NULL,
   IDBUDJET NUMBER(10, 0) NULL,
   IDEXPENSE NUMBER(10, 0) NULL,
   DATENRITOPLATINUM DATE NULL,
   DATEPLATINUM DATE NULL,
   FLAGSYNC CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_DOPINFOCONTR
  ADD CONSTRAINT PK_PIE_DOPINFOCONT UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.PIE_DOPINFOCONTR
  ADD CONSTRAINT CKC_FLAGSYN_PIE_D CHECK (flagsync IN ('0' ,'1' ,'2' ,'3' ));
 
ALTER TABLE INFORMIX.PIE_DOPINFOCONTR
  ADD CONSTRAINT SYS_C004105 CHECK ("LEASEDOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOPINFOCONTR
  ADD CONSTRAINT SYS_C004106 CHECK ("FLAGSYNC" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOPINFODOCPOS
  (DOCPOSITION NUMBER(10, 0) NULL,
   FLAGFULLLINK CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_DOPINFODOCPOS
  ADD CONSTRAINT PK_PIE_DOPINFODOCP UNIQUE (DOCPOSITION);
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCPOS
  ADD CONSTRAINT CKC_FLAGFULL_PIE_D CHECK (flagfulllink IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCPOS
  ADD CONSTRAINT SYS_C004059 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCPOS
  ADD CONSTRAINT SYS_C004060 CHECK ("FLAGFULLLINK" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DOPINFODOCS
  (DOCUMENT NUMBER(10, 0) NULL,
   FLAGSYNCPLATINUM CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_DOPINFODOCS
  ADD CONSTRAINT PK_PIE_DOPINFODOCS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCS
  ADD CONSTRAINT CKC_FLAGSYNC_PIE_D CHECK (flagsyncplatinum IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCS
  ADD CONSTRAINT SYS_C004061 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_DOPINFODOCS
  ADD CONSTRAINT SYS_C004062 CHECK ("FLAGSYNCPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_DUAL_DICT
  (IDQUERY NUMBER(10, 0) NULL,
   BANK CHAR(160) NULL,
   BUDJET CHAR(160) NULL,
   EXPENCE CHAR(160) NULL,
   REFERENCE CHAR(160) NULL,
   VALUTE CHAR(160) NULL,
   OTVUSER CHAR(160) NULL);

CREATE TABLE INFORMIX.PIE_DUAL_DOG
  (ID_QUERY NUMBER(10, 0) NULL,
   INN VARCHAR2(120) NULL,
   SNAME VARCHAR2(40) NULL,
   FNAME VARCHAR2(480) NULL,
   ADDRESS VARCHAR2(480) NULL,
   OKPO VARCHAR2(160) NULL,
   VEND_ACCT VARCHAR2(80) NULL,
   KPP VARCHAR2(160) NULL,
   BANK_CODE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.PIE_EXPENCES
  (IDEXPENCENRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDITEM CHAR(160) NULL,
   NAMEITEM CHAR(320) NULL,
   IDEXPENCE CHAR(160) NULL,
   NAMEEXPENCE CHAR(320) NULL,
   IDGRPEXPENCE CHAR(160) NULL,
   NAMEGRPEXPENCE CHAR(320) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT PK_PIE_EXPENCES UNIQUE (IDEXPENCENRI);
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT CKC_RECORDST_PIE_E CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT SYS_C004116 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT SYS_C004117 CHECK ("IDITEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT SYS_C004118 CHECK ("NAMEITEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT SYS_C004119 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_EXPENCES
  ADD CONSTRAINT SYS_C004115 CHECK ("IDEXPENCENRI" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_LINKPRIHRASH
  (IDLINKPRIHODRASHOD NUMBER(10, 0) NULL,
   DOCPOSPRIHOD NUMBER(10, 0) NULL,
   FROMSTORAGEPRIHOD NUMBER(10, 0) NULL,
   DOCPOSRASHOD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT PK_PIE_LINKPRIHRAS UNIQUE (IDLINKPRIHODRASHOD);
 
ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT SYS_C004054 CHECK ("IDLINKPRIHODRASHOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT SYS_C004055 CHECK ("DOCPOSPRIHOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT SYS_C004056 CHECK ("FROMSTORAGEPRIHOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT SYS_C004057 CHECK ("DOCPOSRASHOD" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_LINKPRIHRASH
  ADD CONSTRAINT SYS_C004058 CHECK ("QTY" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_MXRANLINK
  (MXRANNRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   MXRANPLATINUM CHAR(160) NULL);

ALTER TABLE INFORMIX.PIE_MXRANLINK
  ADD CONSTRAINT PK_PIE_MXRANLINK UNIQUE (MXRANNRI, OWNER, MXRANPLATINUM);
 
ALTER TABLE INFORMIX.PIE_MXRANLINK
  ADD CONSTRAINT SYS_C004526 CHECK ("MXRANNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_MXRANLINK
  ADD CONSTRAINT SYS_C004527 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_MXRANLINK
  ADD CONSTRAINT SYS_C004528 CHECK ("MXRANPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_MXRANPLATINUM
  (MXRANPLATINUM CHAR(160) NULL,
   OWNER NUMBER(10, 0) NULL,
   P_STATUS CHAR(4) NULL,
   NAME VARCHAR2(400) NULL);

ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT PK_PIE_MXRANPLATIN UNIQUE (MXRANPLATINUM, OWNER);
 
ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT CKC_P_STATUS_PIE_M CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT SYS_C004173 CHECK ("MXRANPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT SYS_C004174 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT SYS_C004175 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_MXRANPLATINUM
  ADD CONSTRAINT SYS_C004176 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_OTVUSERLINK
  (OTVUSERNRI NUMBER(10, 0) NULL,
   OTVUSERPLATINUM CHAR(160) NULL,
   OWNER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_OTVUSERLINK
  ADD CONSTRAINT PK_PIE_OTVUSERLINK UNIQUE (OTVUSERNRI, OWNER);
 
ALTER TABLE INFORMIX.PIE_OTVUSERLINK
  ADD CONSTRAINT SYS_C004529 CHECK ("OTVUSERNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OTVUSERLINK
  ADD CONSTRAINT SYS_C004530 CHECK ("OTVUSERPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OTVUSERLINK
  ADD CONSTRAINT SYS_C004531 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_OTVUSERPLATIN
  (OTVUSERPLATINUM CHAR(160) NULL,
   P_STATUS CHAR(4) NULL,
   NAME VARCHAR2(400) NULL,
   OWNER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT PK_PIE_OTVUSERPLAT UNIQUE (OTVUSERPLATINUM, OWNER);
 
ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT CKC_P_STATUS_PIE_O CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT SYS_C004177 CHECK ("OTVUSERPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT SYS_C004178 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT SYS_C004179 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OTVUSERPLATIN
  ADD CONSTRAINT SYS_C004180 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_OWNERSRECODE
  (PLATINUMSYSTEM NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   PLATINUMNAME CHAR(320) NULL);

ALTER TABLE INFORMIX.PIE_OWNERSRECODE
  ADD CONSTRAINT PK_PIE_OWNERSRECOD UNIQUE (PLATINUMSYSTEM);
 
ALTER TABLE INFORMIX.PIE_OWNERSRECODE
  ADD CONSTRAINT SYS_C004071 CHECK ("PLATINUMSYSTEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_OWNERSRECODE
  ADD CONSTRAINT SYS_C004072 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_PARTYRESLINK
  (PARTY CHAR(160) NULL,
   OWNER NUMBER(10, 0) NULL,
   PARTYPLATINUM CHAR(160) NULL,
   IDRESPLATINUM CHAR(120) NULL);

ALTER TABLE INFORMIX.PIE_PARTYRESLINK
  ADD CONSTRAINT PK_PIE_PARTYRESLIN UNIQUE (PARTY, OWNER);
 
ALTER TABLE INFORMIX.PIE_PARTYRESLINK
  ADD CONSTRAINT SYS_C004067 CHECK ("PARTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PARTYRESLINK
  ADD CONSTRAINT SYS_C004068 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PARTYRESLINK
  ADD CONSTRAINT SYS_C004069 CHECK ("PARTYPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PARTYRESLINK
  ADD CONSTRAINT SYS_C004070 CHECK ("IDRESPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_PAYSLINK
  (IDPAYPLATINUM CHAR(120) NULL,
   DOCPOSITION NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_PAYSLINK
  ADD CONSTRAINT PK_PIE_PAYSLINK UNIQUE (IDPAYPLATINUM, OWNER);
 
ALTER TABLE INFORMIX.PIE_PAYSLINK
  ADD CONSTRAINT CKC_OWN_PLINK CHECK (owner IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.PIE_PAYSLINK
  ADD CONSTRAINT SYS_C004558 CHECK ("IDPAYPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSLINK
  ADD CONSTRAINT SYS_C004559 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSLINK
  ADD CONSTRAINT SYS_C004560 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_PAYSNRI
  (ID NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   TYPEDOGOVNRI CHAR(4) NULL,
   IDDOGOVNRI NUMBER(10, 0) NULL,
   IDACCOUNTNRI NUMBER(10, 0) NULL,
   TYPEBASEDOC NUMBER(10, 0) NULL,
   PURPOSEPAY VARCHAR2(1020) NULL,
   DATEBUCH DATE NULL,
   DATECREATE DATE NULL,
   SUMPAY NUMBER(15, 2) NULL,
   NDSPAY NUMBER(15, 2) NULL,
   VALUTEPAY NUMBER(10, 0) NULL,
   DATEBEFOREPAY DATE NULL,
   IDUSERNRI NUMBER(10, 0) NULL,
   IDBUDJET NUMBER(10, 0) NULL,
   IDEXPENCE NUMBER(10, 0) NULL,
   IDPAYMODE NUMBER(10, 0) NULL,
   DEFINERATE NUMBER(10, 0) NULL,
   IDPAYTYPE NUMBER(10, 0) NULL,
   IDTYPEFORBUCH NUMBER(10, 0) NULL,
   TIP_RASXODOV NUMBER(10, 0) NULL,
   ISAVANS NUMBER(5, 0) NULL,
   PERCENTAVANS NUMBER(5, 2) NULL,
   NUMBERANDDATEBDOC CHAR(120) NULL,
   FL101 CHAR(8) NULL,
   FL104 CHAR(28) NULL,
   FL105 CHAR(44) NULL,
   FL106 CHAR(8) NULL,
   FL107 CHAR(40) NULL,
   FL108 CHAR(64) NULL,
   FL109 CHAR(40) NULL,
   FL110 CHAR(8) NULL);

ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT PK_PIE_PAYSNRI UNIQUE (ID);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT CKC_ISAVANS_PIE_P CHECK ((isavans IS NULL ) OR (isavans IN (1 ,0 ,2 )) );
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT CKC_TYPEDOGO_PIE_P CHECK (typedogovnri IN ('O' ,'A' ));
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004625 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004626 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004627 CHECK ("TYPEDOGOVNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004628 CHECK ("IDDOGOVNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004629 CHECK ("IDACCOUNTNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004630 CHECK ("DATECREATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004631 CHECK ("SUMPAY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004632 CHECK ("NDSPAY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSNRI
  ADD CONSTRAINT SYS_C004633 CHECK ("VALUTEPAY" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_PAYSPLATINUM
  (IDPAYPLATINUM CHAR(120) NULL,
   IDDOGOVORNRI NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   FLAGWORKNRI CHAR(4) NULL,
   PURPOSEPAY VARCHAR2(1020) NULL,
   PAYSTATEPLATINUM NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCPOSITION NUMBER(10, 0) NULL,
   RECORDSTATUS CHAR(4) NULL,
   OWNER NUMBER(10, 0) NULL,
   SZSUM FLOAT(126) NULL,
   SZNDS FLOAT(126) NULL,
   SZVALUTE NUMBER(10, 0) NULL,
   PAYSUM FLOAT(126) NULL,
   PAYNDS FLOAT(126) NULL,
   PAYVALUTE NUMBER(10, 0) NULL,
   RATEHOME FLOAT(126) NULL,
   RATEHOME1 FLOAT(126) NULL);

ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT PK_PIE_PAYSPLATINU UNIQUE (IDPAYPLATINUM, OWNER);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT CKC_FLAGWORK_PIE_P CHECK (flagworknri IN ('P' ,'N' ,'Y' ,'E' ));
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT CKC_RECORDST_PIE_P CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT CKC_OWN_PPAYS CHECK (owner IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004479 CHECK ("IDPAYPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004480 CHECK ("IDDOGOVORNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004481 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004482 CHECK ("FLAGWORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004483 CHECK ("PURPOSEPAY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004484 CHECK ("PAYSTATEPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004485 CHECK ("DOCNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004486 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_PAYSPLATINUM
  ADD CONSTRAINT SYS_C004487 CHECK ("OWNER" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_POLPLATLINK
  (IDACCOUNTNRI NUMBER(10, 0) NULL,
   IDDOGOVORNRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDPOLPLATPLATINUM CHAR(120) NULL);

ALTER TABLE INFORMIX.PIE_POLPLATLINK
  ADD CONSTRAINT PK_PIE_POLPLATLINK UNIQUE (IDACCOUNTNRI, IDDOGOVORNRI, OWNER);
 
ALTER TABLE INFORMIX.PIE_POLPLATLINK
  ADD CONSTRAINT SYS_C004076 CHECK ("IDACCOUNTNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_POLPLATLINK
  ADD CONSTRAINT SYS_C004077 CHECK ("IDDOGOVORNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_POLPLATLINK
  ADD CONSTRAINT SYS_C004078 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_POLPLATLINK
  ADD CONSTRAINT SYS_C004079 CHECK ("IDPOLPLATPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_QUERY
  (ID_QUERY NUMBER(10, 0) NULL,
   TYPE_QUERY CHAR(60) NULL,
   OPERATION CHAR(32) NULL,
   STATUS CHAR(4) NULL,
   STATUS_OP CHAR(4) NULL,
   ID_PLATINUM_QRY NUMBER(10, 0) NULL,
   TYPEOBJNRI CHAR(40) NULL,
   IDOBJNRIINT NUMBER(10, 0) NULL,
   IDOBJNRISTR CHAR(160) NULL,
   OWNER NUMBER(10, 0) NULL,
   DAT_BEG DATE NULL,
   DAT_END DATE NULL,
   IDOBJPLAT VARCHAR2(160) NULL,
   VDAT DATE NULL,
   VOPER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT PK_PIE_QUERY UNIQUE (ID_QUERY);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT CKC_OPERATIO_PIE_Q CHECK (operation IN ('INSERT' ,'UPDATE' ,'DELETE' ,'INF' ));
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT CKC_STATUS_PIE_Q CHECK (status IN ('A' ,'Y' ,'E' ,'P' ,'D' ,'G' ,'B' ,'K' ));
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT CKC_TYPEOBJN_PIE_Q CHECK ((typeobjnri IS NULL ) OR (typeobjnri IN ('DOC' ,'PART' ,'BIKBANK' ,'ACCOUNT' ,'LEASEDOG' ,'PAYMENT' )) );
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT CKC_TYPE_QUE_PIE_Q CHECK (type_query IN ('A_PARTNER' ,'A_SCHET' ,'O_VPRIX2' ,'O_VPRIH1' ,'O_VRASX1' ,'O_ZAMEN1' ,'O_ZAMEN2' ,'O_SPIS1' ,'O_INVEN1' ,'IRES' ,'IOTV' ,'IMXRAN' ,'IBANK1' ,'IBANK2' ,'IVAL ' ,'A_PAY' ,'A_DOGOV' ,'IPAY' ,'IBUD' ,'IZATR' ,'IZPOD' ,'IPROJ' ,'ITDIR' ,'UNKNSTRGDOC' ,'IPAY1' ,'IPAY2' ,'IPAY3' ,'GETPAYS' ,'MOVEBANKS' ,'IUSER' ));
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004160 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004161 CHECK ("TYPE_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004162 CHECK ("OPERATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004163 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004164 CHECK ("STATUS_OP" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY
  ADD CONSTRAINT SYS_C004165 CHECK ("VDAT" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_QUERY_DIR
  (ID_NRI_QUERY_DIR NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   SOST_BEG CHAR(4) NULL,
   SOST_END CHAR(8) NULL,
   VDAT DATE NULL);

ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT PK_PIE_QUERY_DIR UNIQUE (ID_NRI_QUERY_DIR);
 
ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT SYS_C004245 CHECK ("ID_NRI_QUERY_DIR" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT SYS_C004246 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT SYS_C004247 CHECK ("SOST_BEG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT SYS_C004248 CHECK ("SOST_END" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_DIR
  ADD CONSTRAINT SYS_C004249 CHECK ("VDAT" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_QUERY_LIST
  (ID_QUERY_LIST NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   TYPEOBJNRI CHAR(40) NULL,
   IDOBJNRIINT NUMBER(10, 0) NULL,
   IDOBJNRISTR CHAR(160) NULL);

ALTER TABLE INFORMIX.PIE_QUERY_LIST
  ADD CONSTRAINT PK_PIE_QUERY_LIST UNIQUE (ID_QUERY_LIST);
 
ALTER TABLE INFORMIX.PIE_QUERY_LIST
  ADD CONSTRAINT CKC_TYPEOBJN_PLIST CHECK (typeobjnri IN ('DOC' ,'PART' ,'BIKBANK' ,'ACCOUNT' ));
 
ALTER TABLE INFORMIX.PIE_QUERY_LIST
  ADD CONSTRAINT SYS_C004235 CHECK ("ID_QUERY_LIST" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LIST
  ADD CONSTRAINT SYS_C004236 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LIST
  ADD CONSTRAINT SYS_C004237 CHECK ("TYPEOBJNRI" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_QUERY_LOG
  (ID_NRI_QUERY_LOG NUMBER(10, 0) NULL,
   ID_QUERY NUMBER(10, 0) NULL,
   TYPE_MSG CHAR(4) NULL,
   TYPE_SYSTEM CHAR(4) NULL,
   ERRORCODE NUMBER(10, 0) NULL,
   TEXT_MSG VARCHAR2(1020) NULL,
   VDAT DATE NULL,
   INT1 NUMBER(10, 0) NULL,
   INT2 NUMBER(10, 0) NULL,
   INT3 NUMBER(10, 0) NULL,
   DATE1 DATE NULL,
   DATE2 DATE NULL,
   DATE3 DATE NULL,
   DEC1 NUMBER(15, 2) NULL,
   DEC2 NUMBER(15, 2) NULL,
   DEC3 NUMBER(15, 3) NULL,
   STRING1 CHAR(160) NULL,
   STRING2 CHAR(160) NULL,
   STRING3 CHAR(160) NULL,
   STRING4 CHAR(160) NULL,
   STRING5 CHAR(160) NULL);

ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT PK_PIE_QUERY_LOG UNIQUE (ID_NRI_QUERY_LOG);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT CKC_TYPE_MSG_PIE_Q CHECK (type_msg IN ('I' ,'W' ,'E' ));
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT CKC_TYPE_SYS_PIE_Q CHECK (type_system IN ('P' ,'N' ));
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004238 CHECK ("ID_NRI_QUERY_LOG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004239 CHECK ("ID_QUERY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004240 CHECK ("TYPE_MSG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004241 CHECK ("TYPE_SYSTEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004242 CHECK ("ERRORCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004243 CHECK ("TEXT_MSG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_QUERY_LOG
  ADD CONSTRAINT SYS_C004244 CHECK ("VDAT" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_REFERENCE
  (IDREFERENCE NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDPLATINUM CHAR(160) NULL,
   P_STATUS CHAR(4) NULL,
   SPRAV CHAR(4) NULL,
   NAME VARCHAR2(400) NULL);

ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT PK_PIE_REFERENCE UNIQUE (IDREFERENCE);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT CKC_P_STAT_PIE_RF CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004099 CHECK ("IDREFERENCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004100 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004101 CHECK ("IDPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004102 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004103 CHECK ("SPRAV" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_REFERENCE
  ADD CONSTRAINT SYS_C004104 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_RESLINK
  (IDRESNRI NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   IDRESPLATINUM CHAR(120) NULL,
   VDAT DATE NULL,
   VOPER NUMBER(10, 0) NULL,
   FLAGMAINLINK CHAR(4) NULL);

ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT PK_PIE_RESLINK UNIQUE (IDRESNRI, OWNER, IDRESPLATINUM);
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT CKC_FLAGMAIN_PIE_R CHECK (flagmainlink IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT SYS_C004255 CHECK ("IDRESNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT SYS_C004256 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT SYS_C004257 CHECK ("IDRESPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT SYS_C004258 CHECK ("VDAT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESLINK
  ADD CONSTRAINT SYS_C004259 CHECK ("FLAGMAINLINK" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_RESPLATINUM
  (IDRESPLATINUM CHAR(120) NULL,
   OWNER NUMBER(10, 0) NULL,
   NAMERES CHAR(400) NULL);

ALTER TABLE INFORMIX.PIE_RESPLATINUM
  ADD CONSTRAINT PK_PIE_RESPLATINUM UNIQUE (IDRESPLATINUM, OWNER);
 
ALTER TABLE INFORMIX.PIE_RESPLATINUM
  ADD CONSTRAINT SYS_C004166 CHECK ("IDRESPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESPLATINUM
  ADD CONSTRAINT SYS_C004167 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_RESPLATINUM
  ADD CONSTRAINT SYS_C004168 CHECK ("NAMERES" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_SERIALRESLINK
  (STORAGECARD NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   SERIALPLATINUM CHAR(160) NULL,
   IDRESPLATINUM CHAR(120) NULL);

ALTER TABLE INFORMIX.PIE_SERIALRESLINK
  ADD CONSTRAINT PK_PIE_SERIALRESLI UNIQUE (STORAGECARD, OWNER);
 
ALTER TABLE INFORMIX.PIE_SERIALRESLINK
  ADD CONSTRAINT SYS_C004063 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_SERIALRESLINK
  ADD CONSTRAINT SYS_C004064 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_SERIALRESLINK
  ADD CONSTRAINT SYS_C004065 CHECK ("SERIALPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_SERIALRESLINK
  ADD CONSTRAINT SYS_C004066 CHECK ("IDRESPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_USERLINK
  (USERNRI NUMBER(10, 0) NULL,
   USERPLATINUM NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_USERLINK
  ADD CONSTRAINT PK_PIE_USERLINK UNIQUE (USERNRI);
 
ALTER TABLE INFORMIX.PIE_USERLINK
  ADD CONSTRAINT SYS_C004466 CHECK ("USERNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_USERLINK
  ADD CONSTRAINT SYS_C004467 CHECK ("USERPLATINUM" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_USERPLATIN
  (USERPLATINUM NUMBER(10, 0) NULL,
   P_STATUS CHAR(4) NULL,
   NAME VARCHAR2(400) NULL);

ALTER TABLE INFORMIX.PIE_USERPLATIN
  ADD CONSTRAINT PK_PIE_USERPLATIN UNIQUE (USERPLATINUM);
 
ALTER TABLE INFORMIX.PIE_USERPLATIN
  ADD CONSTRAINT CKC_P_STAT_USPL_O CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_USERPLATIN
  ADD CONSTRAINT SYS_C004464 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_USERPLATIN
  ADD CONSTRAINT SYS_C004465 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.PIE_VALUTES
  (IDVALUTEPLATINUM CHAR(160) NULL,
   P_STATUS CHAR(4) NULL,
   NAME VARCHAR2(320) NULL,
   IDVAUTENRI NUMBER(10, 0) NULL,
   FLAGMAIN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT PK_PIE_VALUTES UNIQUE (IDVALUTEPLATINUM);
 
ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT CKC_P_STATUS_PIE_V CHECK (p_status IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT CKC_PIE_VALUT_FLAG CHECK (flagmain IN (1 ,0 ));
 
ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT SYS_C004073 CHECK ("IDVALUTEPLATINUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT SYS_C004074 CHECK ("P_STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PIE_VALUTES
  ADD CONSTRAINT SYS_C004075 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.POSBEFOREUPDATE
  (STORAGEPLACE NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.POSIRCUT
  (REGIONID NUMBER(10, 0) NULL,
   NETZONEID NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ADDRESS CHAR(320) NULL,
   LON NUMBER(10, 6) NULL,
   LAT NUMBER(10, 6) NULL);

CREATE TABLE INFORMIX.POSITIONS
  (STORAGEPLACE NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   DCSID NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   DAMPSID NUMBER(10, 0) NULL,
   DAMPSNAME CHAR(160) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   DETAILS VARCHAR2(512) NULL,
   CONTACTPHONES BLOB NULL,
   SERVICESPHONES BLOB NULL,
   PATHTYPE BLOB NULL,
   EQUIPMENTPLACES BLOB NULL,
   ENGENERING BLOB NULL,
   ACCESSLIST BLOB NULL,
   ACCESSLISTEXP DATE NULL,
   RENTER NUMBER(10, 0) NULL,
   RENTVOLUME CHAR(80) NULL,
   ACCESSLISTFILENAME CHAR(320) NULL,
   INACTION CHAR(4) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LINKTOGOSNET_LAT CHAR(40) NULL,
   LINKTOGOSNET_LON CHAR(40) NULL,
   DATE_BEGINBUILD DATE NULL,
   DOG_NUMBER CHAR(400) NULL,
   DOG_DATE DATE NULL,
   PAY_A NUMBER(10, 2) NULL,
   SQ_QTY NUMBER(6, 2) NULL,
   PLANSTATE CHAR(4) NULL,
   DATE_ENDBUILD DATE NULL,
   DATE_POSCLOSE DATE NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   OPORPLACEID NUMBER(10, 0) NULL,
   OPORAHEIGHT NUMBER(4, 1) NULL,
   OPORADATE DATE NULL,
   OPORAOUR CHAR(4) NULL,
   APTYPEID NUMBER(10, 0) NULL,
   APPLACETYPEID NUMBER(10, 0) NULL,
   APPLACEID NUMBER(10, 0) NULL,
   POSSTATE CHAR(4) NULL,
   HAVEPLAN CHAR(4) NULL,
   ORDERNO CHAR(80) NULL,
   DOCADDRESS VARCHAR2(1020) NULL,
   GRCHADDRESS VARCHAR2(1020) NULL,
   GRCHLAT CHAR(48) NULL,
   GRCHLONG CHAR(48) NULL,
   AVG_H_SET NUMBER(6, 2) NULL,
   COMMENT_DOC VARCHAR2(1020) NULL,
   INMETRO CHAR(4) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   LATITUDE_WGS84 NUMBER(10, 6) NULL,
   LONGITUDE_WGS84 NUMBER(10, 6) NULL,
   GEOSYSTEM NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   SETTLEMENTID NUMBER(10, 0) NULL,
   ADMINREGIONID NUMBER(10, 0) NULL,
   ADDRESS_STREET VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE NUMBER(10, 0) NULL,
   ADDRESS_HOME CHAR(40) NULL,
   ADDRESS_CORPUS CHAR(40) NULL,
   ADDRESS_BUILDING CHAR(40) NULL,
   ADDRESS_FLOOR CHAR(40) NULL,
   ADDRESS_ROOM CHAR(40) NULL,
   ADDRESS_OTHER VARCHAR2(1020) NULL,
   ARENDA_TYPE NUMBER(10, 0) NULL,
   HAVE_VIMPEQUIP NUMBER(10, 0) NULL,
   OPORATYPEID NUMBER(10, 0) NULL,
   OPORAOWNER NUMBER(10, 0) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   SUPPLY_CATEGORY NUMBER(10, 0) NULL,
   ISLIGHTFIRE NUMBER(10, 0) NULL,
   ISSUPPLYRESERVE NUMBER(10, 0) NULL,
   LFIBP_RESOURCE NUMBER(10, 0) NULL,
   AVR_BOARD NUMBER(10, 0) NULL,
   STREETID NUMBER(10, 0) NULL,
   POSCODE CHAR(44) NULL);

ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT PK_POSITIONS UNIQUE (STORAGEPLACE);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_INACTION_POSIT CHECK ((inaction IS NULL ) OR (inaction IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_PLANSTAT_POSIT CHECK (planstate IN ('0' ,'1' ,'2' ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_OPORAOUR_POSIT CHECK ((oporaour IS NULL ) OR (oporaour IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_POSSTATE_POSIT CHECK (posstate IN ('P' ,'E' ,'D' ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_HAVEPLAN_POSIT CHECK ((haveplan IS NULL ) OR (haveplan IN ('A' ,'B' ,'C' ,'D' )) );
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_ISLIGHTF_POSIT CHECK (islightfire IN (0 ,1 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_ISSUPPLY_POSIT CHECK (issupplyreserve IN (0 ,1 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_INMETRO_POSIT CHECK (inmetro IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_DATASOUR_POSIT CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_HAVE_VIM_POSIT CHECK (have_vimpequip IN (1 ,2 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_GEOSYSTE_POSIT CHECK (geosystem IN (1 ,2 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT CKC_ARENDA_T_POSIT CHECK (arenda_type IN (1 ,2 ));
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005040 CHECK ("ISLIGHTFIRE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005041 CHECK ("ISSUPPLYRESERVE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005042 CHECK ("POSCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005027 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005028 CHECK ("LATITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005029 CHECK ("LONGITUDE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005030 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005031 CHECK ("PLANSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005032 CHECK ("POSSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005033 CHECK ("INMETRO" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005034 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005035 CHECK ("LATITUDE_WGS84" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005036 CHECK ("LONGITUDE_WGS84" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005037 CHECK ("GEOSYSTEM" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005038 CHECK ("ARENDA_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSITIONS
  ADD CONSTRAINT SYS_C005039 CHECK ("HAVE_VIMPEQUIP" IS NOT NULL);

CREATE TABLE INFORMIX.POSITIONSCHANGEPOSCODE
  (STORAGEPLACE NUMBER(10, 0) NULL,
   OLDPOSCODE CHAR(44) NULL,
   NEWPOSCODE CHAR(44) NULL,
   WHEN_ DATE NULL);

ALTER TABLE INFORMIX.POSITIONSCHANGEPOSCODE
  ADD CONSTRAINT U962_4181 UNIQUE (STORAGEPLACE);

CREATE TABLE INFORMIX.POSMOS071102
  (IDREC NUMBER(10, 0) NULL,
   NUMPOS CHAR(44) NULL,
   NUMBS NUMBER(10, 0) NULL,
   NAMEBS VARCHAR2(1020) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LON FLOAT(126) NULL,
   LAT FLOAT(126) NULL,
   QTYRACKBTS NUMBER(10, 0) NULL,
   TYPECAPEX NUMBER(10, 0) NULL,
   TASK CHAR(160) NULL,
   PRIORITY NUMBER(10, 0) NULL,
   CELLNAME CHAR(80) NULL,
   TYPERACKBTS VARCHAR2(1020) NULL,
   NUMRACKBTS CHAR(40) NULL,
   SUFFIKS CHAR(4) NULL,
   CI NUMBER(10, 0) NULL,
   BAND NUMBER(10, 0) NULL,
   QTYTRX NUMBER(10, 0) NULL,
   STATE CHAR(200) NULL,
   TYPEANTENA CHAR(200) NULL,
   HEIGHT NUMBER(10, 0) NULL,
   QTYANTENA NUMBER(10, 0) NULL,
   FILIALNRI NUMBER(10, 0) NULL,
   STORAGEPLACENRI NUMBER(10, 0) NULL,
   POSCODENRI CHAR(44) NULL,
   ERRTYPE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.POSREQUESTS
  (ID NUMBER(10, 0) NULL,
   IDPOSITION NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   SETTLEMENTID NUMBER(10, 0) NULL,
   ADDRESS_STREET VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE NUMBER(10, 0) NULL,
   ADDRESS_HOME CHAR(40) NULL,
   ADDRESS_CORPUS CHAR(40) NULL,
   ADDRESS_BUILDING CHAR(40) NULL,
   ADDRESS_FLOOR CHAR(40) NULL,
   ADDRESS_ROOM CHAR(40) NULL,
   ADDRESS_OTHER VARCHAR2(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   GEOSYSTEM NUMBER(10, 0) NULL,
   STREETID NUMBER(10, 0) NULL,
   POSSTATE CHAR(4) NULL,
   BEENETID CHAR(48) NULL,
   POSCODE CHAR(80) NULL,
   ADMINCOMMENTS VARCHAR2(1020) NULL,
   DATE_POSCLOSE DATE NULL,
   EXTERNAL_SYSTEM NUMBER(10, 0) NULL,
   REQCODE VARCHAR2(96) NULL);

ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT PK_POSREQUESTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT CKC_TYPE_POSRE CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT CKC_STATE_POSRE CHECK ((state IS NULL ) OR (state IN ('R' ,'W' ,'C' ,'A' ,'N' )) );
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT CKC_GEOSYSTE_POSRE CHECK ((geosystem IS NULL ) OR (geosystem IN (1 ,2 )) );
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT CKC_POSSTATE_POSRE CHECK ((posstate IS NULL ) OR (posstate IN ('P' ,'E' ,'D' )) );
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT SYS_C003463 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT SYS_C003464 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT SYS_C003465 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.POSREQUESTS
  ADD CONSTRAINT SYS_C003466 CHECK ("POSCODE" IS NOT NULL);

CREATE TABLE INFORMIX.POWERSUPPLIES
  (IDREC NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   SUPPLYCLASS NUMBER(10, 0) NULL,
   IBPTYPE NUMBER(10, 0) NULL,
   AKBTYPE NUMBER(10, 0) NULL,
   POWER NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.POWERSUPPLIES
  ADD CONSTRAINT PK_POWERSUPPLIES UNIQUE (IDREC);
 
ALTER TABLE INFORMIX.POWERSUPPLIES
  ADD CONSTRAINT CKC_SUPPLYCL_POWER CHECK ((supplyclass IS NULL ) OR (supplyclass IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.POWERSUPPLIES
  ADD CONSTRAINT SYS_C005704 CHECK ("IDREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.POWERSUPPLIES
  ADD CONSTRAINT SYS_C005705 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.POWERSUPPLYSET
  (RESOURCESET NUMBER(10, 0) NULL,
   POWER NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.POWERSUPPLYSET
  ADD CONSTRAINT PK_POWERSUPPLYSET UNIQUE (RESOURCESET);
 
ALTER TABLE INFORMIX.POWERSUPPLYSET
  ADD CONSTRAINT SYS_C005706 CHECK ("RESOURCESET" IS NOT NULL);
 
ALTER TABLE INFORMIX.POWERSUPPLYSET
  ADD CONSTRAINT SYS_C005707 CHECK ("POWER" IS NOT NULL);

CREATE TABLE INFORMIX.PROFILE
  (OPERATORID NUMBER(10, 0) NULL,
   KEY CHAR(256) NULL,
   NAME CHAR(256) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   NUM_VALUE NUMBER(15, 4) NULL,
   STR_VALUE VARCHAR2(1020) NULL,
   DATE_VALUE DATE NULL,
   CLOB_VALUE BLOB NULL,
   KEY_TYPE NUMBER(10, 0) NULL,
   MODIFIED DATE NULL);

ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT PK_PROFILE UNIQUE (OPERATORID, KEY, NAME);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT CKC_TYPE_PROFI CHECK (TYPE_ IN (1 ,2 ,3 ,4 ,5 ));
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT CKC_KEY_TYPE_PROFI CHECK (key_type IN (0 ,1 ));
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005076 CHECK ("OPERATORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005077 CHECK ("KEY" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005078 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005079 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005080 CHECK ("KEY_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROFILE
  ADD CONSTRAINT SYS_C005081 CHECK ("MODIFIED" IS NOT NULL);

CREATE TABLE INFORMIX.PROJACTIONDOCS
  (PRJACTDOC NUMBER(10, 0) NULL,
   PROJECTACTION NUMBER(10, 0) NULL,
   DOCDATE DATE NULL,
   DOCNAME CHAR(320) NULL,
   DOCBODY BLOB NULL,
   NOTES VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.PROJACTIONDOCS
  ADD CONSTRAINT PK_PROJACTIONDOCS UNIQUE (PRJACTDOC);
 
ALTER TABLE INFORMIX.PROJACTIONDOCS
  ADD CONSTRAINT SYS_C004885 CHECK ("PRJACTDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJACTIONDOCS
  ADD CONSTRAINT SYS_C004886 CHECK ("PROJECTACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJACTIONDOCS
  ADD CONSTRAINT SYS_C004887 CHECK ("DOCDATE" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTACTIONCOMMS
  (PROJECTACTION NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   COMMENT_ BLOB NULL);

ALTER TABLE INFORMIX.PROJECTACTIONCOMMS
  ADD CONSTRAINT PK_PROJECTACTIONCO UNIQUE (PROJECTACTION, DIVISION);
 
ALTER TABLE INFORMIX.PROJECTACTIONCOMMS
  ADD CONSTRAINT SYS_C005101 CHECK ("PROJECTACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONCOMMS
  ADD CONSTRAINT SYS_C005102 CHECK ("DIVISION" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTACTIONS
  (PROJECTACTION NUMBER(10, 0) NULL,
   PROJECT NUMBER(10, 0) NULL,
   PROJECTACTIONTYPE NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL,
   PLANDATE DATE NULL,
   FACTDATE DATE NULL,
   AGREEMENT CHAR(4) NULL,
   NOTES BLOB NULL,
   HASPROBLEMS CHAR(4) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   COMPLETED CHAR(4) NULL,
   SUGGPLANDATE DATE NULL,
   ISNEWPLANDATE CHAR(4) NULL);

ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT PK_PROJECTACTIONS UNIQUE (PROJECTACTION);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT CKC_AGREEMEN_PROJE CHECK ((agreement IS NULL ) OR (agreement IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT CKC_HASPROBL_PROJE CHECK (hasproblems IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT CKC_COMPLETE_PROJE CHECK (completed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT CKC_ISNEWPLA_PROJE CHECK (isnewplandate IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005088 CHECK ("PROJECTACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005089 CHECK ("PROJECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005090 CHECK ("PROJECTACTIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005091 CHECK ("ORDER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005092 CHECK ("HASPROBLEMS" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005093 CHECK ("COMPLETED" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONS
  ADD CONSTRAINT SYS_C005094 CHECK ("ISNEWPLANDATE" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTACTIONTYPES
  (PROJECTACTIONTYPE NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   RESULT CHAR(160) NULL,
   EQUIPTYPE CHAR(4) NULL,
   TYPERESPONSIBILITY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT PK_PROJECTACTIONTY UNIQUE (PROJECTACTIONTYPE);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT CKC_EQUIPTYP_PROJE CHECK (equiptype IN ('0' ,'1' ,'2' ,'3' ,'4' ));
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004010 CHECK ("PROJECTACTIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004011 CHECK ("DIVISION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004012 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004013 CHECK ("RESULT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004014 CHECK ("EQUIPTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTACTIONTYPES
  ADD CONSTRAINT SYS_C004015 CHECK ("TYPERESPONSIBILITY" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTDIVCOLUMNS
  (DIVCOLID NUMBER(10, 0) NULL,
   PROJECTTYPE NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   COLNAME CHAR(320) NULL,
   AFTERCOL NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT PK_PROJECTDIVCOLUM UNIQUE (DIVCOLID);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT SYS_C004647 CHECK ("DIVCOLID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT SYS_C004648 CHECK ("PROJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT SYS_C004649 CHECK ("DIVISION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT SYS_C004650 CHECK ("COLNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLUMNS
  ADD CONSTRAINT SYS_C004651 CHECK ("AFTERCOL" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTDIVCOLVALS
  (DIVCOLID NUMBER(10, 0) NULL,
   PROJECT NUMBER(10, 0) NULL,
   COLVALUE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.PROJECTDIVCOLVALS
  ADD CONSTRAINT PK_PROJECTDIVCOLVA UNIQUE (DIVCOLID, PROJECT);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLVALS
  ADD CONSTRAINT SYS_C004652 CHECK ("DIVCOLID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLVALS
  ADD CONSTRAINT SYS_C004653 CHECK ("PROJECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTDIVCOLVALS
  ADD CONSTRAINT SYS_C004654 CHECK ("COLVALUE" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTS
  (PROJECT NUMBER(10, 0) NULL,
   CONTRUCTER NUMBER(10, 0) NULL,
   PROJECTTYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   NOTES BLOB NULL,
   DATESTART DATE NULL,
   MONTHFINISH NUMBER(5, 0) NULL,
   YEARFINISH NUMBER(10, 0) NULL,
   VCTEXT CHAR(320) NULL,
   VCCONTRUCTER NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROJECTS
  ADD CONSTRAINT PK_PROJECTS UNIQUE (PROJECT);
 
ALTER TABLE INFORMIX.PROJECTS
  ADD CONSTRAINT SYS_C005095 CHECK ("PROJECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTS
  ADD CONSTRAINT SYS_C005096 CHECK ("PROJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTS
  ADD CONSTRAINT SYS_C005097 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTS
  ADD CONSTRAINT SYS_C005098 CHECK ("POSITION" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTS_CHANGELOG
  (IDMAINREC NUMBER(10, 0) NULL,
   CHANGEDATE DATE NULL,
   PROJECTID NUMBER(10, 0) NULL,
   NAME CHAR(2000) NULL,
   GSMID NUMBER(10, 0) NULL,
   ADDRESS CHAR(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   ANTPLACE CHAR(320) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   BRANCH NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   RESTYPE NUMBER(10, 0) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   CASE_COUNT NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   EDITOR NUMBER(10, 0) NULL,
   KZLREGIONID NUMBER(10, 0) NULL,
   CONTROLLER NUMBER(10, 0) NULL,
   SETTLEMENTID NUMBER(10, 0) NULL,
   AUTOADDRESS CHAR(1020) NULL,
   FORMTYPE NUMBER(10, 0) NULL,
   BEENETID CHAR(48) NULL,
   TSCONTYPE NUMBER(10, 0) NULL,
   APPLACETYPEID NUMBER(10, 0) NULL,
   H_OBJ NUMBER(6, 2) NULL,
   SUPPLY_CATEGORY NUMBER(10, 0) NULL,
   ISARENDADOC NUMBER(10, 0) NULL,
   TU_RECEIVED NUMBER(10, 0) NULL,
   COMMENTS VARCHAR2(4000) NULL,
   GEOSYSTEM NUMBER(10, 0) NULL,
   OPORAOWNER NUMBER(10, 0) NULL,
   OPORATYPEID NUMBER(10, 0) NULL,
   OPORPLACEID NUMBER(10, 0) NULL,
   OPORAHEIGHT NUMBER(6, 2) NULL,
   FINCATEGID NUMBER(10, 0) NULL,
   APPLACEID NUMBER(10, 0) NULL,
   MAINCONTRACTOR NUMBER(10, 0) NULL,
   COMPLETEIDTS NUMBER(10, 0) NULL,
   ISLIGHTFIRE NUMBER(10, 0) NULL,
   ISSUPPLYRESERVE NUMBER(10, 0) NULL,
   USO_RESOURSE NUMBER(10, 0) NULL,
   AVR_BOARD NUMBER(10, 0) NULL,
   LFIBP_RESOURCE NUMBER(10, 0) NULL,
   IBP_RESOURCE NUMBER(10, 0) NULL,
   CON_IMPEDANCE NUMBER(10, 0) NULL,
   TU_PLACEMENT NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROJECTS_CHANGELOG
  ADD CONSTRAINT PK_PROJECTS_CHANGE UNIQUE (IDMAINREC);
 
ALTER TABLE INFORMIX.PROJECTS_CHANGELOG
  ADD CONSTRAINT SYS_C003705 CHECK ("IDMAINREC" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTS_CHANGELOG
  ADD CONSTRAINT SYS_C003706 CHECK ("CHANGEDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTS_CHANGELOG
  ADD CONSTRAINT SYS_C003707 CHECK ("PROJECTID" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTSTATES
  (PROJECTSTATE NUMBER(10, 0) NULL,
   PROJECT NUMBER(10, 0) NULL,
   STATE CHAR(4) NULL,
   MAN NUMBER(10, 0) NULL,
   WHEN_ DATE NULL);

ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT PK_PROJECTSTATES UNIQUE (PROJECTSTATE);
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT CKC_STATE_PROJE CHECK (state IN ('I' ,'A' ,'D' ,'F' ));
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT SYS_C004277 CHECK ("PROJECTSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT SYS_C004278 CHECK ("PROJECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT SYS_C004279 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT SYS_C004280 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTSTATES
  ADD CONSTRAINT SYS_C004281 CHECK ("WHEN_" IS NOT NULL);

CREATE TABLE INFORMIX.PROJECTTYPES
  (PROJECTTYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.PROJECTTYPES
  ADD CONSTRAINT PK_PROJECTTYPES UNIQUE (PROJECTTYPE);
 
ALTER TABLE INFORMIX.PROJECTTYPES
  ADD CONSTRAINT SYS_C004139 CHECK ("PROJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROJECTTYPES
  ADD CONSTRAINT SYS_C004140 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.PROLETPARAMS
  (PARAMID NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   HOPBEENETID CHAR(32) NULL,
   POSA_BEENETID CHAR(32) NULL,
   POSA_NAME CHAR(320) NULL,
   POSA_LAT NUMBER(10, 6) NULL,
   POSA_LONG NUMBER(10, 6) NULL,
   POSA_HSET NUMBER(6, 2) NULL,
   POSB_BEENETID CHAR(32) NULL,
   POSB_NAME CHAR(320) NULL,
   POSB_LAT NUMBER(10, 6) NULL,
   POSB_LONG NUMBER(10, 6) NULL,
   POSB_HSET NUMBER(6, 2) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   RESTYPE CHAR(80) NULL,
   RESMODEL CHAR(80) NULL,
   RESERVTYPE CHAR(80) NULL,
   ANTDIAM NUMBER(4, 2) NULL,
   FREQUENCY NUMBER(6, 2) NULL,
   SPEED CHAR(80) NULL,
   GAIN_FACTOR NUMBER(6, 2) NULL,
   POWER NUMBER(6, 2) NULL,
   ERR_10E_3 NUMBER(6, 2) NULL,
   ERR_10E_6 NUMBER(6, 2) NULL,
   READYSTATE NUMBER(10, 0) NULL,
   CALCDATE DATE NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT PK_PROLETPARAMS UNIQUE (PARAMID);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT CKC_READYSTA_PROLE CHECK (readystate IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005123 CHECK ("READYSTATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005110 CHECK ("PARAMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005111 CHECK ("HOPSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005112 CHECK ("HOPBEENETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005113 CHECK ("POSA_BEENETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005114 CHECK ("POSA_NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005115 CHECK ("POSA_LAT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005116 CHECK ("POSA_LONG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005117 CHECK ("POSA_HSET" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005118 CHECK ("POSB_BEENETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005119 CHECK ("POSB_NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005120 CHECK ("POSB_LAT" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005121 CHECK ("POSB_LONG" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROLETPARAMS
  ADD CONSTRAINT SYS_C005122 CHECK ("POSB_HSET" IS NOT NULL);

CREATE TABLE INFORMIX.PROTOACTIONS
  (PROJECTACTION NUMBER(10, 0) NULL,
   STEPBEFORE NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL,
   PROJECTTYPE NUMBER(10, 0) NULL,
   PROJECTACTIONTYPE NUMBER(10, 0) NULL,
   DURATION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT PK_PROTOACTIONS UNIQUE (PROJECTACTION);
 
ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT SYS_C004272 CHECK ("PROJECTACTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT SYS_C004273 CHECK ("ORDER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT SYS_C004274 CHECK ("PROJECTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT SYS_C004275 CHECK ("PROJECTACTIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.PROTOACTIONS
  ADD CONSTRAINT SYS_C004276 CHECK ("DURATION" IS NOT NULL);

CREATE TABLE INFORMIX.RATES
  (CURRENCY NUMBER(10, 0) NULL,
   RATETYPE NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   VALUE NUMBER(17, 4) NULL);

ALTER TABLE INFORMIX.RATES
  ADD CONSTRAINT PK_RATES UNIQUE (CURRENCY, RATETYPE, DATE_);
 
ALTER TABLE INFORMIX.RATES
  ADD CONSTRAINT SYS_C004192 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.RATES
  ADD CONSTRAINT SYS_C004193 CHECK ("RATETYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RATES
  ADD CONSTRAINT SYS_C004194 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RATES
  ADD CONSTRAINT SYS_C004195 CHECK ("VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.RATETYPES
  (RATETYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   BASECURRENCY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RATETYPES
  ADD CONSTRAINT PK_RATETYPES UNIQUE (RATETYPE);
 
ALTER TABLE INFORMIX.RATETYPES
  ADD CONSTRAINT SYS_C004388 CHECK ("RATETYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RATETYPES
  ADD CONSTRAINT SYS_C004389 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_ACTUALPERMITS
  (IDBS NUMBER(10, 0) NULL,
   REQUESTIDFULL NUMBER(10, 0) NULL,
   DECISIONIDFULL NUMBER(10, 0) NULL,
   LICENSEIDFULL NUMBER(10, 0) NULL,
   REQUESTIDLAST NUMBER(10, 0) NULL,
   DECISIONIDLAST NUMBER(10, 0) NULL,
   LICENSEIDLAST NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_ACTUALPERMITS
  ADD CONSTRAINT PK_RCHS_ACTUALPERM UNIQUE (IDBS);
 
ALTER TABLE INFORMIX.RCHS_ACTUALPERMITS
  ADD CONSTRAINT SYS_C003586 CHECK ("IDBS" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_BASESTATIONS
  (IDBS NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_BASESTATIONS
  ADD CONSTRAINT PK_RCHS_BASESTATIO UNIQUE (IDBS);
 
ALTER TABLE INFORMIX.RCHS_BASESTATIONS
  ADD CONSTRAINT SYS_C003575 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_BASESTATIONS
  ADD CONSTRAINT SYS_C003576 CHECK ("NUMBER_" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_BSHISTORY
  (IDBSRCHS NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LATITUDE NUMBER(8, 4) NULL,
   LONGITUDE NUMBER(8, 4) NULL,
   IDBS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_BSHISTORY
  ADD CONSTRAINT PK_RCHS_BSHISTORY UNIQUE (IDBSRCHS);
 
ALTER TABLE INFORMIX.RCHS_BSHISTORY
  ADD CONSTRAINT SYS_C003577 CHECK ("IDBSRCHS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_BSHISTORY
  ADD CONSTRAINT SYS_C003578 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_BSHISTORY
  ADD CONSTRAINT SYS_C003579 CHECK ("IDBS" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_BS2NRIBS
  (IDBS NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   NRICOUNT NUMBER(10, 0) NULL,
   NUMBER5 NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_BS2NRIBS
  ADD CONSTRAINT PK_RCHS_BS2NRIBS UNIQUE (IDBS);
 
ALTER TABLE INFORMIX.RCHS_BS2NRIBS
  ADD CONSTRAINT SYS_C003587 CHECK ("IDBS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_BS2NRIBS
  ADD CONSTRAINT SYS_C003588 CHECK ("NRICOUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_BS2NRIBS
  ADD CONSTRAINT SYS_C003589 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_DECISIONS
  (DECISIONID NUMBER(10, 0) NULL,
   REQUESTID NUMBER(10, 0) NULL,
   RCHSDOCID NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   OUTNUMBER_ROSSV CHAR(120) NULL,
   INNUMBER_ROSSV CHAR(120) NULL,
   OUTDATE_ROSSV DATE NULL,
   INDATE_ROSSV DATE NULL,
   PROGNOZLICDATE DATE NULL,
   DECISTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.RCHS_DECISIONS
  ADD CONSTRAINT PK_RCHS_DECISIONS UNIQUE (DECISIONID);
 
ALTER TABLE INFORMIX.RCHS_DECISIONS
  ADD CONSTRAINT CKC_DECISTYP_RCHS_ CHECK ((decistype IS NULL ) OR (decistype IN ('R' ,'T' )) );
 
ALTER TABLE INFORMIX.RCHS_DECISIONS
  ADD CONSTRAINT SYS_C006005 CHECK ("DECISIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_DECISIONS
  ADD CONSTRAINT SYS_C006006 CHECK ("REQUESTID" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_DECISION2BS
  (DECISIONID NUMBER(10, 0) NULL,
   IDBSRCHS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_DECISION2BS
  ADD CONSTRAINT PK_RCHS_DECISION2B UNIQUE (DECISIONID, IDBSRCHS);
 
ALTER TABLE INFORMIX.RCHS_DECISION2BS
  ADD CONSTRAINT SYS_C003582 CHECK ("DECISIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_DECISION2BS
  ADD CONSTRAINT SYS_C003583 CHECK ("IDBSRCHS" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_LICENSES
  (LICENSEID NUMBER(10, 0) NULL,
   DECISIONID NUMBER(10, 0) NULL,
   RCHSDOCID NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   REALIZEDATE DATE NULL,
   EXPIREDATE DATE NULL,
   LICTYPE CHAR(4) NULL);

ALTER TABLE INFORMIX.RCHS_LICENSES
  ADD CONSTRAINT PK_RCHS_LICENSES UNIQUE (LICENSEID);
 
ALTER TABLE INFORMIX.RCHS_LICENSES
  ADD CONSTRAINT CKC_LICTYPE_RCHS_ CHECK ((lictype IS NULL ) OR (lictype IN ('R' ,'T' )) );
 
ALTER TABLE INFORMIX.RCHS_LICENSES
  ADD CONSTRAINT SYS_C006007 CHECK ("LICENSEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_LICENSES
  ADD CONSTRAINT SYS_C006008 CHECK ("DECISIONID" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_LICENSE2BS
  (LICENSEID NUMBER(10, 0) NULL,
   IDBSRCHS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_LICENSE2BS
  ADD CONSTRAINT PK_RCHS_LICENSE2BS UNIQUE (LICENSEID, IDBSRCHS);
 
ALTER TABLE INFORMIX.RCHS_LICENSE2BS
  ADD CONSTRAINT SYS_C003584 CHECK ("LICENSEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_LICENSE2BS
  ADD CONSTRAINT SYS_C003585 CHECK ("IDBSRCHS" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_REQUESTS
  (REQUESTID NUMBER(10, 0) NULL,
   RCHSDOCID NUMBER(10, 0) NULL,
   OUTNUMBER_GRCH CHAR(120) NULL,
   OUTDATE_GRCH DATE NULL,
   INNUMBER_GRCH CHAR(120) NULL,
   INDATE_GRCH DATE NULL,
   REGIONID NUMBER(10, 0) NULL,
   DEFINITION VARCHAR2(1020) NULL,
   EQUIPCOUNT NUMBER(10, 0) NULL,
   COMPANYNAME VARCHAR2(1020) NULL,
   RCHSREGIONNAME VARCHAR2(1020) NULL,
   PROJECTDATE DATE NULL,
   PROGNOZDECISDATE DATE NULL,
   DIAP NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_REQUESTS
  ADD CONSTRAINT PK_RCHS_REQUESTS UNIQUE (REQUESTID);
 
ALTER TABLE INFORMIX.RCHS_REQUESTS
  ADD CONSTRAINT SYS_C003427 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_REQUESTS
  ADD CONSTRAINT SYS_C003428 CHECK ("RCHSDOCID" IS NOT NULL);

CREATE TABLE INFORMIX.RCHS_REQUEST2BS
  (REQUESTID NUMBER(10, 0) NULL,
   IDBSRCHS NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RCHS_REQUEST2BS
  ADD CONSTRAINT PK_RCHS_REQUEST2BS UNIQUE (REQUESTID, IDBSRCHS);
 
ALTER TABLE INFORMIX.RCHS_REQUEST2BS
  ADD CONSTRAINT SYS_C003580 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RCHS_REQUEST2BS
  ADD CONSTRAINT SYS_C003581 CHECK ("IDBSRCHS" IS NOT NULL);

CREATE TABLE INFORMIX.RECALCCHARGEDNOP
  (DOCPOSITION NUMBER(10, 0) NULL,
   SUMCONTRACT NUMBER(15, 2) NULL,
   NDSCONTRACT NUMBER(15, 2) NULL,
   RATECONTRACT NUMBER(15, 4) NULL,
   SUMRUB NUMBER(15, 2) NULL,
   NDSRUB NUMBER(15, 2) NULL,
   RATEMAINCURR NUMBER(15, 4) NULL,
   SUMMAINCURR NUMBER(15, 2) NULL,
   NDSMAINCURR NUMBER(15, 2) NULL,
   RATEDOPCURR NUMBER(15, 4) NULL,
   SUMDOPCURR NUMBER(15, 2) NULL,
   NDSDOPCURR NUMBER(15, 2) NULL);
 
ALTER TABLE INFORMIX.RECALCCHARGEDNOP
  ADD CONSTRAINT SYS_C008600 CHECK ("DOCPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.REGIONS
  (REGIONID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   REGNAME CHAR(320) NULL,
   SECTORPREFIX NUMBER(4, 0) NULL,
   HASMAP CHAR(4) NULL,
   FULLARENDAINFO CHAR(4) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   NEEDAPPROVE CHAR(4) NULL,
   ORGBEELINEBILLING NUMBER(10, 0) NULL,
   RATEDELTABILLING NUMBER(15, 2) NULL,
   NATIONALCURR NUMBER(10, 0) NULL,
   HASARENDAPURCHASER CHAR(4) NULL,
   DEFAULTMANUF NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT PK_REGIONS UNIQUE (REGIONID);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT CKC_HASMAP_REGIO CHECK (hasmap IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT CKC_FULLAREN_REGIO CHECK (fullarendainfo IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT CKC_NEEDAPPR_REGIO CHECK (needapprove IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT CKC_HASARENDPURCH_REGIO CHECK ((hasarendapurchaser IS NULL ) OR (hasarendapurchaser IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004410 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004411 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004412 CHECK ("REGNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004413 CHECK ("SECTORPREFIX" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004414 CHECK ("HASMAP" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004415 CHECK ("FULLARENDAINFO" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONS
  ADD CONSTRAINT SYS_C004416 CHECK ("NEEDAPPROVE" IS NOT NULL);

CREATE TABLE INFORMIX.REGIONSACCESS
  (ACCESSID NUMBER(10, 0) NULL,
   OPERATORID NUMBER(10, 0) NULL,
   ACCESSTYPE CHAR(4) NULL,
   SUPREGIONID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   VIEWPLAN CHAR(4) NULL,
   VIEWFACT CHAR(4) NULL,
   EDITPLAN CHAR(4) NULL,
   EDITFACT CHAR(4) NULL,
   VIEWARENDA CHAR(4) NULL,
   EDITARENDA CHAR(4) NULL);

ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT PK_REGIONSACCESS UNIQUE (ACCESSID);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_ACCESSTY_REGIO CHECK (accesstype IN ('S' ,'R' ));
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_VIEWPLAN_REGIO CHECK (viewplan IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_VIEWFACT_REGIO CHECK (viewfact IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_EDITPLAN_REGIO CHECK (editplan IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_EDITFACT_REGIO CHECK (editfact IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_VIEWAREN_REGIO CHECK ((viewarenda IS NULL ) OR (viewarenda IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT CKC_EDITAREN_REGIO CHECK ((editarenda IS NULL ) OR (editarenda IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004581 CHECK ("ACCESSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004582 CHECK ("OPERATORID" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004583 CHECK ("ACCESSTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004584 CHECK ("VIEWPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004585 CHECK ("VIEWFACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004586 CHECK ("EDITPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGIONSACCESS
  ADD CONSTRAINT SYS_C004587 CHECK ("EDITFACT" IS NOT NULL);

CREATE TABLE INFORMIX.REGLAMENTWORKS
  (IDWORK NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL,
   DATEWORK DATE NULL,
   TYPEWORK NUMBER(10, 0) NULL,
   NOTEWORK VARCHAR2(1020) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL);

ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT PK_REGLAMENTWORKS UNIQUE (IDWORK);
 
ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT SYS_C005180 CHECK ("IDWORK" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT SYS_C005181 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT SYS_C005182 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT SYS_C005183 CHECK ("DATEWORK" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGLAMENTWORKS
  ADD CONSTRAINT SYS_C005184 CHECK ("TYPEWORK" IS NOT NULL);

CREATE TABLE INFORMIX.REGLAMENTWORKTYPES
  (IDTYPE NUMBER(10, 0) NULL,
   NAMETYPE VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.REGLAMENTWORKTYPES
  ADD CONSTRAINT PK_REGLAMENTWORKTY UNIQUE (IDTYPE);
 
ALTER TABLE INFORMIX.REGLAMENTWORKTYPES
  ADD CONSTRAINT SYS_C005178 CHECK ("IDTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.REGLAMENTWORKTYPES
  ADD CONSTRAINT SYS_C005179 CHECK ("NAMETYPE" IS NOT NULL);

CREATE TABLE INFORMIX.REPDONORUNITRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   POWER NUMBER(6, 2) NULL,
   WORKBAND NUMBER(10, 0) NULL,
   LINKBAND NUMBER(10, 0) NULL,
   GAINFACTOR NUMBER(6, 2) NULL,
   VOLTAGEID NUMBER(10, 0) NULL,
   USEDPOWER NUMBER(6, 2) NULL,
   ENTRIESCOUNT NUMBER(10, 0) NULL,
   ANTGATESCOUNT NUMBER(10, 0) NULL,
   SIGNALDELAY NUMBER(6, 2) NULL,
   NOISEFACTOR NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.REPDONORUNITRES
  ADD CONSTRAINT PK_REPDONORUNITRES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.REPDONORUNITRES
  ADD CONSTRAINT SYS_C003412 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.REPFROMGAL
  (CI NUMBER(10, 0) NULL,
   REPEATER NUMBER(5, 0) NULL,
   LAC NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   DATE_ID DATE NULL,
   STATUS VARCHAR2(64) NULL,
   FORM VARCHAR2(64) NULL,
   LATITUDE FLOAT(126) NULL,
   LONGITUDE FLOAT(126) NULL,
   NAME VARCHAR2(160) NULL,
   ADDRESS VARCHAR2(400) NULL,
   BSC NUMBER(10, 0) NULL,
   NAME_BSC VARCHAR2(160) NULL,
   FREQUENCY FLOAT(63) NULL,
   TRX NUMBER(5, 0) NULL,
   CONFIG VARCHAR2(40) NULL,
   TRX_LOCATION VARCHAR2(64) NULL,
   AZIMUTH FLOAT(63) NULL,
   HEIGHT NUMBER(5, 0) NULL,
   TILT FLOAT(63) NULL,
   DIAGRAM VARCHAR2(480) NULL,
   GAIN FLOAT(63) NULL,
   ANT_NUMBER NUMBER(5, 0) NULL,
   ANT_LOCATION VARCHAR2(64) NULL,
   TRPOWER FLOAT(63) NULL,
   CABLETYPE VARCHAR2(200) NULL,
   RXA_M FLOAT(63) NULL,
   TX_M FLOAT(63) NULL,
   RXB_M FLOAT(63) NULL,
   MHA VARCHAR2(128) NULL,
   DB_COMB NUMBER(5, 0) NULL,
   FL VARCHAR2(64) NULL,
   BOOSTER VARCHAR2(64) NULL,
   POS NUMBER(5, 0) NULL,
   POS_SEARCH NUMBER(10, 0) NULL,
   GEO_ZONE VARCHAR2(400) NULL,
   COMMENT_ VARCHAR2(400) NULL,
   LNA_GAIN FLOAT(63) NULL,
   CELL_TYPE VARCHAR2(200) NULL,
   LINKS VARCHAR2(1020) NULL,
   RACK NUMBER(10, 0) NULL,
   CELLNAME VARCHAR2(32) NULL,
   DATE_ON DATE NULL,
   ENVIRONMENT VARCHAR2(80) NULL,
   BASIS VARCHAR2(80) NULL,
   TRX_DR NUMBER(5, 0) NULL,
   ID_FILES VARCHAR2(1020) NULL,
   ID_AUTOR VARCHAR2(80) NULL,
   CHECKSUM NUMBER(10, 0) NULL,
   CHECKSUMDATE DATE NULL);

CREATE TABLE INFORMIX.REPITERRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   REPPOWER NUMBER(6, 2) NULL,
   ISLINEAR CHAR(4) NULL,
   BANDWIDTH NUMBER(6, 2) NULL,
   NUMCHANALS NUMBER(10, 0) NULL,
   DIMENSIONS CHAR(80) NULL,
   WEIGHT NUMBER(6, 1) NULL,
   USEDPOWER NUMBER(6, 2) NULL,
   GAINFACTOR NUMBER(10, 0) NULL,
   SIGNALDELAY NUMBER(6, 2) NULL,
   NOISEFACTOR NUMBER(6, 2) NULL,
   WORKBAND NUMBER(10, 0) NULL,
   LINKBAND NUMBER(10, 0) NULL,
   VOLTAGEID NUMBER(10, 0) NULL,
   REPITERTYPE NUMBER(10, 0) NULL,
   ENDBANDWIDTH NUMBER(6, 2) NULL,
   ANTENTRIESCOUNT NUMBER(10, 0) NULL,
   ISREMOTECONTROL CHAR(4) NULL,
   DOWNLINKBAND NUMBER(10, 0) NULL,
   DOWNLINKBANDUP NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT PK_REPITERRES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT CKC_ISLINEAR_REPIT CHECK (islinear IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT CKC_ISREMOTE_REPIT CHECK ((isremotecontrol IS NULL ) OR (isremotecontrol IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT CKC_REPITERT_REPIT CHECK ((repitertype IS NULL ) OR (repitertype IN (1 ,2 ,3 ,4 )) );
 
ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT SYS_C004670 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPITERRES
  ADD CONSTRAINT SYS_C004671 CHECK ("ISLINEAR" IS NOT NULL);

CREATE TABLE INFORMIX.REPITERS
  (EQUIPMENT NUMBER(10, 0) NULL,
   DONOR_SECT NUMBER(10, 0) NULL,
   DONOR_ANT NUMBER(10, 0) NULL,
   DONOR_TYPE CHAR(4) NULL,
   REPITER_CLASS CHAR(4) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   REPPOWER NUMBER(6, 2) NULL,
   BANDWIDTH NUMBER(6, 2) NULL,
   NUMCHANALS NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   DATE_ASSEMB_AFS DATE NULL,
   DATE_CONNECT DATE NULL,
   DATE_ONAIR DATE NULL,
   REPTYPE NUMBER(10, 0) NULL,
   BAND CHAR(4) NULL,
   H_OBJ_ANT NUMBER(6, 2) NULL,
   ANTPLACEID NUMBER(10, 0) NULL,
   REPDONORUNTRES NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT PK_REPITERS UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT CKC_DONOR_TY_REPIT CHECK ((donor_type IS NULL ) OR (donor_type IN ('A' ,'B' ,'C' )) );
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT CKC_REPITER__REPIT CHECK ((repiter_class IS NULL ) OR (repiter_class IN ('A' ,'B' ,'C' ,'D' ,'E' )) );
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT CKC_REPTYPE_REPIT CHECK ((reptype IS NULL ) OR (reptype IN (1 ,2 ,3 ,4 )) );
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT CKC_BAND_REPIT CHECK ((band IS NULL ) OR (band IN ('G' ,'D' ,'E' ,'U' )) );
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT SYS_C004458 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT SYS_C004459 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPITERS
  ADD CONSTRAINT SYS_C004460 CHECK ("NUMBER_" IS NOT NULL);

CREATE TABLE INFORMIX.REPITER2REPDONORUNIT
  (IDRECREPITER2REPDONORUNIT NUMBER(10, 0) NULL,
   IDRESREPITER NUMBER(10, 0) NULL,
   IDRESREPDONORUNIT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REPITER2REPDONORUNIT
  ADD CONSTRAINT PK_REPITER2REPDONO UNIQUE (IDRECREPITER2REPDONORUNIT);
 
ALTER TABLE INFORMIX.REPITER2REPDONORUNIT
  ADD CONSTRAINT SYS_C006020 CHECK ("IDRECREPITER2REPDONORUNIT" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPITER2REPDONORUNIT
  ADD CONSTRAINT SYS_C006021 CHECK ("IDRESREPITER" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPITER2REPDONORUNIT
  ADD CONSTRAINT SYS_C006022 CHECK ("IDRESREPDONORUNIT" IS NOT NULL);

CREATE TABLE INFORMIX.REPORTFILIALS
  (IDFILIAL NUMBER(10, 0) NULL,
   NAMEFILIAL VARCHAR2(320) NULL,
   IDREGION NUMBER(10, 0) NULL,
   IDSORT NUMBER(10, 0) NULL,
   CODENAME CHAR(160) NULL);

ALTER TABLE INFORMIX.REPORTFILIALS
  ADD CONSTRAINT PK_REPORTFILIALS UNIQUE (IDFILIAL);
 
ALTER TABLE INFORMIX.REPORTFILIALS
  ADD CONSTRAINT SYS_C005935 CHECK ("IDFILIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTFILIALS
  ADD CONSTRAINT SYS_C005936 CHECK ("NAMEFILIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTFILIALS
  ADD CONSTRAINT SYS_C005937 CHECK ("IDREGION" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTFILIALS
  ADD CONSTRAINT SYS_C005938 CHECK ("IDSORT" IS NOT NULL);

CREATE TABLE INFORMIX.REPORTNETZONES
  (IDFILIAL NUMBER(10, 0) NULL,
   IDCLASS NUMBER(10, 0) NULL,
   IDNETZONE NUMBER(10, 0) NULL,
   IDSORT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REPORTNETZONES
  ADD CONSTRAINT PK_REPORTNETZONES UNIQUE (IDCLASS, IDNETZONE);
 
ALTER TABLE INFORMIX.REPORTNETZONES
  ADD CONSTRAINT SYS_C005939 CHECK ("IDFILIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTNETZONES
  ADD CONSTRAINT SYS_C005940 CHECK ("IDCLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTNETZONES
  ADD CONSTRAINT SYS_C005941 CHECK ("IDNETZONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTNETZONES
  ADD CONSTRAINT SYS_C005942 CHECK ("IDSORT" IS NOT NULL);

CREATE TABLE INFORMIX.REPORTREGIONCLASS
  (IDCLASS NUMBER(10, 0) NULL,
   NAMECLASS VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.REPORTREGIONCLASS
  ADD CONSTRAINT PK_REPORTREGIONCLA UNIQUE (IDCLASS);
 
ALTER TABLE INFORMIX.REPORTREGIONCLASS
  ADD CONSTRAINT SYS_C005929 CHECK ("IDCLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTREGIONCLASS
  ADD CONSTRAINT SYS_C005930 CHECK ("NAMECLASS" IS NOT NULL);

CREATE TABLE INFORMIX.REPORTREGIONS
  (IDREGION NUMBER(10, 0) NULL,
   NAMEREGION VARCHAR2(320) NULL,
   IDCLASS NUMBER(10, 0) NULL,
   IDSORT NUMBER(10, 0) NULL,
   CODENAME CHAR(160) NULL);

ALTER TABLE INFORMIX.REPORTREGIONS
  ADD CONSTRAINT PK_REPORTREGIONS UNIQUE (IDREGION);
 
ALTER TABLE INFORMIX.REPORTREGIONS
  ADD CONSTRAINT SYS_C005931 CHECK ("IDREGION" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTREGIONS
  ADD CONSTRAINT SYS_C005932 CHECK ("NAMEREGION" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTREGIONS
  ADD CONSTRAINT SYS_C005933 CHECK ("IDCLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.REPORTREGIONS
  ADD CONSTRAINT SYS_C005934 CHECK ("IDSORT" IS NOT NULL);

CREATE TABLE INFORMIX.REPROLLOUT
  (IDREGION NUMBER(10, 0) NULL,
   NAMEREGION VARCHAR2(400) NULL,
   SORTREG NUMBER(10, 0) NULL,
   IDFILIAL NUMBER(10, 0) NULL,
   NAMEFILIAL VARCHAR2(400) NULL,
   SORTFIL NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   NAMEZONE VARCHAR2(400) NULL,
   LASTWEEK_900 NUMBER(10, 0) NULL,
   LASTWEEK_1800 NUMBER(10, 0) NULL,
   LASTWEEK_TOT NUMBER(10, 0) NULL,
   ONAIR_900 NUMBER(10, 0) NULL,
   ONAIR_1800 NUMBER(10, 0) NULL,
   ONAIR_TOT NUMBER(10, 0) NULL,
   WORK_900 NUMBER(10, 0) NULL,
   WORK_1800 NUMBER(10, 0) NULL,
   WORK_TOT NUMBER(10, 0) NULL,
   AMOUNTPOS NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.REPTRX
  (ID NUMBER(10, 0) NULL,
   SUPREGIONID NUMBER(10, 0) NULL,
   SUPREGNAME CHAR(320) NULL,
   FILIALID NUMBER(10, 0) NULL,
   FILIALNAME CHAR(320) NULL,
   POSID NUMBER(10, 0) NULL,
   POSNAME CHAR(320) NULL,
   ADDRESS CHAR(1020) NULL,
   POSSTATE CHAR(4) NULL,
   POSSTATENAME CHAR(80) NULL,
   BSID NUMBER(10, 0) NULL,
   BSNUMBER NUMBER(10, 0) NULL,
   BSTYPE CHAR(4) NULL,
   BSTYPENAME CHAR(80) NULL,
   BSSTATE CHAR(4) NULL,
   BSSTATENAME CHAR(80) NULL,
   NUMBTS NUMBER(10, 0) NULL,
   NUMTRX NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.REPTRX
  ADD CONSTRAINT U672_2765 UNIQUE (ID);
 
ALTER TABLE INFORMIX.REPTRX
  ADD CONSTRAINT SYS_C005596 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.REQUESTS
  (DOCUMENT NUMBER(10, 0) NULL,
   DIVISIONREQUESTER NUMBER(10, 0) NULL,
   CHECKER NUMBER(10, 0) NULL,
   SENDER NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   NAVTO CHAR(160) NULL,
   REQUESTSTATE CHAR(4) NULL);

ALTER TABLE INFORMIX.REQUESTS
  ADD CONSTRAINT PK_REQUESTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.REQUESTS
  ADD CONSTRAINT CKC_REQUESTS_REQUE CHECK ((requeststate IS NULL ) OR (requeststate IN ('I' ,'D' ,'O' )) );
 
ALTER TABLE INFORMIX.REQUESTS
  ADD CONSTRAINT SYS_C004212 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.REQUESTS
  ADD CONSTRAINT SYS_C004213 CHECK ("DIVISIONREQUESTER" IS NOT NULL);

CREATE TABLE INFORMIX.REQUESTTYPES
  (REQUESTTYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.REQUESTTYPES
  ADD CONSTRAINT PK_REQUESTTYPES UNIQUE (REQUESTTYPE);
 
ALTER TABLE INFORMIX.REQUESTTYPES
  ADD CONSTRAINT SYS_C003616 CHECK ("REQUESTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.REQUESTTYPES
  ADD CONSTRAINT SYS_C003617 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL,
   BSCTYPE CHAR(4) NULL,
   RACK_COUNT NUMBER(10, 0) NULL,
   BTS_COUNT NUMBER(10, 0) NULL,
   TRX_FR NUMBER(10, 0) NULL,
   TRX_HR NUMBER(10, 0) NULL,
   E1_COUNT NUMBER(10, 0) NULL,
   POWER_SUPPLY_CATEGORY NUMBER(10, 0) NULL,
   ENERGY_CONSUMPTION_NOMINAL_MOD NUMBER(4, 1) NULL,
   ENERGY_CONSUMPTION_NOMINAL_ACC NUMBER(4, 1) NULL,
   HAVEDDF CHAR(4) NULL,
   LOCATION_AREA NUMBER(6, 1) NULL,
   LENGTH NUMBER(6, 0) NULL,
   HEIGHT NUMBER(6, 0) NULL,
   WIDTH NUMBER(6, 0) NULL,
   WEIGHT NUMBER(4, 1) NULL,
   POWER NUMBER(4, 1) NULL,
   RECYCLING_TERM_EMISSION CHAR(4) NULL,
   RECYCLING_TERM_EMISSION_MIN NUMBER(3, 0) NULL,
   RECYCLING_TERM_EMISSION_MAX NUMBER(3, 0) NULL,
   AIR_TEMPERATURE_MIN NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_MAX NUMBER(2, 0) NULL,
   AIR_HUMIDITY_MIN NUMBER(2, 0) NULL,
   AIR_HUMIDITY_MAX NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_WITHOUT_ENERGY NUMBER(2, 0) NULL,
   AIR_TEMPERATURE_WITHOUT_ENER_1 NUMBER(2, 0) NULL);

ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT PK_RES_BSC_CONFIGU UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT CKC_BSCTYPE_RES_B CHECK (bsctype IN ('A' ,'B' ,'C' ));
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT CKC_HAVEDDF_RES_B CHECK ((haveddf IS NULL ) OR (haveddf IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT CKC_RECYCLIN_RES_B CHECK (recycling_term_emission IN ('A' ,'S' ));
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003832 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003833 CHECK ("BSCTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003834 CHECK ("RACK_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003835 CHECK ("BTS_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003836 CHECK ("TRX_FR" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003837 CHECK ("TRX_HR" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003838 CHECK ("E1_COUNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003839 CHECK ("RECYCLING_TERM_EMISSION" IS NOT NULL);

CREATE TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ALCATEL
  (CONFIGID NUMBER(10, 0) NULL,
   NSUBCATCA NUMBER(10, 0) NULL,
   CONNECTION_TYPE CHAR(4) NULL,
   A_INTERFACES NUMBER(10, 0) NULL,
   CELL_MAX NUMBER(10, 0) NULL,
   ABIS_TSU_COUNT NUMBER(10, 0) NULL,
   ATER_TSU_COUNT NUMBER(10, 0) NULL,
   E1_VOICE_STREAM_COUNT NUMBER(10, 0) NULL,
   E1_ABIS_STREAM_COUNT NUMBER(10, 0) NULL,
   E1_DATA_STREAM_COUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT PK_RES_BSC_CONF_ALCA UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT CKC_CONNECTI_RES_B CHECK ((connection_type IS NULL ) OR (connection_type IN ('V' ,'C' )) );
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT SYS_C003686 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ALCATEL
  ADD CONSTRAINT SYS_C003687 CHECK ("NSUBCATCA" IS NOT NULL);

CREATE TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ERICSSO
  (CONFIGID NUMBER(10, 0) NULL,
   CONTROLLER_TYPE CHAR(500) NULL,
   PROC_TYPE CHAR(128) NULL,
   GS_TYPE CHAR(128) NULL,
   NET_FLOOR_SPACE NUMBER(15, 4) NULL,
   CELL_MAX NUMBER(10, 0) NULL,
   TRX_FR_USE NUMBER(10, 0) NULL,
   RPG_TRX_PLAT_COUNT NUMBER(10, 0) NULL,
   RPG_C7_LINKS NUMBER(10, 0) NULL,
   RPG_C7_LINKS_PLAT_COUNT NUMBER(10, 0) NULL,
   HSL_C7_LINKS NUMBER(10, 0) NULL,
   HSL_C7_LINKS_PLAT_COUNT NUMBER(10, 0) NULL,
   ETC_PLAT_COUNT NUMBER(10, 0) NULL,
   ET155_PLAT_COUNT NUMBER(10, 0) NULL,
   VOICE_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   VOICE_TRAFFIC_CAPACITY_CHANNEL NUMBER(10, 0) NULL,
   TRA_MAG_COUNT NUMBER(10, 0) NULL,
   TRA_PLAT_COUNT NUMBER(10, 0) NULL,
   DATA_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   PCU_SUB NUMBER(10, 0) NULL,
   RPP_PLAT_COUNT NUMBER(10, 0) NULL,
   ET155_POWER NUMBER(15, 4) NULL,
   ETC5_POWER NUMBER(15, 4) NULL);

ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ERICSSO
  ADD CONSTRAINT PK_RES_BSC_CONF_ERIC UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_ERICSSO
  ADD CONSTRAINT SYS_C003850 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.RES_BSC_CONFIGURATIONS_NOKIA
  (CONFIGID NUMBER(10, 0) NULL,
   MAZAG_COUNT NUMBER(10, 0) NULL,
   BCSU_SUBR_COUNT NUMBER(10, 0) NULL,
   DATA_TRAFFIC_CAPACITY NUMBER(10, 0) NULL,
   TCSM_CHANNEL_COUNT NUMBER(10, 0) NULL,
   LAPD_LINKS_COUNT NUMBER(10, 0) NULL,
   SS7_LINKS_COUNT NUMBER(10, 0) NULL,
   PHYSICAL_PCU_COUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT PK_RES_BSC_CONF_NOKIA UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT SYS_C003688 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_BSC_CONFIGURATIONS_NOKIA
  ADD CONSTRAINT SYS_C003689 CHECK ("MAZAG_COUNT" IS NOT NULL);

CREATE TABLE INFORMIX.RES_CONTROLLER_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL,
   USER_CONFIGURATION_NAME VARCHAR2(1020) NULL,
   RESOURCE_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RES_CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT PK_RES_CONTROLLER_CONF UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003829 CHECK ("CONFIGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003830 CHECK ("USER_CONFIGURATION_NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_CONTROLLER_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003831 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.RES_CONTROLLERS
  (RESOURCE_ NUMBER(10, 0) NULL,
   CONFIGURATION_NAME CHAR(500) NULL,
   PLATFORM_NAME CHAR(500) NULL,
   TYPE_ CHAR(4) NULL);

ALTER TABLE INFORMIX.RES_CONTROLLERS
  ADD CONSTRAINT PK_RES_CONTROLLERS UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.RES_CONTROLLERS
  ADD CONSTRAINT CKC_TYPE_RES_C CHECK (TYPE_ IN ('B' ,'C' ,'T' ,'M' ));
 
ALTER TABLE INFORMIX.RES_CONTROLLERS
  ADD CONSTRAINT SYS_C003827 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RES_CONTROLLERS
  ADD CONSTRAINT SYS_C003828 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.RESGROUPS
  (GROUPID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   CLASSID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RESGROUPS
  ADD CONSTRAINT PK_RESGROUPS UNIQUE (GROUPID);
 
ALTER TABLE INFORMIX.RESGROUPS
  ADD CONSTRAINT SYS_C005960 CHECK ("GROUPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESGROUPS
  ADD CONSTRAINT SYS_C005961 CHECK ("CLASSID" IS NOT NULL);

CREATE TABLE INFORMIX.RES_MFS_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RES_MFS_CONFIGURATIONS
  ADD CONSTRAINT PK_RES_CONTROLLERS_MFS_CONF UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_MFS_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003852 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCECLASSES
  (CLASSID NUMBER(10, 0) NULL,
   CLASSNAME CHAR(160) NULL,
   RESOURCECLASS CHAR(4) NULL);

ALTER TABLE INFORMIX.RESOURCECLASSES
  ADD CONSTRAINT PK_RESOURCECLASSES UNIQUE (CLASSID);
 
ALTER TABLE INFORMIX.RESOURCECLASSES
  ADD CONSTRAINT SYS_C005957 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCECLASSES
  ADD CONSTRAINT SYS_C005958 CHECK ("CLASSNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCECLASSES
  ADD CONSTRAINT SYS_C005959 CHECK ("RESOURCECLASS" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCECLASSESHIERARHY
  (CLASSID NUMBER(10, 0) NULL,
   PARENT_CLASSID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RESOURCECLASSESHIERARHY
  ADD CONSTRAINT PK_RESOURCECLSHRH UNIQUE (CLASSID, PARENT_CLASSID);
 
ALTER TABLE INFORMIX.RESOURCECLASSESHIERARHY
  ADD CONSTRAINT SYS_C003683 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCECLASSESHIERARHY
  ADD CONSTRAINT SYS_C003684 CHECK ("PARENT_CLASSID" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCECOMPATIBILITY
  (RESOURCE1 NUMBER(10, 0) NULL,
   RESOURCE2 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RESOURCECOMPATIBILITY
  ADD CONSTRAINT PK_RESOURCECOMPATI UNIQUE (RESOURCE1, RESOURCE2);
 
ALTER TABLE INFORMIX.RESOURCECOMPATIBILITY
  ADD CONSTRAINT SYS_C006066 CHECK ("RESOURCE1" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCECOMPATIBILITY
  ADD CONSTRAINT SYS_C006067 CHECK ("RESOURCE2" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCES
  (RESOURCE_ NUMBER(10, 0) NULL,
   RESOURCESUBTYPE NUMBER(10, 0) NULL,
   UNIT NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   MODEL CHAR(160) NULL,
   NOTES VARCHAR2(400) NULL,
   COMPLECT CHAR(4) NULL,
   COUNTPOLICY CHAR(4) NULL,
   BOXABLE CHAR(4) NULL,
   PRICEABLE CHAR(4) NULL,
   COMPLECTPART CHAR(4) NULL,
   ACTUALCODE NUMBER(10, 0) NULL,
   ACTIVE CHAR(4) NULL,
   MANUFACTURER NUMBER(10, 0) NULL,
   MANUCODE CHAR(160) NULL,
   RESOURCECLASS CHAR(4) NULL,
   RESOURCECLASS2 NUMBER(10, 0) NULL,
   GROUPID NUMBER(10, 0) NULL,
   MANUFID NUMBER(10, 0) NULL,
   DISABLENFSCODES CHAR(4) NULL,
   DEFAULTRESOURCE CHAR(4) NULL);

ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT PK_RESOURCES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_COMPLECT_RESOU CHECK (complect IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_COUNTPOL_RESOU CHECK (countpolicy IN ('S' ,'P' ,'B' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_BOXABLE_RESOU CHECK (boxable IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_PRICEABL_RESOU CHECK (priceable IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_COMPLECT_RESO1 CHECK (complectpart IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_ACTIVE_RESOU CHECK (active IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_DISABLEN_RESOU CHECK (disablenfscodes IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_DEFAULTR_RESOU CHECK (defaultresource IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT CKC_RESOURCE_RESOU CHECK (resourceclass IN ('B' ,'K' ,'A' ,'R' ,'P' ,'L' ,'C' ,'X' ,'D' ,'E' ,'F' ));
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003868 CHECK ("RESOURCESUBTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003869 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003870 CHECK ("COMPLECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003871 CHECK ("COUNTPOLICY" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003872 CHECK ("BOXABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003873 CHECK ("PRICEABLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003874 CHECK ("COMPLECTPART" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003875 CHECK ("ACTIVE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003876 CHECK ("RESOURCECLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003877 CHECK ("RESOURCECLASS2" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003878 CHECK ("DISABLENFSCODES" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003879 CHECK ("DEFAULTRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCES
  ADD CONSTRAINT SYS_C003867 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCESETCLASSES
  (CLASSID NUMBER(10, 0) NULL,
   CLASSNAME CHAR(160) NULL);

ALTER TABLE INFORMIX.RESOURCESETCLASSES
  ADD CONSTRAINT PK_RESOURCESETCLAS UNIQUE (CLASSID);
 
ALTER TABLE INFORMIX.RESOURCESETCLASSES
  ADD CONSTRAINT SYS_C006001 CHECK ("CLASSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESETCLASSES
  ADD CONSTRAINT SYS_C006002 CHECK ("CLASSNAME" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCESETPARTS
  (RESOURCESET NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL);

ALTER TABLE INFORMIX.RESOURCESETPARTS
  ADD CONSTRAINT PK_RESOURCESETPART UNIQUE (RESOURCESET, RESOURCE_);
 
ALTER TABLE INFORMIX.RESOURCESETPARTS
  ADD CONSTRAINT SYS_C004190 CHECK ("RESOURCESET" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESETPARTS
  ADD CONSTRAINT SYS_C004191 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCESETS
  (RESOURCESET NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   MAINPART NUMBER(10, 0) NULL,
   MAINPARTQTY NUMBER(15, 3) NULL,
   TYPE_ CHAR(4) NULL,
   NFSITEM_ID CHAR(160) NULL,
   RESOURCESETCLASS NUMBER(10, 0) NULL,
   DEFAULTCOMPLECT CHAR(4) NULL,
   MANUFID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT PK_RESOURCESETS UNIQUE (RESOURCESET);
 
ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT CKC_TYPE_RESOU CHECK ((TYPE_ IS NULL ) OR (TYPE_ IN ('S' ,'A' )) );
 
ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT CKC_DEFAULTC_RESOU CHECK (defaultcomplect IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT SYS_C003918 CHECK ("RESOURCESET" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT SYS_C003919 CHECK ("RESOURCESETCLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESETS
  ADD CONSTRAINT SYS_C003920 CHECK ("DEFAULTCOMPLECT" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCES_OLD
  (RESOURCE_ NUMBER(10, 0) NULL,
   RESOURCECLASS CHAR(4) NULL,
   RESOURCECLASS2 NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.RESOURCESUBTYPES
  (RESOURCESUBTYPE NUMBER(10, 0) NULL,
   RESOURCETYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.RESOURCESUBTYPES
  ADD CONSTRAINT PK_RESOURCESUBTYPE UNIQUE (RESOURCESUBTYPE);
 
ALTER TABLE INFORMIX.RESOURCESUBTYPES
  ADD CONSTRAINT SYS_C004385 CHECK ("RESOURCESUBTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESUBTYPES
  ADD CONSTRAINT SYS_C004386 CHECK ("RESOURCETYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCESUBTYPES
  ADD CONSTRAINT SYS_C004387 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCETAXES
  (RESOURCE_ NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   NDS NUMBER(15, 2) NULL,
   NSP NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.RESOURCETAXES
  ADD CONSTRAINT PK_RESOURCETAXES UNIQUE (RESOURCE_, DATE_);
 
ALTER TABLE INFORMIX.RESOURCETAXES
  ADD CONSTRAINT SYS_C004438 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCETAXES
  ADD CONSTRAINT SYS_C004439 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCETAXES
  ADD CONSTRAINT SYS_C004440 CHECK ("NDS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCETAXES
  ADD CONSTRAINT SYS_C004441 CHECK ("NSP" IS NOT NULL);

CREATE TABLE INFORMIX.RESOURCETYPES
  (RESOURCETYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.RESOURCETYPES
  ADD CONSTRAINT PK_RESOURCETYPES UNIQUE (RESOURCETYPE);
 
ALTER TABLE INFORMIX.RESOURCETYPES
  ADD CONSTRAINT SYS_C004133 CHECK ("RESOURCETYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RESOURCETYPES
  ADD CONSTRAINT SYS_C004134 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RESSER
  (STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   SERIALNUMBER CHAR(80) NULL,
   MANUFSERIAL CHAR(80) NULL,
   NEWSERIAL CHAR(80) NULL,
   NEWMANUF CHAR(80) NULL);

ALTER TABLE INFORMIX.RESSER
  ADD CONSTRAINT U579_2365 UNIQUE (STORAGECARD);
 
ALTER TABLE INFORMIX.RESSER
  ADD CONSTRAINT SYS_C005449 CHECK ("STORAGECARD" IS NOT NULL);

CREATE TABLE INFORMIX.RES_TC_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RES_TC_CONFIGURATIONS
  ADD CONSTRAINT PK_RES_CONTROLLERS_TC_CONF UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.RES_TC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003851 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.ROLES
  (ROLE CHAR(80) NULL,
   ROLENAME CHAR(1020) NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   SORTORDER NUMBER(10, 0) NULL,
   TASKCOMMENT VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.ROLES
  ADD CONSTRAINT PK_ROLES UNIQUE (ROLE);
 
ALTER TABLE INFORMIX.ROLES
  ADD CONSTRAINT SYS_C003640 CHECK ("ROLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ROLES
  ADD CONSTRAINT SYS_C003641 CHECK ("ROLENAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.ROLES
  ADD CONSTRAINT SYS_C003642 CHECK ("SORTORDER" IS NOT NULL);

CREATE TABLE INFORMIX.ROLES2TASKS
  (ROLE CHAR(80) NULL,
   TASK NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.ROLES2TASKS
  ADD CONSTRAINT PK_ROLES2TASKS UNIQUE (ROLE, TASK);
 
ALTER TABLE INFORMIX.ROLES2TASKS
  ADD CONSTRAINT SYS_C004434 CHECK ("ROLE" IS NOT NULL);
 
ALTER TABLE INFORMIX.ROLES2TASKS
  ADD CONSTRAINT SYS_C004435 CHECK ("TASK" IS NOT NULL);

CREATE TABLE INFORMIX.RP_CONTRACTSTATE_NAMES
  (CONTRACTSTATE CHAR(4) NULL,
   CONTRACTSTATE_NAME CHAR(60) NULL);

CREATE TABLE INFORMIX.RP_LISTACTIVEARENDACONTRACTS
  (LEASEDOCUMENT NUMBER(10, 0) NULL,
   DOGOVORDATE DATE NULL,
   DOGOVORNUMBER CHAR(160) NULL,
   DOGOVORSTARTDATE DATE NULL,
   BASEDOGOVORENDDATE DATE NULL,
   DOGOVORENDDATE DATE NULL,
   DOGCLOSEDATE DATE NULL,
   DOGOVORPERIODINYEAR NUMBER(10, 0) NULL,
   MAINPOSITIONNAME CHAR(320) NULL,
   LISTUSLUGA CHAR(1020) NULL,
   EXECUTORNAME CHAR(320) NULL,
   CUSTOMERNAME CHAR(320) NULL,
   SUMMADOGOSNVALUTA NUMBER(15, 2) NULL,
   SUMMATRAFFICOSNVALUTA NUMBER(15, 2) NULL,
   OSNVALUTA CHAR(320) NULL,
   POISKOVIKNAME CHAR(320) NULL,
   ECONOMISTNAME CHAR(320) NULL,
   DOGSTATE CHAR(320) NULL,
   DOGPRODLENIETYPE CHAR(200) NULL,
   DOGPERIODPROD CHAR(200) NULL,
   MAINPOSITION NUMBER(10, 0) NULL,
   ORGEXECUTOR NUMBER(10, 0) NULL,
   MANAGER NUMBER(10, 0) NULL,
   ECONOMIST NUMBER(10, 0) NULL,
   CONTRACTSTATE CHAR(4) NULL,
   MAINRESOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RP_LISTACTIVEARENDACONTRACTS
  ADD CONSTRAINT RP_LISTACTIVEARENDACONTRACTSPR UNIQUE (LEASEDOCUMENT);
 
ALTER TABLE INFORMIX.RP_LISTACTIVEARENDACONTRACTS
  ADD CONSTRAINT SYS_C005126 CHECK ("LEASEDOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.RP_MONTH
  (ID NUMBER(10, 0) NULL,
   NAME CHAR(40) NULL,
   SNAME CHAR(8) NULL);

ALTER TABLE INFORMIX.RP_MONTH
  ADD CONSTRAINT U454_1917 UNIQUE (ID);

CREATE TABLE INFORMIX.RP_REFERENCE
  (GROUP_ NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   DESCRIPTION CHAR(320) NULL,
   NAME CHAR(4) NULL);

ALTER TABLE INFORMIX.RP_REFERENCE
  ADD CONSTRAINT RP_REFERENCEPRIMARYKEY1 UNIQUE (GROUP_, NUMBER_);
 
ALTER TABLE INFORMIX.RP_REFERENCE
  ADD CONSTRAINT SYS_C004898 CHECK ("GROUP_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RP_REFERENCE
  ADD CONSTRAINT SYS_C004899 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RP_REFERENCE
  ADD CONSTRAINT SYS_C004900 CHECK ("DESCRIPTION" IS NOT NULL);

CREATE TABLE INFORMIX.RP_STAT_PRICE
  (YEAR_ NUMBER(10, 0) NULL,
   MONTH_ NUMBER(10, 0) NULL,
   VK_PRICE_RUB NUMBER(19, 4) NULL,
   VK_COUNT_RUB NUMBER(10, 0) NULL,
   VK_AVERAGE_RUB NUMBER(19, 4) NULL,
   KBI_PRICE_RUB NUMBER(19, 4) NULL,
   KBI_COUNT_RUB NUMBER(10, 0) NULL,
   KBI_AVERAGE_RUB NUMBER(19, 4) NULL,
   VK_PRICE_USD NUMBER(19, 4) NULL,
   VK_COUNT_USD NUMBER(10, 0) NULL,
   VK_AVERAGE_USD NUMBER(19, 4) NULL,
   KBI_PRICE_USD NUMBER(19, 4) NULL,
   KBI_COUNT_USD NUMBER(10, 0) NULL,
   KBI_AVERAGE_USD NUMBER(19, 4) NULL,
   VK_PRICE_EURO NUMBER(19, 4) NULL,
   VK_COUNT_EURO NUMBER(10, 0) NULL,
   VK_AVERAGE_EURO NUMBER(19, 4) NULL,
   KBI_PRICE_EURO NUMBER(19, 4) NULL,
   KBI_COUNT_EURO NUMBER(10, 0) NULL,
   KBI_AVERAGE_EURO NUMBER(19, 4) NULL);

ALTER TABLE INFORMIX.RP_STAT_PRICE
  ADD CONSTRAINT RP_STAT_PRICEPRIMARYKEY1 UNIQUE (YEAR_, MONTH_);
 
ALTER TABLE INFORMIX.RP_STAT_PRICE
  ADD CONSTRAINT SYS_C004750 CHECK ("YEAR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RP_STAT_PRICE
  ADD CONSTRAINT SYS_C004751 CHECK ("MONTH_" IS NOT NULL);

CREATE TABLE INFORMIX.RP_YEAR
  (ID NUMBER(10, 0) NULL,
   NAME CHAR(16) NULL);

ALTER TABLE INFORMIX.RP_YEAR
  ADD CONSTRAINT U455_1918 UNIQUE (ID);

CREATE TABLE INFORMIX.RRLANTENNARES
  (RESOURCE_ NUMBER(10, 0) NULL,
   FREQDEVLOWK NUMBER(6, 2) NULL,
   FREQDEVLOWLOG10 NUMBER(10, 0) NULL,
   FREQDEVHIGHK NUMBER(6, 2) NULL,
   FREQDEVHIGHLOG10 NUMBER(10, 0) NULL,
   MKKRRECOMM CHAR(80) NULL,
   PROTOCOLNUM CHAR(80) NULL,
   PROTOCOLDATE DATE NULL);

ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT PK_RRLANTENNARES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004732 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004733 CHECK ("FREQDEVLOWK" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004734 CHECK ("FREQDEVLOWLOG10" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004735 CHECK ("FREQDEVHIGHK" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004736 CHECK ("FREQDEVHIGHLOG10" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004737 CHECK ("MKKRRECOMM" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004738 CHECK ("PROTOCOLNUM" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTENNARES
  ADD CONSTRAINT SYS_C004739 CHECK ("PROTOCOLDATE" IS NOT NULL);

CREATE TABLE INFORMIX.RRLANTPARAMS
  (RRLANTID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   ANTDIAM NUMBER(2, 1) NULL,
   AMPLIFKOEFF NUMBER(4, 1) NULL,
   DNANGLEH NUMBER(3, 1) NULL,
   DNANGLEW NUMBER(3, 1) NULL);

ALTER TABLE INFORMIX.RRLANTPARAMS
  ADD CONSTRAINT PK_RRLANTPARAMS UNIQUE (RRLANTID);
 
ALTER TABLE INFORMIX.RRLANTPARAMS
  ADD CONSTRAINT SYS_C004740 CHECK ("RRLANTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTPARAMS
  ADD CONSTRAINT SYS_C004741 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLANTPARAMS
  ADD CONSTRAINT SYS_C004742 CHECK ("ANTDIAM" IS NOT NULL);

CREATE TABLE INFORMIX.RRLDOCS
  (SITEDOC NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RRLDOCS
  ADD CONSTRAINT PK_RRLDOCS UNIQUE (SITEDOC);
 
ALTER TABLE INFORMIX.RRLDOCS
  ADD CONSTRAINT SYS_C004689 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLDOCS
  ADD CONSTRAINT SYS_C004690 CHECK ("ORGANIZATION_" IS NOT NULL);

CREATE TABLE INFORMIX.RRL_HOPS
  (HOPSID NUMBER(10, 0) NULL,
   DIAM_A FLOAT(126) NULL,
   DIAM_B FLOAT(126) NULL,
   HEIGHT_ENDA FLOAT(126) NULL,
   HEIGHT_ENDB FLOAT(126) NULL,
   FREQUENCY_ENDA1 FLOAT(126) NULL,
   FREQUENCY_ENDA2 FLOAT(126) NULL,
   FREQUENCY_ENDB1 FLOAT(126) NULL,
   FREQUENCY_ENDB2 FLOAT(126) NULL,
   AZIMUT FLOAT(126) NULL,
   EMCID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RRL_HOPS
  ADD CONSTRAINT PK_RRL_HOPS UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.RRL_HOPS
  ADD CONSTRAINT SYS_C004566 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.RRL_HOPS2
  (HOPSID NUMBER(10, 0) NULL,
   AZIMUTH FLOAT(126) NULL,
   TYPE_HW CHAR(48) NULL,
   DIAM_A FLOAT(126) NULL,
   HEIGHT_A FLOAT(126) NULL,
   FREQUENCY_A1 FLOAT(126) NULL,
   FREQUENCY_A2 FLOAT(126) NULL,
   POWER_A FLOAT(126) NULL,
   SIGNAL_CALC_A FLOAT(126) NULL,
   SIGNAL_REAL_A FLOAT(126) NULL,
   CABLE_RRL_A FLOAT(126) NULL,
   CABLE_POWER_A FLOAT(126) NULL,
   CABLE_2MB_A FLOAT(126) NULL,
   COMMENT_A CHAR(256) NULL,
   ACCUMID_A NUMBER(10, 0) NULL,
   DIAM_B FLOAT(126) NULL,
   HEIGHT_B FLOAT(126) NULL,
   FREQUENCY_B1 FLOAT(126) NULL,
   FREQUENCY_B2 FLOAT(126) NULL,
   POWER_B FLOAT(126) NULL,
   SIGNAL_CALC_B FLOAT(126) NULL,
   SIGNAL_REAL_B FLOAT(126) NULL,
   CABLE_RRL_B FLOAT(126) NULL,
   CABLE_POWER_B FLOAT(126) NULL,
   CABLE_2MBR_B FLOAT(126) NULL,
   COMMENT_B CHAR(256) NULL,
   ACCUMID_B NUMBER(10, 0) NULL,
   FILE_SHORTNUMBER NUMBER(10, 0) NULL,
   FILE_NUMBER NUMBER(10, 0) NULL,
   NUMBER_IN_FILE NUMBER(10, 0) NULL,
   FREQUENCY_A_DOC FLOAT(126) NULL,
   FREQUENCY_B_DOC FLOAT(126) NULL,
   DIAM_A_DOC FLOAT(126) NULL,
   HEIGHT_A_DOC FLOAT(126) NULL,
   DIAM_B_DOC FLOAT(126) NULL,
   HEIGHT_B_DOC FLOAT(126) NULL,
   RESOURCE_DOC NUMBER(10, 0) NULL,
   POWER_DOC FLOAT(126) NULL,
   SPEED_DOC CHAR(80) NULL,
   AZIMUTHAB_DOC FLOAT(126) NULL,
   AZIMUTHBA_DOC FLOAT(126) NULL,
   COMMENT_DOC CHAR(2000) NULL,
   DIAM2_A FLOAT(126) NULL,
   DIAM2_B FLOAT(126) NULL,
   CAPACITY NUMBER(10, 0) NULL,
   SFONUMBER CHAR(80) NULL,
   ANTPLACEA NUMBER(10, 0) NULL,
   ANTPLACEB NUMBER(10, 0) NULL,
   SOURCE_DOC CHAR(320) NULL,
   FREQUENCY_INT NUMBER(10, 0) NULL,
   GAIN_FACTOR FLOAT(126) NULL,
   SYGN_LEVEL_FACTA NUMBER(6, 2) NULL,
   SYGN_LEVEL_FACTB NUMBER(6, 2) NULL,
   ACTIVE_PARAM NUMBER(10, 0) NULL,
   HEIGHT2_A NUMBER(8, 4) NULL,
   HEIGHT2_B NUMBER(8, 4) NULL);

ALTER TABLE INFORMIX.RRL_HOPS2
  ADD CONSTRAINT PK_RRL_HOPS2 UNIQUE (HOPSID);
 
ALTER TABLE INFORMIX.RRL_HOPS2
  ADD CONSTRAINT SYS_C005109 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.RRL_HOPS4
  (HOPSID NUMBER(10, 0) NULL,
   AZIMUTH FLOAT(126) NULL,
   TYPE_HW CHAR(48) NULL,
   DIAM_A FLOAT(126) NULL,
   HEIGHT_A FLOAT(126) NULL,
   FREQUENCY_A1 FLOAT(126) NULL,
   FREQUENCY_A2 FLOAT(126) NULL,
   POWER_A FLOAT(126) NULL,
   SIGNAL_CALC_A FLOAT(126) NULL,
   SIGNAL_REAL_A FLOAT(126) NULL,
   CABLE_RRL_A FLOAT(126) NULL,
   CABLE_POWER_A FLOAT(126) NULL,
   CABLE_2MB_A FLOAT(126) NULL,
   COMMENT_A CHAR(256) NULL,
   ACCUMID_A NUMBER(10, 0) NULL,
   DIAM_B FLOAT(126) NULL,
   HEIGHT_B FLOAT(126) NULL,
   FREQUENCY_B1 FLOAT(126) NULL,
   FREQUENCY_B2 FLOAT(126) NULL,
   POWER_B FLOAT(126) NULL,
   SIGNAL_CALC_B FLOAT(126) NULL,
   SIGNAL_REAL_B FLOAT(126) NULL,
   CABLE_RRL_B FLOAT(126) NULL,
   CABLE_POWER_B FLOAT(126) NULL,
   CABLE_2MBR_B FLOAT(126) NULL,
   COMMENT_B CHAR(256) NULL,
   ACCUMID_B NUMBER(10, 0) NULL,
   FILE_SHORTNUMBER NUMBER(10, 0) NULL,
   FILE_NUMBER NUMBER(10, 0) NULL,
   NUMBER_IN_FILE NUMBER(10, 0) NULL,
   FREQUENCY_A_DOC FLOAT(126) NULL,
   FREQUENCY_B_DOC FLOAT(126) NULL,
   DIAM_A_DOC FLOAT(126) NULL,
   HEIGHT_A_DOC FLOAT(126) NULL,
   DIAM_B_DOC FLOAT(126) NULL,
   HEIGHT_B_DOC FLOAT(126) NULL,
   RESOURCE_DOC NUMBER(10, 0) NULL,
   POWER_DOC FLOAT(126) NULL,
   SPEED_DOC CHAR(80) NULL,
   AZIMUTHAB_DOC FLOAT(126) NULL,
   AZIMUTHBA_DOC FLOAT(126) NULL,
   COMMENT_DOC CHAR(2000) NULL,
   DIAM2_A FLOAT(126) NULL,
   DIAM2_B FLOAT(126) NULL,
   CAPACITY NUMBER(10, 0) NULL,
   SFONUMBER CHAR(80) NULL,
   ANTPLACEA NUMBER(10, 0) NULL,
   ANTPLACEB NUMBER(10, 0) NULL,
   SOURCE_DOC CHAR(320) NULL,
   FREQUENCY_INT NUMBER(10, 0) NULL,
   GAIN_FACTOR FLOAT(126) NULL,
   SYGN_LEVEL_FACTA NUMBER(6, 2) NULL,
   SYGN_LEVEL_FACTB NUMBER(6, 2) NULL,
   ACTIVE_PARAM NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.RRL_HOPS4
  ADD CONSTRAINT SYS_C005495 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.RRLSPEEDPARAMS
  (RRLSPEEDID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STREAMSPEED CHAR(80) NULL,
   RADIATIONCLASS CHAR(28) NULL,
   RECVSENSITIVITY NUMBER(4, 1) NULL);

ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT PK_RRLSPEEDPARAMS UNIQUE (RRLSPEEDID);
 
ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT SYS_C004768 CHECK ("RRLSPEEDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT SYS_C004769 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT SYS_C004770 CHECK ("STREAMSPEED" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT SYS_C004771 CHECK ("RADIATIONCLASS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RRLSPEEDPARAMS
  ADD CONSTRAINT SYS_C004772 CHECK ("RECVSENSITIVITY" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANGESLOG
  (LOGID NUMBER(10, 0) NULL,
   RECDATE DATE NULL,
   OBJTYPE NUMBER(5, 0) NULL,
   OBJID NUMBER(10, 0) NULL,
   EVENTTYPE CHAR(4) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT PK_RTS_CHANGESLOG UNIQUE (LOGID);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005518 CHECK ("LOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005519 CHECK ("RECDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005520 CHECK ("OBJTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005521 CHECK ("OBJID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005522 CHECK ("EVENTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOG
  ADD CONSTRAINT SYS_C005523 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANGESLOGDETAILS
  (LOGDETID NUMBER(10, 0) NULL,
   LOGID NUMBER(10, 0) NULL,
   FIELDLABEL VARCHAR2(320) NULL,
   OLDVALUE VARCHAR2(1020) NULL,
   NEWVALUE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.RTS_CHANGESLOGDETAILS
  ADD CONSTRAINT PK_RTS_CHANGESLOGD UNIQUE (LOGDETID);
 
ALTER TABLE INFORMIX.RTS_CHANGESLOGDETAILS
  ADD CONSTRAINT SYS_C005540 CHECK ("LOGDETID" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANNELINTERFACES
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.RTS_CHANNELINTERFACES
  ADD CONSTRAINT PK_RTS_CHANNELINTE UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_CHANNELINTERFACES
  ADD CONSTRAINT SYS_C005633 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANNELINTERFACES
  ADD CONSTRAINT SYS_C005634 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANNELINTERFACETYPES
  (ID NUMBER(10, 0) NULL,
   INTERFACEID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.RTS_CHANNELINTERFACETYPES
  ADD CONSTRAINT PK_RTS_CHANNELINTT UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_CHANNELINTERFACETYPES
  ADD CONSTRAINT SYS_C005524 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANNELINTERFACETYPES
  ADD CONSTRAINT SYS_C005525 CHECK ("INTERFACEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANNELINTERFACETYPES
  ADD CONSTRAINT SYS_C005526 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANNELSTLMNT
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.RTS_CHANNELSTLMNT
  ADD CONSTRAINT PK_RTS_CHANNELSTLM UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_CHANNELSTLMNT
  ADD CONSTRAINT SYS_C005631 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANNELSTLMNT
  ADD CONSTRAINT SYS_C005632 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CHANNELTYPES
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.RTS_CHANNELTYPES
  ADD CONSTRAINT PK_RTS_CHANNELTYPE UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_CHANNELTYPES
  ADD CONSTRAINT SYS_C005504 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CHANNELTYPES
  ADD CONSTRAINT SYS_C005505 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_CONSREQUEST
  (CONSREQID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   NUMBER_ VARCHAR2(80) NULL,
   OWNERNAME VARCHAR2(1020) NULL,
   OWNERPHONE VARCHAR2(120) NULL,
   REQTYPE NUMBER(10, 0) NULL,
   REQDATE DATE NULL,
   CHANNELTYPE NUMBER(10, 0) NULL,
   CHANNELSTLMNT NUMBER(10, 0) NULL,
   CHANNELLABEL VARCHAR2(120) NULL,
   CHANNELCODE VARCHAR2(120) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   REGIONMAN NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   PLANCOMPLDATE DATE NULL,
   FACTCOMPLDATE DATE NULL,
   TESTEDDATE DATE NULL,
   ARRIVEDDATE DATE NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   TESTEDBY NUMBER(10, 0) NULL,
   KEYMANAGER NUMBER(10, 0) NULL,
   EQUIPMENTA NUMBER(10, 0) NULL,
   PORTA VARCHAR2(256) NULL,
   CONTACTA VARCHAR2(1020) NULL,
   EQUIPMENTB NUMBER(10, 0) NULL,
   PORTB VARCHAR2(256) NULL,
   CONTACTB VARCHAR2(1020) NULL,
   CLOSEDATE DATE NULL,
   ARENDATYPE NUMBER(10, 0) NULL,
   TRANSEQUIPMENTA NUMBER(10, 0) NULL,
   TRANSEQUIPMENTB NUMBER(10, 0) NULL,
   TRANSPORTA VARCHAR2(80) NULL,
   TRANSPORTB VARCHAR2(80) NULL,
   CONFIRMATIVE NUMBER(10, 0) NULL,
   HEAD NUMBER(10, 0) NULL,
   BEENETA CHAR(48) NULL,
   BEENETB CHAR(48) NULL,
   POSITIONA NUMBER(10, 0) NULL,
   POSITIONB NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT PK_RTS_CONSREQUEST UNIQUE (CONSREQID);
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT CKC_REQTYPE_RTS_C CHECK ((reqtype IS NULL ) OR (reqtype IN (1 ,2 ,3 )) );
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT CKC_ARENDATY_RTS_C CHECK (arendatype IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT CKC_STATUS_RTS_C CHECK (status IN (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ));
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT SYS_C005506 CHECK ("CONSREQID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT SYS_C005507 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT SYS_C005508 CHECK ("REQDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT SYS_C005509 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_CONSREQUEST
  ADD CONSTRAINT SYS_C005510 CHECK ("ARENDATYPE" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_ELEMREQUEST
  (ELEMREQID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   NUMBER_ VARCHAR2(80) NULL,
   ELEMREQTYPE NUMBER(10, 0) NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   INITMAN NUMBER(10, 0) NULL,
   KEYMANAGER NUMBER(10, 0) NULL,
   REGMANAGER NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   REQTYPE NUMBER(10, 0) NULL,
   COMPLETEDATE DATE NULL,
   PLANCOMPLDATE DATE NULL,
   FACTCOMPLDATE DATE NULL,
   CHANNELSTLMNT NUMBER(10, 0) NULL,
   CHANNELLABEL VARCHAR2(120) NULL,
   CHANNELCODE VARCHAR2(120) NULL,
   INTERFACEID NUMBER(10, 0) NULL,
   INTERFACEOM VARCHAR2(200) NULL,
   INTEFACETYPEID NUMBER(10, 0) NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   EQUIPMENTA NUMBER(10, 0) NULL,
   PORTA VARCHAR2(256) NULL,
   CONTACTA VARCHAR2(1020) NULL,
   EQUIPMENTB NUMBER(10, 0) NULL,
   PORTB VARCHAR2(256) NULL,
   CONTACTB VARCHAR2(1020) NULL,
   POSITIONA NUMBER(10, 0) NULL,
   POSITIONB NUMBER(10, 0) NULL,
   COMMENTKM VARCHAR2(1020) NULL,
   COMMENTRM VARCHAR2(1020) NULL,
   SITELABEL VARCHAR2(1020) NULL,
   CONNECTPARAMS VARCHAR2(1020) NULL,
   ACTNUMBER VARCHAR2(80) NULL,
   ACTDATE DATE NULL,
   DOCNUMBER VARCHAR2(80) NULL,
   DOCDATE DATE NULL,
   CHANNELCLOSINGDATE DATE NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   OPERATORDATE DATE NULL,
   ORDERDATE DATE NULL,
   PLANSTARTDATE DATE NULL,
   ORDER_ VARCHAR2(80) NULL,
   CONTRACT VARCHAR2(80) NULL,
   ACTCLOSINGDATE DATE NULL,
   CONSREQID NUMBER(10, 0) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   COUNTERAGENT NUMBER(10, 0) NULL,
   BEENETA CHAR(48) NULL,
   BEENETB CHAR(48) NULL,
   COUNTERAGENTCONTACT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT PK_RTS_ELEMREQUEST UNIQUE (ELEMREQID);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT CKC_ELEMREQT_RTS_E CHECK (elemreqtype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT CKC_REQTYPE_RTS_E CHECK (reqtype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT CKC_STATUS_RTS_E CHECK (status IN (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ));
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005511 CHECK ("ELEMREQID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005512 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005513 CHECK ("ELEMREQTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005514 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005515 CHECK ("REQTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005516 CHECK ("CHANNELSTLMNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ELEMREQUEST
  ADD CONSTRAINT SYS_C005517 CHECK ("CONSREQID" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_GROUPS
  (GROUPID NUMBER(10, 0) NULL,
   NAME VARCHAR2(320) NULL,
   REGIONID NUMBER(10, 0) NULL,
   ROLEID NUMBER(10, 0) NULL,
   FILIALID NUMBER(10, 0) NULL,
   INITIATORCODE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_GROUPS
  ADD CONSTRAINT PK_RTS_GROUPS UNIQUE (GROUPID);
 
ALTER TABLE INFORMIX.RTS_GROUPS
  ADD CONSTRAINT SYS_C005527 CHECK ("GROUPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_GROUPS
  ADD CONSTRAINT SYS_C005528 CHECK ("ROLEID" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_GROUPS2PEOPLE
  (GROUPID NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_GROUPS2PEOPLE
  ADD CONSTRAINT PK_RTS_GROUPS2PEOP UNIQUE (GROUPID, MAN);
 
ALTER TABLE INFORMIX.RTS_GROUPS2PEOPLE
  ADD CONSTRAINT SYS_C005481 CHECK ("GROUPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_GROUPS2PEOPLE
  ADD CONSTRAINT SYS_C005482 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_INIT2CHANSTLMNT
  (GROUPID NUMBER(10, 0) NULL,
   CHANSTLMNTID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_INIT2CHANSTLMNT
  ADD CONSTRAINT PK_RTS_INIT2CHANST UNIQUE (GROUPID, CHANSTLMNTID);
 
ALTER TABLE INFORMIX.RTS_INIT2CHANSTLMNT
  ADD CONSTRAINT SYS_C005477 CHECK ("GROUPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_INIT2CHANSTLMNT
  ADD CONSTRAINT SYS_C005478 CHECK ("CHANSTLMNTID" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_NOTIFICATIONLIST
  (ID NUMBER(10, 0) NULL,
   REQUESTID VARCHAR2(80) NULL,
   OWNER NUMBER(10, 0) NULL,
   RECIPIENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_NOTIFICATIONLIST
  ADD CONSTRAINT PK_RTS_NOTIFICATIO UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_NOTIFICATIONLIST
  ADD CONSTRAINT SYS_C005541 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NOTIFICATIONLIST
  ADD CONSTRAINT SYS_C005542 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NOTIFICATIONLIST
  ADD CONSTRAINT SYS_C005543 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NOTIFICATIONLIST
  ADD CONSTRAINT SYS_C005544 CHECK ("RECIPIENT" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_NUMERATIONS
  (ID NUMBER(10, 0) NULL,
   NUMERATIONTYPE NUMBER(10, 0) NULL,
   INITIATORCODE NUMBER(10, 0) NULL,
   LASTREQNUMBER NUMBER(10, 0) NULL,
   LASTREQDATE DATE NULL,
   ELEMENTARYCODE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT PK_RTS_NUMERATIONS UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT CKC_NUMERATI_RTS_N CHECK (numerationtype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT SYS_C005627 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT SYS_C005628 CHECK ("NUMERATIONTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT SYS_C005629 CHECK ("LASTREQNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_NUMERATIONS
  ADD CONSTRAINT SYS_C005630 CHECK ("LASTREQDATE" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_RENTELEMREQUEST
  (RENTELEMREQID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   NUMBER_ VARCHAR2(80) NULL,
   ELEMREQTYPE NUMBER(10, 0) NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   INITMAN NUMBER(10, 0) NULL,
   KEYMANAGER NUMBER(10, 0) NULL,
   REGMANAGER NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   REQTYPE NUMBER(10, 0) NULL,
   COMPLETEDATE DATE NULL,
   PLANCOMPLDATE DATE NULL,
   FACTCOMPLDATE DATE NULL,
   CHANNELSTLMNT NUMBER(10, 0) NULL,
   CHANNELLABEL VARCHAR2(120) NULL,
   CHANNELCODE VARCHAR2(120) NULL,
   INTERFACEID NUMBER(10, 0) NULL,
   INTERFACEOM VARCHAR2(200) NULL,
   INTEFACETYPEID NUMBER(10, 0) NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   EQUIPMENTA NUMBER(10, 0) NULL,
   PORTA VARCHAR2(1020) NULL,
   CONTACTA VARCHAR2(1020) NULL,
   EQUIPMENTB NUMBER(10, 0) NULL,
   PORTB VARCHAR2(1020) NULL,
   CONTACTB VARCHAR2(1020) NULL,
   POSITIONA NUMBER(10, 0) NULL,
   POSITIONB NUMBER(10, 0) NULL,
   BEENETA CHAR(48) NULL,
   BEENETB CHAR(48) NULL,
   COMMENTKM VARCHAR2(1020) NULL,
   COMMENTRM VARCHAR2(1020) NULL,
   SITELABEL VARCHAR2(1020) NULL,
   CONNECTPARAMS VARCHAR2(1020) NULL,
   ACTNUMBER VARCHAR2(80) NULL,
   ACTDATE DATE NULL,
   DOCNUMBER VARCHAR2(80) NULL,
   DOCDATE DATE NULL,
   CHANNELCLOSINGDATE DATE NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   OPERATORDATE DATE NULL,
   ORDERDATE DATE NULL,
   PLANSTARTDATE DATE NULL,
   ORDER_ VARCHAR2(80) NULL,
   CONTRACT VARCHAR2(80) NULL,
   ACTCLOSINGDATE DATE NULL,
   ELEMREQID NUMBER(10, 0) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   COUNTERAGENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT PK_RTS_RENTELEMREQ UNIQUE (RENTELEMREQID);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT CKC_ELEMREQT_RTS_R CHECK (elemreqtype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT CKC_STATUS_RTS_RER CHECK (status IN (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ));
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT CKC_REQTYPE_RTS_RER CHECK (reqtype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005724 CHECK ("RENTELEMREQID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005725 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005726 CHECK ("ELEMREQTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005727 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005728 CHECK ("REQTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005729 CHECK ("CHANNELSTLMNT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_RENTELEMREQUEST
  ADD CONSTRAINT SYS_C005730 CHECK ("ELEMREQID" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_REQCOMMUNICATION
  (ID NUMBER(10, 0) NULL,
   REQUESTID VARCHAR2(80) NULL,
   TEXT CLOB NULL,
   DATE_ DATE NULL,
   MAN NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL);

ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT PK_RTS_REQCOMMUNIC UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT CKC_TYPE_RTS_R CHECK (TYPE_ IN ('I' ,'U' ,'E' ,'W' ));
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005773 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005774 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005775 CHECK ("TEXT" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005776 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005777 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQCOMMUNICATION
  ADD CONSTRAINT SYS_C005778 CHECK ("TYPE_" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_REQUEST
  (REQUESTID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   INITID NUMBER(10, 0) NULL,
   INITMAN NUMBER(10, 0) NULL,
   BEENETIDA VARCHAR2(80) NULL,
   POSITIONA NUMBER(10, 0) NULL,
   EXTRADDRA VARCHAR2(1020) NULL,
   PORTA VARCHAR2(80) NULL,
   CONTACTNAMEA VARCHAR2(1020) NULL,
   CONTACTPHONEA VARCHAR2(120) NULL,
   BEENETIDB VARCHAR2(80) NULL,
   POSITIONB NUMBER(10, 0) NULL,
   EXTRADDRB VARCHAR2(1020) NULL,
   PORTB VARCHAR2(80) NULL,
   CONTACTNAMEB VARCHAR2(1020) NULL,
   CONTACTPHONEB VARCHAR2(120) NULL,
   NUMBER_ VARCHAR2(80) NULL,
   COMPLETEDATE DATE NULL,
   PLANCOMPLDATE DATE NULL,
   FACTCOMPLDATE DATE NULL,
   INWORKDATE DATE NULL,
   PRIORITY NUMBER(10, 0) NULL,
   REQTYPE NUMBER(10, 0) NULL,
   INITLABEL VARCHAR2(200) NULL,
   CHANNELTYPE NUMBER(10, 0) NULL,
   CHANNELSTLMNT NUMBER(10, 0) NULL,
   INTERFACEID NUMBER(10, 0) NULL,
   INTERFACEOM VARCHAR2(200) NULL,
   CAPACITY VARCHAR2(200) NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   CANBECOMPRESSED NUMBER(10, 0) NULL,
   REASON VARCHAR2(1020) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   STATUS NUMBER(10, 0) NULL,
   CONSREQID NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   KEYMANAGER NUMBER(10, 0) NULL,
   INTERFACETYPEID NUMBER(10, 0) NULL,
   EQUIPMENTA NUMBER(10, 0) NULL,
   EQUIPMENTB NUMBER(10, 0) NULL,
   REVISION_COMMENT VARCHAR2(1020) NULL,
   CLONEREQUESTID NUMBER(10, 0) NULL,
   REGMANAGER NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT PK_RTS_REQUEST UNIQUE (REQUESTID);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT CKC_PRIORITY_RTS_R CHECK (priority IN (1 ,2 ));
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT CKC_REQTYPE_RTS_R CHECK (reqtype IN (1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT CKC_CANBECOM_RTS_R CHECK (canbecompressed IN (0 ,1 ));
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT CKC_STATUS_RTS_R CHECK (status IN (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ));
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005538 CHECK ("CANBECOMPRESSED" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005539 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005529 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005530 CHECK ("VERSION" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005531 CHECK ("INITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005532 CHECK ("INITMAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005533 CHECK ("COMPLETEDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005534 CHECK ("PRIORITY" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005535 CHECK ("REQTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005536 CHECK ("CHANNELTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_REQUEST
  ADD CONSTRAINT SYS_C005537 CHECK ("CHANNELSTLMNT" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_ROLES
  (ROLEID NUMBER(10, 0) NULL,
   ROLENAME VARCHAR2(320) NULL);
 
ALTER TABLE INFORMIX.RTS_ROLES
  ADD CONSTRAINT CKC_ROLEID_RTS_R CHECK (roleid IN (1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ));
 
ALTER TABLE INFORMIX.RTS_ROLES
  ADD CONSTRAINT SYS_C005502 CHECK ("ROLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ROLES
  ADD CONSTRAINT SYS_C005503 CHECK ("ROLENAME" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_ROLES2PEOPLE
  (ROLEID NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.RTS_ROLES2PEOPLE
  ADD CONSTRAINT PK_RTS_ROLES2PEOPL UNIQUE (ROLEID, MAN);
 
ALTER TABLE INFORMIX.RTS_ROLES2PEOPLE
  ADD CONSTRAINT SYS_C005479 CHECK ("ROLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_ROLES2PEOPLE
  ADD CONSTRAINT SYS_C005480 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.RTS_TASKS
  (ID NUMBER(10, 0) NULL,
   STATUS CHAR(4) NULL,
   TASKTYPE NUMBER(10, 0) NULL,
   REQUESTID NUMBER(10, 0) NULL,
   REQUESTNUMBER VARCHAR2(120) NULL,
   REQUESTTYPE CHAR(4) NULL,
   CREATED DATE NULL,
   LASTSENDING DATE NULL,
   HOST VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT PK_RTS_TASKS UNIQUE (ID);
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT C703_2949 CHECK (status IN ('R' ,'U' ,'D' ));
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT CKC_REQUESTT_RTS_T CHECK (requesttype IN ('I' ,'E' ,'C' ));
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT SYS_C005824 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT SYS_C005825 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT SYS_C005826 CHECK ("TASKTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT SYS_C005827 CHECK ("REQUESTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.RTS_TASKS
  ADD CONSTRAINT SYS_C005828 CHECK ("REQUESTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.SEARCHES
  (SEARCHGROUP NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   SEARCHGROUPPING NUMBER(10, 0) NULL,
   ORDER_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SEARCHES
  ADD CONSTRAINT PK_SEARCHES UNIQUE (SEARCHGROUP, ORGANIZATION_);
 
ALTER TABLE INFORMIX.SEARCHES
  ADD CONSTRAINT SYS_C004291 CHECK ("SEARCHGROUP" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHES
  ADD CONSTRAINT SYS_C004292 CHECK ("ORGANIZATION_" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHES
  ADD CONSTRAINT SYS_C004293 CHECK ("SEARCHGROUPPING" IS NOT NULL);

CREATE TABLE INFORMIX.SEARCHGROUPPING
  (SEARCHGROUPPING NUMBER(10, 0) NULL,
   SEARCHGROUP NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.SEARCHGROUPPING
  ADD CONSTRAINT PK_SEARCHGROUPPING UNIQUE (SEARCHGROUPPING);
 
ALTER TABLE INFORMIX.SEARCHGROUPPING
  ADD CONSTRAINT SYS_C004390 CHECK ("SEARCHGROUPPING" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHGROUPPING
  ADD CONSTRAINT SYS_C004391 CHECK ("SEARCHGROUP" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHGROUPPING
  ADD CONSTRAINT SYS_C004392 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.SEARCHGROUPS
  (SEARCHGROUP NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.SEARCHGROUPS
  ADD CONSTRAINT PK_SEARCHGROUPS UNIQUE (SEARCHGROUP);
 
ALTER TABLE INFORMIX.SEARCHGROUPS
  ADD CONSTRAINT SYS_C004146 CHECK ("SEARCHGROUP" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHGROUPS
  ADD CONSTRAINT SYS_C004147 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.SEARCHPARAMS
  (PARAMID NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   APPLICATION NUMBER(10, 0) NULL,
   MODE_ NUMBER(10, 0) NULL,
   PARAMCODE CHAR(120) NULL,
   PARAMVALUE VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT PK_SEARCHPARAMS UNIQUE (PARAMID);
 
ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT SYS_C004946 CHECK ("PARAMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT SYS_C004947 CHECK ("OPERATOR_" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT SYS_C004948 CHECK ("APPLICATION" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT SYS_C004949 CHECK ("MODE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEARCHPARAMS
  ADD CONSTRAINT SYS_C004950 CHECK ("PARAMCODE" IS NOT NULL);

CREATE TABLE INFORMIX.SECTORS
  (ID_SECT NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   NAME_SECT CHAR(12) NULL,
   BAND NUMBER(5, 0) NULL,
   NUM_SECT CHAR(24) NULL,
   AZIMUT NUMBER(6, 2) NULL,
   POWER NUMBER(6, 2) NULL,
   BTS_NUMBER CHAR(40) NULL,
   CON_ABIS CHAR(4) NULL,
   PORT_ABIS NUMBER(10, 0) NULL,
   NUM_PO CHAR(128) NULL,
   DDK CHAR(4) NULL,
   TRX_NUM NUMBER(10, 0) NULL,
   TX_PWR NUMBER(6, 2) NULL,
   TRX_NUM2 NUMBER(10, 0) NULL,
   TX_PWR2 NUMBER(6, 2) NULL,
   TX_SET_PWR NUMBER(6, 2) NULL,
   TRX_OVR_NUM NUMBER(10, 0) NULL,
   TX_OVR_SET_PWR NUMBER(6, 2) NULL,
   HAS_FLT CHAR(4) NULL,
   HAS_LNA CHAR(4) NULL,
   HAS_BUSTER CHAR(4) NULL,
   CONF CHAR(4) NULL,
   IS_HR CHAR(4) NULL,
   CAP_GPRS CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   LAC NUMBER(10, 0) NULL,
   RAC NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   NCC NUMBER(5, 0) NULL,
   BCC NUMBER(5, 0) NULL,
   PLANFACTTYPE NUMBER(10, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CELLINFO VARCHAR2(1020) NULL,
   MSHUID NUMBER(10, 0) NULL,
   INOUTFILTERID NUMBER(10, 0) NULL,
   DIPLEXFILTERID NUMBER(10, 0) NULL,
   DIPLEXERID NUMBER(10, 0) NULL,
   COMBCOUNT NUMBER(10, 0) NULL,
   MSHUCOUNT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT PK_SECTORS UNIQUE (ID_SECT);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_CON_ABIS_SECTO CHECK ((con_abis IS NULL ) OR (con_abis IN ('1' ,'2' ,'3' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_DDK_SECTO CHECK ((ddk IS NULL ) OR (ddk IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_HAS_FLT_SECTO CHECK ((has_flt IS NULL ) OR (has_flt IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_HAS_LNA_SECTO CHECK ((has_lna IS NULL ) OR (has_lna IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_HAS_BUST_SECTO CHECK ((has_buster IS NULL ) OR (has_buster IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_CONF_SECTO CHECK ((conf IS NULL ) OR (conf IN ('1' ,'2' ,'3' ,'4' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_IS_HR_SECTO CHECK ((is_hr IS NULL ) OR (is_hr IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_CAP_GPRS_SECTO CHECK ((cap_gprs IS NULL ) OR (cap_gprs IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_BYHAND_SECTO CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_DATASOUR_SECTO CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_PLANFACT_SECTO CHECK (planfacttype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT CKC_BAND_SECTO CHECK (band IN (800 ,900 ,1800 ,2100 ));
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003910 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003911 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003912 CHECK ("NAME_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003913 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003914 CHECK ("NUM_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003915 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003916 CHECK ("DATASOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS
  ADD CONSTRAINT SYS_C003917 CHECK ("PLANFACTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.SECTORS_COPY
  (ID_SECT NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   NAME_SECT CHAR(320) NULL,
   BAND NUMBER(5, 0) NULL,
   NUM_SECT CHAR(24) NULL,
   AZIMUT NUMBER(6, 2) NULL,
   POWER NUMBER(6, 2) NULL,
   BTS_NUMBER CHAR(40) NULL,
   CON_ABIS CHAR(4) NULL,
   PORT_ABIS NUMBER(10, 0) NULL,
   NUM_PO CHAR(128) NULL,
   DDK CHAR(4) NULL,
   TRX_NUM NUMBER(10, 0) NULL,
   TX_PWR NUMBER(6, 2) NULL,
   TRX_NUM2 NUMBER(10, 0) NULL,
   TX_PWR2 NUMBER(6, 2) NULL,
   TX_SET_PWR NUMBER(6, 2) NULL,
   TRX_OVR_NUM NUMBER(10, 0) NULL,
   TX_OVR_SET_PWR NUMBER(6, 2) NULL,
   HAS_FLT CHAR(4) NULL,
   HAS_LNA CHAR(4) NULL,
   HAS_BUSTER CHAR(4) NULL,
   CONF CHAR(4) NULL,
   IS_HR CHAR(4) NULL,
   CAP_GPRS CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   BYHAND CHAR(4) NULL,
   LAC NUMBER(10, 0) NULL,
   RAC NUMBER(10, 0) NULL,
   CELLNAME NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   NCC NUMBER(5, 0) NULL,
   BCC NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT PK_SECTORSCP UNIQUE (ID_SECT);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_BAND_SECTOCP CHECK (band IN (800 ,900 ,1800 ,2000 ));
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_CON_ABIS_SECTOCP CHECK ((con_abis IS NULL ) OR (con_abis IN ('1' ,'2' ,'3' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_DDK_SECTOCP CHECK ((ddk IS NULL ) OR (ddk IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_HAS_FLT_SECTOCP CHECK ((has_flt IS NULL ) OR (has_flt IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_HAS_LNA_SECTOCP CHECK ((has_lna IS NULL ) OR (has_lna IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_HAS_BUST_SECTOCP CHECK ((has_buster IS NULL ) OR (has_buster IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_CONF_SECTOCP CHECK ((conf IS NULL ) OR (conf IN ('1' ,'2' ,'3' ,'4' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_IS_HR_SECTOCP CHECK ((is_hr IS NULL ) OR (is_hr IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_CAP_GPRS_SECTOCP CHECK ((cap_gprs IS NULL ) OR (cap_gprs IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_BYHAND_SECTOCP CHECK (byhand IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT CKC_DATASOUR_SECTOCP CHECK (datasource IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005373 CHECK ("ID_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005374 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005375 CHECK ("NAME_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005376 CHECK ("BAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005377 CHECK ("NUM_SECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005378 CHECK ("BYHAND" IS NOT NULL);
 
ALTER TABLE INFORMIX.SECTORS_COPY
  ADD CONSTRAINT SYS_C005379 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.SEGMENTCONTENTS
  (TRAILSEGMENTID NUMBER(10, 0) NULL,
   PORTID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SEGMENTCONTENTS
  ADD CONSTRAINT PK_SEGMENTCONTENTS UNIQUE (TRAILSEGMENTID, PORTID);
 
ALTER TABLE INFORMIX.SEGMENTCONTENTS
  ADD CONSTRAINT SYS_C004567 CHECK ("TRAILSEGMENTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEGMENTCONTENTS
  ADD CONSTRAINT SYS_C004568 CHECK ("PORTID" IS NOT NULL);

CREATE TABLE INFORMIX.SEGRENTDOCUMENT
  (RENTDOCUMENT NUMBER(10, 0) NULL,
   DOCUMENTNAME CHAR(1000) NULL,
   DOCUMENTIMAGE CHAR(1000) NULL,
   COMPANY_ID1 NUMBER(10, 0) NULL,
   COMPANY_ID2 NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SEGRENTDOCUMENT
  ADD CONSTRAINT PK_SEGRENTDOCUMENT UNIQUE (RENTDOCUMENT);
 
ALTER TABLE INFORMIX.SEGRENTDOCUMENT
  ADD CONSTRAINT SYS_C004188 CHECK ("RENTDOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.SEQUENCES
  (ID CHAR(200) NULL,
   VALUE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SEQUENCES
  ADD CONSTRAINT PK_SEQUENCES UNIQUE (ID);
 
ALTER TABLE INFORMIX.SEQUENCES
  ADD CONSTRAINT SYS_C004048 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SEQUENCES
  ADD CONSTRAINT SYS_C004049 CHECK ("VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.SEQUENCES_LOG
  (ID CHAR(200) NULL,
   LOCTIME DATE NULL);

CREATE TABLE INFORMIX.SERIALSCHANGE
  (RECORDID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   OLDSERIAL CHAR(80) NULL,
   NEWSERIAL CHAR(80) NULL);

ALTER TABLE INFORMIX.SERIALSCHANGE
  ADD CONSTRAINT PK_SERIALSCHANGE UNIQUE (RECORDID);
 
ALTER TABLE INFORMIX.SERIALSCHANGE
  ADD CONSTRAINT SYS_C005177 CHECK ("RECORDID" IS NOT NULL);

CREATE TABLE INFORMIX.SERVICEPLATFORMS
  (EQUIPMENT NUMBER(10, 0) NULL,
   SERVTYPE NUMBER(10, 0) NULL,
   CAPACITYPLAN NUMBER(15, 3) NULL,
   CAPACITYUSED NUMBER(15, 3) NULL,
   CAPACITYUNIT CHAR(80) NULL,
   HAVEPROJECT CHAR(4) NULL,
   HAVEPERMISSION CHAR(4) NULL);

ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT PK_SERVICEPLATFORM UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT CKC_HAVEPROJ_SERVI CHECK (haveproject IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT CKC_HAVEPERM_SERVI CHECK (havepermission IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT CKC_SERVTYPE_SERVI CHECK ((servtype IS NULL ) OR (servtype IN (1 ,2 ,3 ,4 ,5 ,6 )) );
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT SYS_C005315 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT SYS_C005316 CHECK ("HAVEPROJECT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SERVICEPLATFORMS
  ADD CONSTRAINT SYS_C005317 CHECK ("HAVEPERMISSION" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCFILES
  (SITEDOCFILE NUMBER(10, 0) NULL,
   SITEDOC NUMBER(10, 0) NULL,
   SITEDOCFILEDATE DATE NULL,
   SITEDOCFILENAME CHAR(320) NULL,
   SITEDOCFILEBODY BLOB NULL,
   NOTE VARCHAR2(1020) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_SIZE NUMBER(10, 0) NULL,
   FILE_MODIFIED DATE NULL,
   FILE_CREATED DATE NULL);

ALTER TABLE INFORMIX.SITEDOCFILES
  ADD CONSTRAINT PK_SITEDOCFILES UNIQUE (SITEDOCFILE);
 
ALTER TABLE INFORMIX.SITEDOCFILES
  ADD CONSTRAINT SYS_C005025 CHECK ("SITEDOCFILE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCFILES
  ADD CONSTRAINT SYS_C005026 CHECK ("SITEDOC" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCS
  (SITEDOC NUMBER(10, 0) NULL,
   SITEDOCTYPE NUMBER(10, 0) NULL,
   BLANKNUMBER CHAR(160) NULL,
   BLANKDATE DATE NULL,
   EXPIREDATE DATE NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   PROJECTACTION NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SITEDOCS
  ADD CONSTRAINT PK_SITEDOCS UNIQUE (SITEDOC);
 
ALTER TABLE INFORMIX.SITEDOCS
  ADD CONSTRAINT SYS_C004634 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS
  ADD CONSTRAINT SYS_C004635 CHECK ("SITEDOCTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS
  ADD CONSTRAINT SYS_C004636 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCS2HOPS
  (SITEDOC NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SITEDOCS2HOPS
  ADD CONSTRAINT PK_SITEDOCS2HOPS UNIQUE (SITEDOC, HOPSID);
 
ALTER TABLE INFORMIX.SITEDOCS2HOPS
  ADD CONSTRAINT SYS_C004477 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS2HOPS
  ADD CONSTRAINT SYS_C004478 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCS2REGIONS
  (SITEDOC NUMBER(10, 0) NULL,
   REGION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SITEDOCS2REGIONS
  ADD CONSTRAINT PK_SITEDOCS2REGION UNIQUE (SITEDOC, REGION);
 
ALTER TABLE INFORMIX.SITEDOCS2REGIONS
  ADD CONSTRAINT SYS_C004685 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS2REGIONS
  ADD CONSTRAINT SYS_C004686 CHECK ("REGION" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCS2RESOURCES
  (SITEDOC NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   FREQRANGE CHAR(80) NULL);

ALTER TABLE INFORMIX.SITEDOCS2RESOURCES
  ADD CONSTRAINT PK_SITEDOCS2RESOUR UNIQUE (SITEDOC, RESOURCE_);
 
ALTER TABLE INFORMIX.SITEDOCS2RESOURCES
  ADD CONSTRAINT SYS_C004687 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS2RESOURCES
  ADD CONSTRAINT SYS_C004688 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCS2SPLACE
  (SITEDOC NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SITEDOCS2SPLACE
  ADD CONSTRAINT PK_SITEDOCS2SPLACE UNIQUE (SITEDOC, STORAGEPLACE);
 
ALTER TABLE INFORMIX.SITEDOCS2SPLACE
  ADD CONSTRAINT SYS_C004637 CHECK ("SITEDOC" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCS2SPLACE
  ADD CONSTRAINT SYS_C004638 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.SITEDOCTYPES
  (SITEDOCTYPE NUMBER(10, 0) NULL,
   SITEDOCTYPENAME CHAR(320) NULL,
   SITEDOCTYPETXT BLOB NULL);

ALTER TABLE INFORMIX.SITEDOCTYPES
  ADD CONSTRAINT PK_SITEDOCTYPES UNIQUE (SITEDOCTYPE);
 
ALTER TABLE INFORMIX.SITEDOCTYPES
  ADD CONSTRAINT SYS_C005099 CHECK ("SITEDOCTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SITEDOCTYPES
  ADD CONSTRAINT SYS_C005100 CHECK ("SITEDOCTYPENAME" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  (EQUIPMENT NUMBER(10, 0) NULL,
   PERMIT_TYPE NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   PERMITID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LON NUMBER(10, 6) NULL,
   LAT NUMBER(10, 6) NULL,
   MSCCAPACITY NUMBER(10, 0) NULL,
   STATUS NUMBER(10, 0) NULL,
   FILENAME CHAR(1020) NULL,
   HOPSID NUMBER(10, 0) NULL,
   LANLENGTH NUMBER(15, 0) NULL);

ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT PK_SMSS_ACTUAL_PER UNIQUE (EQUIPMENT, PERMIT_TYPE, FTYPE, HOPSID);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT CKC_STATUS_SMSS_A CHECK (status IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005470 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005471 CHECK ("PERMIT_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005472 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005473 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005474 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005475 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_ACTUAL_PERMITS
  ADD CONSTRAINT SYS_C005476 CHECK ("HOPSID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_BSC_PERMITS
  (ID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(256) NULL,
   EQUIPMENTID NUMBER(10, 0) NULL,
   ON_ NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATA DATE NULL,
   AKT VARCHAR2(256) NULL,
   AKT_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   ETYPE VARCHAR2(256) NULL,
   COUNT NUMBER(10, 0) NULL,
   ON2 NUMBER(10, 0) NULL,
   FILE_PATH VARCHAR2(1020) NULL,
   SAIT_NUMBER VARCHAR2(256) NULL,
   SAITID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_BSC_PERMITS
  ADD CONSTRAINT PK_SMSS_BSC_PERMIT UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_BSC_PERMITS
  ADD CONSTRAINT SYS_C005263 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_EQUIP2PERMIT
  (PERMITID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT
  ADD CONSTRAINT PK_SMSS_EQUIP2PERM UNIQUE (PERMITID, EQUIPMENT);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT
  ADD CONSTRAINT SYS_C005460 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT
  ADD CONSTRAINT SYS_C005461 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  (PERMITID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   MSCCAPACITY NUMBER(10, 0) NULL,
   NOTES VARCHAR2(1020) NULL,
   DATASOURCE NUMBER(10, 0) NULL,
   LANLENGTH NUMBER(15, 0) NULL);

ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT PK_SMSS_EQUIP2PERM_SS UNIQUE (PERMITID, EQUIPMENT, FTYPE);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT CKC_DATASOUR_SMS2P CHECK (datasource IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT CKC_FTYPE_SMSS_PERMIT_SS CHECK (ftype IN (900 ,1800 ,0 ));
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT SYS_C005279 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT SYS_C005280 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT SYS_C005281 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_EQUIP2PERMIT_SS
  ADD CONSTRAINT SYS_C005282 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_GPRS_PERMITS
  (ID NUMBER(10, 0) NULL,
   INSTALLED_CAPACITY NUMBER(10, 0) NULL,
   PROJECT_ON NUMBER(10, 0) NULL,
   PERMITTED_CAPACITY NUMBER(10, 0) NULL,
   EQUIPMENTID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATA DATE NULL,
   AKT VARCHAR2(256) NULL,
   AKT_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   ETYPE VARCHAR2(256) NULL,
   COUNT NUMBER(10, 0) NULL,
   ON_ NUMBER(10, 0) NULL,
   FILE_PATH VARCHAR2(1020) NULL,
   SAIT_NUMBER VARCHAR2(256) NULL,
   SAITID NUMBER(10, 0) NULL,
   OBJ_NAME VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.SMSS_GPRS_PERMITS
  ADD CONSTRAINT PK_SMSS_GPRS_PERMI UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_GPRS_PERMITS
  ADD CONSTRAINT SYS_C005264 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_GSM_PERMITS
  (ID NUMBER(10, 0) NULL,
   POSITIONID NUMBER(10, 0) NULL,
   BS_ON NUMBER(10, 0) NULL,
   BS_DECLARATED NUMBER(10, 0) NULL,
   BS_DECISION_NUMBER VARCHAR2(256) NULL,
   BS_LICENCE_NUMBER VARCHAR2(256) NULL,
   CREATED DATE NULL,
   UPDATED DATE NULL,
   POSITION_NAME VARCHAR2(256) NULL,
   REGION_CODE NUMBER(10, 0) NULL,
   COUNT_LAST_UPDATE NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   FREQUENCY NUMBER(10, 0) NULL,
   NRI_POS_NAME VARCHAR2(256) NULL,
   NOT_USED NUMBER(10, 0) NULL,
   REGION_NAME VARCHAR2(1020) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_GSM_PERMITS
  ADD CONSTRAINT PK_SMSS_GSM_PERMIT UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_GSM_PERMITS
  ADD CONSTRAINT SYS_C005464 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_LABEL_TO_NRI_FILIAL
  (IDFILIAL NUMBER(10, 0) NULL,
   FILNAME VARCHAR2(1020) NULL,
   COMENT_FILENAME VARCHAR2(1020) NULL,
   REGNAME VARCHAR2(1020) NULL,
   NREG_IN_BD NUMBER(10, 0) NULL,
   N_SITE_NRI NUMBER(10, 0) NULL,
   I NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.SMSS_MSC_PERMITS
  (ID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(256) NULL,
   INSTALLED_CAPACITY NUMBER(10, 0) NULL,
   PLANNED_CAPACITY NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   PERMITTED_CAPACITY NUMBER(10, 0) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATA DATE NULL,
   AKT VARCHAR2(256) NULL,
   AKT_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   ETYPE VARCHAR2(256) NULL,
   COUNT NUMBER(10, 0) NULL,
   ON_ NUMBER(10, 0) NULL,
   FILE_PATH VARCHAR2(1020) NULL,
   SAIT_NUMBER VARCHAR2(256) NULL,
   SAITID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_MSC_PERMITS
  ADD CONSTRAINT PK_SMSS_MSC_PERMIT UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_MSC_PERMITS
  ADD CONSTRAINT SYS_C005265 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS
  (ID NUMBER(10, 0) NULL,
   PERMIT_TYPE NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LON NUMBER(10, 6) NULL,
   LAT NUMBER(10, 6) NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT PK_SMSS_PERMITS UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT CKC_PERMIT_T_SMSS_ CHECK (permit_type IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT CKC_FTYPE_SMSS_ CHECK (ftype IN (900 ,1800 ,0 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT CKC_ARCHIVED_SMSS_ CHECK (archived IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT SYS_C005465 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT SYS_C005466 CHECK ("PERMIT_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT SYS_C005467 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT SYS_C005468 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS
  ADD CONSTRAINT SYS_C005469 CHECK ("ARCHIVED" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_MSC_BSC
  (IDREC NUMBER(10, 0) NULL,
   FILIAL NUMBER(10, 0) NULL,
   GSM VARCHAR2(80) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   TYPEREC VARCHAR2(320) NULL,
   MODELEQP VARCHAR2(320) NULL,
   QTYEQP NUMBER(10, 0) NULL,
   CAPACITY NUMBER(10, 0) NULL,
   STATUS VARCHAR2(40) NULL,
   ACT_NUM VARCHAR2(200) NULL,
   ACT_DATE DATE NULL,
   SS_NUM VARCHAR2(200) NULL,
   SS_DATE DATE NULL,
   SS_EXPIRE DATE NULL,
   SS_FILE VARCHAR2(1020) NULL,
   FILE_ NUMBER(10, 0) NULL,
   POSITION NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   TYPEEQUIPMENT CHAR(4) NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_MSC_BSC
  ADD CONSTRAINT SYS_C005267 CHECK ("IDREC" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_RES
  (PERMITID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LON NUMBER(10, 6) NULL,
   LAT NUMBER(10, 6) NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   FILEEXIST NUMBER(10, 0) NULL,
   UPLOADFILENAME VARCHAR2(1020) NULL,
   NOTES VARCHAR2(1020) NULL,
   HOPSID NUMBER(10, 0) NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT PK_SMSS_PERMITS_RE UNIQUE (PERMITID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT CKC_FTYPE_SMSS_RES CHECK (ftype IN (900 ,1800 ,0 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT CKC_DATASOUR_SMSSR CHECK (datasource IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005273 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005274 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005275 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005276 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005277 CHECK ("ARCHIVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES
  ADD CONSTRAINT SYS_C005278 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  (PERMITID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   FTYPE NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LON NUMBER(22) NULL,
   LAT NUMBER(22) NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   FILEEXIST NUMBER(10, 0) NULL,
   UPLOADFILENAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT U737_3171 UNIQUE (PERMITID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT SYS_C005983 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT SYS_C005984 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT SYS_C005985 CHECK ("FTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT SYS_C005986 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_RES_BACK
  ADD CONSTRAINT SYS_C005987 CHECK ("ARCHIVED" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_SS
  (PERMITID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL,
   STATUS NUMBER(10, 0) NULL,
   FILEEXIST NUMBER(10, 0) NULL,
   UPLOADFILENAME VARCHAR2(1020) NULL,
   NOTES VARCHAR2(1020) NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT PK_SMSS_PERMITS_SS UNIQUE (PERMITID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT CKC_STATUS_SMSS_SS CHECK (status IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT CKC_DATASOUR_SMSSS CHECK (datasource IN (0 ,1 ));
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT SYS_C005268 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT SYS_C005269 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT SYS_C005270 CHECK ("ARCHIVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT SYS_C005271 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS
  ADD CONSTRAINT SYS_C005272 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  (PERMITID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL,
   STATUS NUMBER(10, 0) NULL,
   FILEEXIST NUMBER(10, 0) NULL,
   UPLOADFILENAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  ADD CONSTRAINT U736_3166 UNIQUE (PERMITID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  ADD CONSTRAINT SYS_C005979 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  ADD CONSTRAINT SYS_C005980 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  ADD CONSTRAINT SYS_C005981 CHECK ("ARCHIVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS_BACK
  ADD CONSTRAINT SYS_C005982 CHECK ("STATUS" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_PERMITS_SS1
  (PERMITID NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(512) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATE DATE NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   FILE_ NUMBER(10, 0) NULL,
   FILENAME VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.SMSS_PERMITS_SS1
  ADD CONSTRAINT PK_SMSS_PERMIT1 UNIQUE (PERMITID);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS1
  ADD CONSTRAINT SYS_C005651 CHECK ("PERMITID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS1
  ADD CONSTRAINT SYS_C005652 CHECK ("PERMIT_NUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.SMSS_PERMITS_SS1
  ADD CONSTRAINT SYS_C005653 CHECK ("ARCHIVED" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_RRL_PERMITS
  (ID NUMBER(10, 0) NULL,
   POSITIONID1 NUMBER(10, 0) NULL,
   SITENUMBER1 VARCHAR2(256) NULL,
   POSITIONID2 NUMBER(10, 0) NULL,
   SITENUMBER2 VARCHAR2(256) NULL,
   BS_ON NUMBER(10, 0) NULL,
   BS_DECLARATED NUMBER(10, 0) NULL,
   BS_DECISION_NUMBER VARCHAR2(256) NULL,
   BS_LICENCE_NUMBER VARCHAR2(256) NULL,
   CREATED DATE NULL,
   UPDATED DATE NULL,
   POSITION_NAME VARCHAR2(256) NULL,
   REGION_CODE NUMBER(10, 0) NULL,
   COUNT_LAST_UPDATE NUMBER(10, 0) NULL,
   TYPE_ NUMBER(10, 0) NULL,
   FREQUENCY NUMBER(10, 0) NULL,
   NRI_POS_NAME VARCHAR2(256) NULL,
   NOT_USED NUMBER(10, 0) NULL,
   CITY VARCHAR2(512) NULL,
   INTERVAL_ VARCHAR2(256) NULL,
   ADDRESS1 VARCHAR2(1020) NULL,
   ADDRESS2 VARCHAR2(1020) NULL,
   RANGE_ VARCHAR2(256) NULL,
   EQUIP_NAME VARCHAR2(1020) NULL,
   ANNUL NUMBER(10, 0) NULL,
   AIR NUMBER(10, 0) NULL,
   REQUEST VARCHAR2(1020) NULL,
   WAS_ERROR NUMBER(10, 0) NULL,
   FILIALID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_RRL_PERMITS
  ADD CONSTRAINT PK_SMSS_RRL_PERMIT UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_RRL_PERMITS
  ADD CONSTRAINT SYS_C005484 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_RRL_PERMITS_RES_SS
  (IDREC NUMBER(10, 0) NULL,
   FILIAL NUMBER(10, 0) NULL,
   GSMA VARCHAR2(80) NULL,
   ADDRESSA VARCHAR2(1020) NULL,
   VIMPELCOM VARCHAR2(320) NULL,
   MODELEQP VARCHAR2(320) NULL,
   QTYEQP NUMBER(10, 0) NULL,
   GSMB VARCHAR2(80) NULL,
   ADDRESSB VARCHAR2(1020) NULL,
   STATUS VARCHAR2(40) NULL,
   ACT_NUM VARCHAR2(200) NULL,
   ACT_DATE DATE NULL,
   SS_NUM VARCHAR2(200) NULL,
   SS_DATE DATE NULL,
   SS_EXPIRE DATE NULL,
   SS_FILE VARCHAR2(1020) NULL,
   RES_NUM VARCHAR2(200) NULL,
   RES_DATE DATE NULL,
   RES_EXPIRE DATE NULL,
   FILE_ NUMBER(10, 0) NULL,
   POSITIONA NUMBER(10, 0) NULL,
   EQUIPMENTA NUMBER(10, 0) NULL,
   POSITIONB NUMBER(10, 0) NULL,
   EQUIPMENTB NUMBER(10, 0) NULL,
   TYPEEQUIPMENT CHAR(4) NULL);
 
ALTER TABLE INFORMIX.SMSS_RRL_PERMITS_RES_SS
  ADD CONSTRAINT SYS_C005483 CHECK ("IDREC" IS NOT NULL);

CREATE TABLE INFORMIX.SMSS_SMS_PERMITS
  (ID NUMBER(10, 0) NULL,
   EQUIPMENTID NUMBER(10, 0) NULL,
   PROJECT_ON NUMBER(10, 0) NULL,
   ON_ NUMBER(10, 0) NULL,
   PERMIT_NUMBER VARCHAR2(256) NULL,
   REGIONID NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL,
   PERMIT_DATE DATE NULL,
   EXPIRE_DATA DATE NULL,
   AKT VARCHAR2(256) NULL,
   AKT_DATE DATE NULL,
   ADDRESS VARCHAR2(1020) NULL,
   ETYPE VARCHAR2(256) NULL,
   COUNT NUMBER(10, 0) NULL,
   ON2 NUMBER(10, 0) NULL,
   FILE_PATH VARCHAR2(1020) NULL,
   SAIT_NUMBER VARCHAR2(256) NULL,
   SAITID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SMSS_SMS_PERMITS
  ADD CONSTRAINT PK_SMSS_SMS_PERMIT UNIQUE (ID);
 
ALTER TABLE INFORMIX.SMSS_SMS_PERMITS
  ADD CONSTRAINT SYS_C005266 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_CONFIG
  (NAME VARCHAR2(80) NULL,
   VALUE VARCHAR2(512) NULL);

CREATE TABLE INFORMIX.SSD_T1
  (COL1 NUMBER(10, 0) NULL,
   COL2 NUMBER(10, 0) NULL,
   COL3 CHAR(4) NULL,
   COL4 NUMBER(10, 0) NULL,
   COL5 NUMBER(10, 0) NULL,
   COL6 NUMBER(10, 0) NULL,
   COL7 VARCHAR2(512) NULL,
   COL8 VARCHAR2(512) NULL,
   COL9 NUMBER(5, 0) NULL,
   COL10 NUMBER(5, 0) NULL,
   COL11 NUMBER(5, 0) NULL,
   COL12 VARCHAR2(512) NULL);

CREATE TABLE INFORMIX.SSD_T2
  (COL1 NUMBER(10, 0) NULL,
   COL2 NUMBER(10, 0) NULL,
   COL3 NUMBER(5, 0) NULL);

CREATE TABLE INFORMIX.SSD_T3
  (COL1 NUMBER(10, 0) NULL,
   COL2 VARCHAR2(512) NULL,
   COL3 VARCHAR2(512) NULL,
   COL4 CHAR(4) NULL,
   COL9 CLOB NULL,
   COL8 VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.SSD_T3
  ADD CONSTRAINT U504_2114 UNIQUE (COL1);
 
ALTER TABLE INFORMIX.SSD_T3
  ADD CONSTRAINT SYS_C005138 CHECK ("COL1" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_T4
  (COL1 NUMBER(10, 0) NULL,
   COL2 VARCHAR2(512) NULL,
   COL3 VARCHAR2(512) NULL,
   COL4 CHAR(4) NULL,
   COL5 NUMBER(5, 0) NULL);

ALTER TABLE INFORMIX.SSD_T4
  ADD CONSTRAINT U505_2116 UNIQUE (COL1, COL2);
 
ALTER TABLE INFORMIX.SSD_T4
  ADD CONSTRAINT SYS_C005165 CHECK ("COL1" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_T5
  (COL1 NUMBER(10, 0) NULL,
   COL2 NUMBER(10, 0) NULL,
   COL3 VARCHAR2(512) NULL,
   COL4 CHAR(4) NULL,
   COL5 CHAR(4) NULL,
   COL6 CLOB NULL,
   COL8 VARCHAR2(1020) NULL,
   COL7 NUMBER(5, 0) NULL);

CREATE TABLE INFORMIX.SSD_T6
  (COL1 NUMBER(10, 0) NULL,
   COL2 NUMBER(10, 0) NULL,
   COL3 VARCHAR2(512) NULL,
   COL4 VARCHAR2(512) NULL,
   COL5 VARCHAR2(512) NULL,
   COL6 VARCHAR2(512) NULL,
   COL7 VARCHAR2(512) NULL);
 
ALTER TABLE INFORMIX.SSD_T6
  ADD CONSTRAINT SYS_C005167 CHECK ("COL1" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_T7
  (COL1 NUMBER(10, 0) NULL,
   COL2 NUMBER(10, 0) NULL,
   COL3 NUMBER(10, 0) NULL,
   COL4 VARCHAR2(512) NULL,
   COL5 VARCHAR2(512) NULL,
   COL6 VARCHAR2(512) NULL,
   COL7 VARCHAR2(512) NULL,
   COL8 VARCHAR2(512) NULL,
   COL9 VARCHAR2(512) NULL);
 
ALTER TABLE INFORMIX.SSD_T7
  ADD CONSTRAINT SYS_C005166 CHECK ("COL1" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_VCOBJECTS
  (VC_OBJID NUMBER(10, 0) NULL,
   OBJ_NAME VARCHAR2(512) NULL,
   OBJ_OWNER VARCHAR2(512) NULL,
   OBJ_TYPE CHAR(4) NULL,
   DATABASE VARCHAR2(512) NULL,
   PARM_LIST CLOB NULL,
   STATUS NUMBER(10, 0) NULL,
   LOCKED_BY VARCHAR2(512) NULL,
   LOCKED_WHEN DATE NULL,
   LAST_REVISION_NO NUMBER(10, 0) NULL,
   REVISION_COUNT NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.SSD_VCOBJECTS
  ADD CONSTRAINT SYS_C005168 CHECK ("VC_OBJID" IS NOT NULL);

CREATE TABLE INFORMIX.SSD_VCVERSIONS
  (REV_ID NUMBER(10, 0) NULL,
   VC_OBJID NUMBER(10, 0) NULL,
   REVISION_NO NUMBER(10, 0) NULL,
   PROJECT_VER_NO VARCHAR2(80) NULL,
   REVISION_COMMENT VARCHAR2(1020) NULL,
   CREATED_WHEN DATE NULL,
   CREATED_BY VARCHAR2(512) NULL,
   BY_OPERATION VARCHAR2(40) NULL,
   LINE CLOB NULL);
 
ALTER TABLE INFORMIX.SSD_VCVERSIONS
  ADD CONSTRAINT SYS_C005169 CHECK ("REV_ID" IS NOT NULL);

CREATE TABLE INFORMIX.STORAGECARDS
  (STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   DATEOPENED DATE NULL,
   OWNER NUMBER(10, 0) NULL,
   POLICY CHAR(4) NULL,
   CLOSED CHAR(4) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   BOXED CHAR(4) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   BROKEN CHAR(4) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   DATECLOSED DATE NULL,
   I13NDATE DATE NULL,
   SERIALNUMBER CHAR(80) NULL,
   PARTY CHAR(80) NULL,
   QTY_BROKEN NUMBER(15, 3) NULL,
   NOTES VARCHAR2(1020) NULL,
   CONFIGURATION CHAR(320) NULL,
   PLACE CHAR(160) NULL,
   INVENTSERIAL CHAR(80) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   ISFICTSERIAL CHAR(4) NULL,
   ISAPPROVED CHAR(4) NULL,
   LOCALSERIAL CHAR(80) NULL);

ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT PK_STORAGECARDS UNIQUE (STORAGECARD);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_BOXED_STORA CHECK ((boxed IS NULL ) OR (boxed IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_BROKEN_STORA CHECK ((broken IS NULL ) OR (broken IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_ISFICTSE_CRD CHECK (isfictserial IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_ISAPPROV_STORC CHECK (isapproved IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_POLICY_STORA CHECK (policy IN ('S' ,'P' ,'B' ));
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT CKC_CLOSED_STORA CHECK (closed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003482 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003483 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003484 CHECK ("DATEOPENED" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003485 CHECK ("OWNER" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003486 CHECK ("POLICY" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003487 CHECK ("CLOSED" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003488 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003489 CHECK ("PRICE" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003490 CHECK ("ISFICTSERIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS
  ADD CONSTRAINT SYS_C003491 CHECK ("ISAPPROVED" IS NOT NULL);

CREATE TABLE INFORMIX.STORAGECARDS_OLD
  (STORAGECARD NUMBER(10, 0) NULL,
   POLICY CHAR(4) NULL,
   QTY NUMBER(15, 3) NULL,
   SERIALNUMBER CHAR(80) NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS_OLD
  ADD CONSTRAINT SYS_C005492 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGECARDS_OLD
  ADD CONSTRAINT SYS_C005493 CHECK ("POLICY" IS NOT NULL);

CREATE TABLE INFORMIX.STORAGEPLACEFORDELETE
  (STORAGEPLACE NUMBER(10, 0) NULL,
   FLAGDEL CHAR(4) NULL);

CREATE TABLE INFORMIX.STORAGEPLACES
  (STORAGEPLACE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   DIVISION NUMBER(10, 0) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   CLOSEDATE DATE NULL,
   TYPE_ CHAR(4) NULL,
   OPERATOR_ NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   ACTIVESTATUS CHAR(4) NULL,
   WHENDELETE DATE NULL,
   DATASOURCE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT PK_STORAGEPLACES UNIQUE (STORAGEPLACE);
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT CKC_TYPE_STORA CHECK (TYPE_ IN ('P' ,'S' ,'E' ,'X' ,'B' ,'C' ,'O' ,'W' ,'T' ,'R' ,'L' ,'A' ,'M' ,'D' ));
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT CKC_ACTIVEST_STORA CHECK (activestatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT CKC_DATASOUR_STORA CHECK (datasource IN (0 ,1 ));
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT SYS_C004005 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT SYS_C004006 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT SYS_C004007 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT SYS_C004008 CHECK ("ACTIVESTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGEPLACES
  ADD CONSTRAINT SYS_C004009 CHECK ("DATASOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.STORAGES
  (STORAGEPLACE NUMBER(10, 0) NULL,
   PSTNPHONE CHAR(80) NULL,
   INTERNALPHONE CHAR(80) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.STORAGES
  ADD CONSTRAINT PK_STORAGES UNIQUE (STORAGEPLACE);
 
ALTER TABLE INFORMIX.STORAGES
  ADD CONSTRAINT SYS_C004199 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGES
  ADD CONSTRAINT SYS_C004200 CHECK ("REGIONID" IS NOT NULL);

CREATE TABLE INFORMIX.STORAGETRACKS
  (TRACKID NUMBER(10, 0) NULL,
   OPERATION_TYPE NUMBER(10, 0) NULL,
   PARENT_TRACKID NUMBER(10, 0) NULL,
   CARDID NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL,
   DOCPOSITION NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   PARENTCARD NUMBER(10, 0) NULL,
   OWNER NUMBER(10, 0) NULL,
   BROKEN CHAR(4) NULL,
   BOXED CHAR(4) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   SERIAL CHAR(80) NULL,
   PARTY CHAR(80) NULL,
   QTY NUMBER(15, 3) NULL,
   PRICE NUMBER(15, 2) NULL,
   NOTES CHAR(1020) NULL,
   CONFIGURATION CHAR(320) NULL,
   PLACE CHAR(160) NULL,
   INVENTSERIAL CHAR(80) NULL,
   OLD_DOCUMENT NUMBER(10, 0) NULL,
   OLD_RESOURCE NUMBER(10, 0) NULL,
   OLD_SERIAL CHAR(80) NULL,
   OLD_PARTY CHAR(80) NULL,
   OLD_STORAGEPLACE NUMBER(10, 0) NULL,
   OLD_OWNER NUMBER(10, 0) NULL,
   OLD_BROKEN CHAR(4) NULL,
   OLD_BOXED CHAR(4) NULL,
   OLD_CLOSED CHAR(4) NULL,
   OLD_QTY NUMBER(15, 3) NULL,
   OLD_QTYBROKEN NUMBER(15, 3) NULL,
   OLD_PRICE NUMBER(15, 2) NULL,
   OLD_NOTES CHAR(1020) NULL,
   OLD_CONFIGURATION CHAR(320) NULL,
   OLD_PLACE CHAR(160) NULL,
   OLD_INVENTSERIAL CHAR(80) NULL,
   ISAPPROVED CHAR(4) NULL,
   OLD_ISAPPROVED CHAR(4) NULL,
   LOCALSERIAL CHAR(80) NULL,
   OLD_LOCALSERIAL CHAR(80) NULL);

ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT PK_STORAGETRACKS UNIQUE (TRACKID);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT CKC_OLD_ISAP_STORA CHECK (old_isapproved IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT CKC_OPERATIO_STORA CHECK (operation_type IN (1 ,2 ,3 ,4 ));
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT CKC_BROKEN_STTRK CHECK (broken IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT CKC_BOXED_STTRK CHECK (boxed IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT CKC_ISAPPROV_STORA CHECK (isapproved IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004752 CHECK ("TRACKID" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004753 CHECK ("OPERATION_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004754 CHECK ("DOCUMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004755 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004756 CHECK ("BROKEN" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004757 CHECK ("BOXED" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004758 CHECK ("QTY" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004759 CHECK ("ISAPPROVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.STORAGETRACKS
  ADD CONSTRAINT SYS_C004760 CHECK ("OLD_ISAPPROVED" IS NOT NULL);

CREATE TABLE INFORMIX.STREETS
  (STREETID NUMBER(10, 0) NULL,
   ADMINREGIONID NUMBER(10, 0) NULL,
   STREETNAME VARCHAR2(1020) NULL,
   KLADRSTREET CHAR(68) NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT PK_STREETS UNIQUE (STREETID);
 
ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT CKC_RECORDST_STREE CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT SYS_C003672 CHECK ("STREETID" IS NOT NULL);
 
ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT SYS_C003673 CHECK ("ADMINREGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT SYS_C003674 CHECK ("STREETNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.STREETS
  ADD CONSTRAINT SYS_C003675 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.STREETTYPES
  (STRTYPEID NUMBER(10, 0) NULL,
   STRTYPENAME CHAR(120) NULL);

ALTER TABLE INFORMIX.STREETTYPES
  ADD CONSTRAINT PK_STREETTYPES UNIQUE (STRTYPEID);
 
ALTER TABLE INFORMIX.STREETTYPES
  ADD CONSTRAINT SYS_C005303 CHECK ("STRTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.STREETTYPES
  ADD CONSTRAINT SYS_C005304 CHECK ("STRTYPENAME" IS NOT NULL);

CREATE TABLE INFORMIX.SUPERREGIONS
  (SUPREGID NUMBER(10, 0) NULL,
   SUPREGNAME CHAR(320) NULL,
   SUPREGCODE NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   COUNTRY NUMBER(10, 0) NULL,
   TCRESISTANCE NUMBER(6, 0) NULL);

ALTER TABLE INFORMIX.SUPERREGIONS
  ADD CONSTRAINT PK_SUPERREGIONS UNIQUE (SUPREGID);
 
ALTER TABLE INFORMIX.SUPERREGIONS
  ADD CONSTRAINT SYS_C003854 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SUPERREGIONS
  ADD CONSTRAINT SYS_C003855 CHECK ("SUPREGNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.SUPERREGIONS
  ADD CONSTRAINT SYS_C003856 CHECK ("SUPREGCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SUPERREGIONS
  ADD CONSTRAINT SYS_C003857 CHECK ("COUNTRY" IS NOT NULL);

CREATE TABLE INFORMIX.SUPPD_INFO
  (NAME_INFO CHAR(160) NULL,
   BIN_INFO BLOB NULL);

ALTER TABLE INFORMIX.SUPPD_INFO
  ADD CONSTRAINT PK_SUPPD_INFO UNIQUE (NAME_INFO);
 
ALTER TABLE INFORMIX.SUPPD_INFO
  ADD CONSTRAINT SYS_C004890 CHECK ("NAME_INFO" IS NOT NULL);

CREATE TABLE INFORMIX.SUPPDINFO
  (BLOCKID NUMBER(10, 0) NULL,
   BLOCKNAME CHAR(320) NULL,
   BLOCKDATA BLOB NULL);

ALTER TABLE INFORMIX.SUPPDINFO
  ADD CONSTRAINT PK_SUPPDINFO UNIQUE (BLOCKID);
 
ALTER TABLE INFORMIX.SUPPDINFO
  ADD CONSTRAINT SYS_C004889 CHECK ("BLOCKID" IS NOT NULL);

CREATE TABLE INFORMIX.SUPPLYTYPES
  (SYPPLYTYPE NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.SUPPLYTYPES
  ADD CONSTRAINT PK_SUPPLYTYPES UNIQUE (SYPPLYTYPE);
 
ALTER TABLE INFORMIX.SUPPLYTYPES
  ADD CONSTRAINT SYS_C004137 CHECK ("SYPPLYTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SUPPLYTYPES
  ADD CONSTRAINT SYS_C004138 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.SURPLUSEACTS
  (DOCUMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.SURPLUSEACTS
  ADD CONSTRAINT PK_SURPLUSEACTS UNIQUE (DOCUMENT);
 
ALTER TABLE INFORMIX.SURPLUSEACTS
  ADD CONSTRAINT SYS_C004300 CHECK ("DOCUMENT" IS NOT NULL);

CREATE TABLE INFORMIX.SWITCHADDINFO
  (EQUIPMENT NUMBER(10, 0) NULL,
   ACT_DATE DATE NULL,
   LOAD_MAX_DAY CHAR(80) NULL,
   LOAD_MAX_HOUR_BSS CHAR(80) NULL,
   LOAD_MAX_HOUR_NSS CHAR(80) NULL,
   LOAD_MAX_HOUR_ALL CHAR(80) NULL,
   TRAF_ALL NUMBER(10, 0) NULL,
   TRAF_BSS_ALL NUMBER(10, 0) NULL,
   TRAF_NSS_ALL NUMBER(10, 0) NULL,
   TRAF_BSS_BSS NUMBER(10, 0) NULL,
   TRAF_NSS_NSS NUMBER(10, 0) NULL,
   ABON_QTY_BSS NUMBER(10, 0) NULL,
   ABON_ACT_BSS NUMBER(15, 2) NULL,
   TRYQTY_MOBILE_ALL NUMBER(10, 0) NULL,
   TRYQTY_TRANSIT_ALL NUMBER(10, 0) NULL,
   TRYQTY_SMS_ALL NUMBER(10, 0) NULL,
   LOAD_MOBILE NUMBER(10, 0) NULL,
   LOAD_TRANSIT NUMBER(10, 0) NULL,
   LOAD_SMS_PERCENT NUMBER(6, 2) NULL,
   LOAD_ALL_PERCENT NUMBER(6, 2) NULL,
   LOAD_EVENT_PERCENT NUMBER(6, 2) NULL,
   KOEFF_KN NUMBER(6, 2) NULL);

ALTER TABLE INFORMIX.SWITCHADDINFO
  ADD CONSTRAINT PK_SWITCHADDINFO UNIQUE (EQUIPMENT, ACT_DATE);
 
ALTER TABLE INFORMIX.SWITCHADDINFO
  ADD CONSTRAINT SYS_C004672 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHADDINFO
  ADD CONSTRAINT SYS_C004673 CHECK ("ACT_DATE" IS NOT NULL);

CREATE TABLE INFORMIX.SWITCHES
  (EQUIPMENT NUMBER(10, 0) NULL,
   TYPE_ CHAR(4) NULL,
   NUMBER_ NUMBER(10, 0) NULL,
   QTY_CONHLR NUMBER(10, 0) NULL,
   QTY_SHELL NUMBER(10, 0) NULL,
   MAX_VLR NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   QTY_TKGROUTE_NSS NUMBER(10, 0) NULL,
   E1_QTY_TOTAL NUMBER(10, 0) NULL,
   E1_USE_PERCENT NUMBER(6, 2) NULL,
   E1_BSS NUMBER(10, 0) NULL,
   E1_NSS NUMBER(10, 0) NULL,
   E1_HLR NUMBER(10, 0) NULL,
   SS7_BSS NUMBER(10, 0) NULL,
   SS7_NSS NUMBER(10, 0) NULL,
   SS7_HLRIN NUMBER(10, 0) NULL,
   MSCID NUMBER(10, 0) NULL,
   CAPACITYUSED NUMBER(10, 0) NULL,
   CAPACITYPLAN NUMBER(10, 0) NULL,
   EXPERTISEDATE DATE NULL,
   HAVEPROJECT CHAR(4) NULL);

ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT PK_SWITCHES UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT CKC_TYPE_SWITC CHECK (TYPE_ IN ('1' ,'2' ));
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT CKC_HAVEPROJ_SWITC CHECK (haveproject IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT SYS_C003892 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT SYS_C003893 CHECK ("TYPE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT SYS_C003894 CHECK ("NUMBER_" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHES
  ADD CONSTRAINT SYS_C003895 CHECK ("HAVEPROJECT" IS NOT NULL);

CREATE TABLE INFORMIX.SWITCHPARAMS
  (PARAMID NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL,
   ACT_DATE DATE NULL,
   PARAM_TYPE NUMBER(10, 0) NULL,
   PARAM_LEVEL NUMBER(10, 2) NULL,
   PARAM_VALUE NUMBER(10, 2) NULL);

ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT PK_SWITCHPARAMS UNIQUE (PARAMID);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT CKC_PARAMTYPES CHECK (param_type IN (1 ,2 ,3 ,4 ,5 ,6 ));
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004452 CHECK ("PARAMID" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004453 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004454 CHECK ("ACT_DATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004455 CHECK ("PARAM_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004456 CHECK ("PARAM_LEVEL" IS NOT NULL);
 
ALTER TABLE INFORMIX.SWITCHPARAMS
  ADD CONSTRAINT SYS_C004457 CHECK ("PARAM_VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.TARIFPLANS
  (IDTARIFPLAN NUMBER(10, 0) NULL,
   NAMETARIFPLAN VARCHAR2(1020) NULL,
   CODETARIFPLAN CHAR(36) NULL,
   EFFECTIVE_DATE DATE NULL,
   EXPIRATION_DATE DATE NULL,
   USEINNRI CHAR(4) NULL);

ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT PK_TARIFPLANS UNIQUE (IDTARIFPLAN);
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT CKC_USEINNRI_TARIF CHECK (useinnri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT SYS_C004792 CHECK ("IDTARIFPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT SYS_C004793 CHECK ("NAMETARIFPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT SYS_C004794 CHECK ("CODETARIFPLAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT SYS_C004795 CHECK ("EFFECTIVE_DATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TARIFPLANS
  ADD CONSTRAINT SYS_C004796 CHECK ("USEINNRI" IS NOT NULL);

CREATE TABLE INFORMIX.TASKS
  (TASK NUMBER(10, 0) NULL,
   KEY VARCHAR2(200) NULL,
   TASKNAME CHAR(1020) NULL,
   CONTEXT CHAR(400) NULL);

ALTER TABLE INFORMIX.TASKS
  ADD CONSTRAINT PK_TASKS UNIQUE (TASK);
 
ALTER TABLE INFORMIX.TASKS
  ADD CONSTRAINT SYS_C004120 CHECK ("TASK" IS NOT NULL);
 
ALTER TABLE INFORMIX.TASKS
  ADD CONSTRAINT SYS_C004121 CHECK ("KEY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TASKS
  ADD CONSTRAINT SYS_C004122 CHECK ("TASKNAME" IS NOT NULL);

CREATE TABLE INFORMIX.TB_ACTIVEFILES
  (OBJECTTYPEID NUMBER(10, 0) NULL,
   OBJECTID NUMBER(10, 0) NULL,
   TYPEID NUMBER(10, 0) NULL,
   FILEID NUMBER(10, 0) NULL,
   TYPE_ VARCHAR2(256) NULL);

ALTER TABLE INFORMIX.TB_ACTIVEFILES
  ADD CONSTRAINT PK_TB_ACTIVEFILES UNIQUE (OBJECTTYPEID, OBJECTID, TYPEID);
 
ALTER TABLE INFORMIX.TB_ACTIVEFILES
  ADD CONSTRAINT SYS_C005127 CHECK ("OBJECTTYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_ACTIVEFILES
  ADD CONSTRAINT SYS_C005128 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_ACTIVEFILES
  ADD CONSTRAINT SYS_C005129 CHECK ("TYPEID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_BSPRJ2CATALOG
  (PRJID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_BSPRJ2CATALOG
  ADD CONSTRAINT PK_TB_BSPRJ2CATALO UNIQUE (PRJID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_BSPRJ2CATALOG
  ADD CONSTRAINT SYS_C005387 CHECK ("PRJID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_BSPRJ2CATALOG
  ADD CONSTRAINT SYS_C005388 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_CATALOG
  (ID NUMBER(10, 0) NULL,
   PARENTID NUMBER(10, 0) NULL,
   NAME VARCHAR2(256) NULL,
   DESCR VARCHAR2(512) NULL,
   LEVEL_ NUMBER(10, 0) NULL,
   N1 NUMBER(10, 0) NULL,
   N2 NUMBER(10, 0) NULL,
   N3 NUMBER(10, 0) NULL,
   N4 NUMBER(10, 0) NULL,
   N5 NUMBER(10, 0) NULL,
   N6 NUMBER(10, 0) NULL,
   N7 NUMBER(10, 0) NULL,
   N8 NUMBER(10, 0) NULL,
   N9 NUMBER(10, 0) NULL,
   N10 NUMBER(10, 0) NULL,
   N11 NUMBER(10, 0) NULL,
   N12 NUMBER(10, 0) NULL,
   N13 NUMBER(10, 0) NULL,
   N14 NUMBER(10, 0) NULL,
   N15 NUMBER(10, 0) NULL,
   N16 NUMBER(10, 0) NULL,
   OBJECTNAME VARCHAR2(256) NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   CANDELETED NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_CATALOG
  ADD CONSTRAINT PK_TB_CATALOG UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_CATALOG
  ADD CONSTRAINT SYS_C005243 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_CATALOG2DOC
  (CATALOGID NUMBER(10, 0) NULL,
   DOCID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_CATALOG2DOC
  ADD CONSTRAINT PK_TB_CATALOG2DOC UNIQUE (CATALOGID, DOCID);
 
ALTER TABLE INFORMIX.TB_CATALOG2DOC
  ADD CONSTRAINT SYS_C005233 CHECK ("CATALOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_CATALOG2DOC
  ADD CONSTRAINT SYS_C005234 CHECK ("DOCID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_CATALOG2FILES
  (CATALOGID NUMBER(10, 0) NULL,
   FILEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_CATALOG2FILES
  ADD CONSTRAINT PK_TB_CATALOG2FILE UNIQUE (CATALOGID, FILEID);
 
ALTER TABLE INFORMIX.TB_CATALOG2FILES
  ADD CONSTRAINT SYS_C005235 CHECK ("CATALOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_CATALOG2FILES
  ADD CONSTRAINT SYS_C005236 CHECK ("FILEID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_COMPRJ2CATALOG
  (PRJID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_COMPRJ2CATALOG
  ADD CONSTRAINT PK_TB_COMPRJ2CATAL UNIQUE (PRJID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_COMPRJ2CATALOG
  ADD CONSTRAINT SYS_C005988 CHECK ("PRJID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_COMPRJ2CATALOG
  ADD CONSTRAINT SYS_C005989 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_DOCUMENTS
  (ID NUMBER(10, 0) NULL,
   TYPEID NUMBER(10, 0) NULL,
   DOC_NAME VARCHAR2(512) NULL,
   REG_DATE DATE NULL,
   REG_NUMBER VARCHAR2(256) NULL,
   DESCR VARCHAR2(512) NULL,
   ISDOC NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   ALIAS VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.TB_DOCUMENTS
  ADD CONSTRAINT PK_TB_DOCUMENTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_DOCUMENTS
  ADD CONSTRAINT SYS_C005226 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_DOCUMENTTYPES
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(256) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   ALIAS VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.TB_DOCUMENTTYPES
  ADD CONSTRAINT PK_DOCTYPE_420299 UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_DOCUMENTTYPES
  ADD CONSTRAINT SYS_C005222 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_EQUIP2CATALOG
  (EQUIPMENTID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_EQUIP2CATALOG
  ADD CONSTRAINT PK_TB_EQUIP2CATALO UNIQUE (EQUIPMENTID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_EQUIP2CATALOG
  ADD CONSTRAINT SYS_C005365 CHECK ("EQUIPMENTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_EQUIP2CATALOG
  ADD CONSTRAINT SYS_C005366 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_FILES
  (EXT_PHOTGRAPH VARCHAR2(512) NULL,
   PHOTOGRAPH VARCHAR2(512) NULL,
   ID NUMBER(10, 0) NULL,
   DOCID NUMBER(10, 0) NULL,
   TYPEID NUMBER(10, 0) NULL,
   SERVERID NUMBER(10, 0) NULL,
   NAME VARCHAR2(512) NULL,
   FILE_NAME VARCHAR2(512) NULL,
   FILE_SIZE NUMBER(10, 0) NULL,
   DESCR VARCHAR2(512) NULL,
   FILE_TYPE VARCHAR2(48) NULL,
   FILE_EXT VARCHAR2(512) NULL,
   MIME_TYPE VARCHAR2(512) NULL,
   VERSION NUMBER(10, 0) NULL,
   VERSION_STR VARCHAR2(512) NULL,
   ISIMAGE NUMBER(10, 0) NULL,
   SMALL_IMAGE BLOB NULL,
   CREATED DATE NULL,
   MODIFIED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   DELETED NUMBER(10, 0) NULL,
   PHOTOGRAPHID NUMBER(10, 0) NULL,
   AGREED NUMBER(10, 0) NULL,
   ARCHIVED NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_FILES
  ADD CONSTRAINT PK_TB_FILES UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_FILES
  ADD CONSTRAINT SYS_C005244 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_FILES
  ADD CONSTRAINT SYS_C005245 CHECK ("SERVERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_FILES
  ADD CONSTRAINT SYS_C005246 CHECK ("AGREED" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_FILES
  ADD CONSTRAINT SYS_C005247 CHECK ("ARCHIVED" IS NOT NULL);

CREATE TABLE INFORMIX.TB_HOPS2CATALOG
  (HOPSID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_HOPS2CATALOG
  ADD CONSTRAINT PK_TB_HOPS2CATALOG UNIQUE (HOPSID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_HOPS2CATALOG
  ADD CONSTRAINT SYS_C005124 CHECK ("HOPSID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_HOPS2CATALOG
  ADD CONSTRAINT SYS_C005125 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TBLDEPARTMENTS
  (INTDEPARTMENTID NUMBER(10, 0) NULL,
   INTPARENTDEPARTMENTID NUMBER(10, 0) NULL,
   VCHDEPARTMENTNAME CHAR(1020) NULL,
   VCHFULLPATHNAME CHAR(1600) NULL,
   INTLEVEL NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TBLDEPARTMENTS
  ADD CONSTRAINT SYS_C005462 CHECK ("INTDEPARTMENTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TBLDEPARTMENTS
  ADD CONSTRAINT SYS_C005463 CHECK ("INTPARENTDEPARTMENTID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_LEASEDOC2CATALOG
  (LEASEID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_LEASEDOC2CATALOG
  ADD CONSTRAINT PK_TB_LEASEDOC2CATALOG UNIQUE (LEASEID, CATALOGID);

CREATE TABLE INFORMIX.TBLUSERS
  (INTTABNUM NUMBER(10, 0) NULL,
   VCHLASTNAME CHAR(600) NULL,
   VCHFIRSTNAME CHAR(600) NULL,
   VCHMIDDLENAME CHAR(600) NULL,
   VCHPOSITION CHAR(600) NULL,
   INTDEPARTMENTID NUMBER(10, 0) NULL,
   VCHTELCITY CHAR(80) NULL,
   VCHTELW CHAR(80) NULL,
   VCHFAX CHAR(80) NULL,
   VCHTELM CHAR(80) NULL,
   VCHEMAIL CHAR(200) NULL,
   INTPOSITIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TBLUSERS
  ADD CONSTRAINT PK_TBLUSERS UNIQUE (INTTABNUM);

CREATE TABLE INFORMIX.TB_OBJECTS
  (ID NUMBER(10, 0) NULL,
   NAME VARCHAR2(256) NULL,
   REF_TABLE VARCHAR2(256) NULL,
   TYPE_ VARCHAR2(48) NULL);

ALTER TABLE INFORMIX.TB_OBJECTS
  ADD CONSTRAINT PK_TBOBJECT_420303 UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_OBJECTS
  ADD CONSTRAINT SYS_C005223 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_OBJECTS2CATALOG
  (CATALOGID NUMBER(10, 0) NULL,
   OBJECTID NUMBER(10, 0) NULL,
   OBJECTTYPEID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_OBJECTS2CATALOG
  ADD CONSTRAINT PK_TB_OBJECTS2CATA UNIQUE (CATALOGID, OBJECTID, OBJECTTYPEID);
 
ALTER TABLE INFORMIX.TB_OBJECTS2CATALOG
  ADD CONSTRAINT SYS_C005764 CHECK ("CATALOGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_OBJECTS2CATALOG
  ADD CONSTRAINT SYS_C005765 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_OBJECTS2CATALOG
  ADD CONSTRAINT SYS_C005766 CHECK ("OBJECTTYPEID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_OBJECT2FILES
  (OBJECTID NUMBER(10, 0) NULL,
   TYPEID NUMBER(10, 0) NULL,
   FILEID NUMBER(10, 0) NULL,
   TYPE_ VARCHAR2(256) NULL);

ALTER TABLE INFORMIX.TB_OBJECT2FILES
  ADD CONSTRAINT PK_TB_OBJECT2FILES UNIQUE (OBJECTID, TYPEID, FILEID);
 
ALTER TABLE INFORMIX.TB_OBJECT2FILES
  ADD CONSTRAINT SYS_C005240 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_OBJECT2FILES
  ADD CONSTRAINT SYS_C005241 CHECK ("TYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_OBJECT2FILES
  ADD CONSTRAINT SYS_C005242 CHECK ("FILEID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_PERMISSION
  (OBJECTID NUMBER(10, 0) NULL,
   TYPEID NUMBER(10, 0) NULL,
   ROLEID CHAR(80) NULL,
   PERMISSION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT PK_PERMIS_420308 UNIQUE (OBJECTID, TYPEID, ROLEID);
 
ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT CKC_PERMISSI_TB_PE CHECK (permission IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT SYS_C005229 CHECK ("OBJECTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT SYS_C005230 CHECK ("TYPEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT SYS_C005231 CHECK ("ROLEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_PERMISSION
  ADD CONSTRAINT SYS_C005232 CHECK ("PERMISSION" IS NOT NULL);

CREATE TABLE INFORMIX.TB_POS2CATALOG
  (POSITIONID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_POS2CATALOG
  ADD CONSTRAINT PK_TB_POS2CATALOG UNIQUE (POSITIONID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_POS2CATALOG
  ADD CONSTRAINT SYS_C005237 CHECK ("POSITIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_POS2CATALOG
  ADD CONSTRAINT SYS_C005238 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_PRJFILES
  (ID NUMBER(10, 0) NULL,
   ARCHIVED NUMBER(10, 0) NULL,
   AGREED NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT PK_TB_PRJFILES UNIQUE (ID);
 
ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT CKC_ARCHIVED_TB_PR CHECK (archived IN (0 ,1 ));
 
ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT CKC_AGREED_TB_PR CHECK (agreed IN (0 ,1 ));
 
ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT SYS_C005384 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT SYS_C005385 CHECK ("ARCHIVED" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_PRJFILES
  ADD CONSTRAINT SYS_C005386 CHECK ("AGREED" IS NOT NULL);

CREATE TABLE INFORMIX.TB_REGIONS2CATALOG
  (REGIONID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_REGIONS2CATALOG
  ADD CONSTRAINT PK_TB_REGIONS2CATA UNIQUE (REGIONID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_REGIONS2CATALOG
  ADD CONSTRAINT SYS_C005188 CHECK ("REGIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_REGIONS2CATALOG
  ADD CONSTRAINT SYS_C005189 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TBS_ATTRIBUTES
  (ID NUMBER(10, 0) NULL,
   VERSIONID NUMBER(10, 0) NULL,
   FILE_NAME VARCHAR2(512) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   MIME_TYPE VARCHAR2(512) NULL,
   VERSION_NAME VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.TBS_ATTRIBUTES
  ADD CONSTRAINT PK_TBS_ATTRIBUTES UNIQUE (ID);
 
ALTER TABLE INFORMIX.TBS_ATTRIBUTES
  ADD CONSTRAINT SYS_C005239 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TBS_FILESTORE
  (FILESTORE_ID NUMBER(10, 0) NULL,
   PATH VARCHAR2(512) NULL,
   MAX_SPACE NUMBER(22) NULL,
   FREE_SPACE NUMBER(22) NULL,
   FILE_COUNT NUMBER(22) NULL);

ALTER TABLE INFORMIX.TBS_FILESTORE
  ADD CONSTRAINT PK_TBS_FILESTORE UNIQUE (FILESTORE_ID);
 
ALTER TABLE INFORMIX.TBS_FILESTORE
  ADD CONSTRAINT SYS_C005224 CHECK ("FILESTORE_ID" IS NOT NULL);

CREATE TABLE INFORMIX.TBS_METAFILE
  (ID NUMBER(10, 0) NULL,
   CLIENTID NUMBER(10, 0) NULL,
   DOCUMENT_NAME VARCHAR2(512) NULL);

ALTER TABLE INFORMIX.TBS_METAFILE
  ADD CONSTRAINT PK_TBS_METAFILE UNIQUE (ID);
 
ALTER TABLE INFORMIX.TBS_METAFILE
  ADD CONSTRAINT SYS_C005225 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TB_SUPREG2CATALOG
  (SUPREGID NUMBER(10, 0) NULL,
   CATALOGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TB_SUPREG2CATALOG
  ADD CONSTRAINT PK_TB_SUPREG2CATAL UNIQUE (SUPREGID, CATALOGID);
 
ALTER TABLE INFORMIX.TB_SUPREG2CATALOG
  ADD CONSTRAINT SYS_C005190 CHECK ("SUPREGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TB_SUPREG2CATALOG
  ADD CONSTRAINT SYS_C005191 CHECK ("CATALOGID" IS NOT NULL);

CREATE TABLE INFORMIX.TBS_VERSIONS
  (VERSIONID NUMBER(10, 0) NULL,
   SERVERID NUMBER(10, 0) NULL,
   VERSION NUMBER(10, 0) NULL,
   VERSION_STR VARCHAR2(64) NULL,
   FILE_SIZE NUMBER(10, 0) NULL,
   REAL_PATH VARCHAR2(1020) NULL,
   FILESTORE_ID NUMBER(10, 0) NULL,
   OPERATOR_ID VARCHAR2(512) NULL,
   REAL_PATH_DUMP VARCHAR2(1020) NULL,
   RELATIVE_PATH VARCHAR2(1020) NULL,
   RELATIVE_PATH_DUMP VARCHAR2(1020) NULL,
   ISCOPY NUMBER(10, 0) NULL,
   DELAY VARCHAR2(1020) NULL,
   CREATED DATE NULL);

ALTER TABLE INFORMIX.TBS_VERSIONS
  ADD CONSTRAINT PK_TBS_VERSIONS UNIQUE (VERSIONID);
 
ALTER TABLE INFORMIX.TBS_VERSIONS
  ADD CONSTRAINT SYS_C005227 CHECK ("VERSIONID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TBS_VERSIONS
  ADD CONSTRAINT SYS_C005228 CHECK ("CREATED" IS NOT NULL);

CREATE TABLE INFORMIX.TC_CONFIGURATIONS
  (CONFIGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TC_CONFIGURATIONS
  ADD CONSTRAINT PK_TC_CONFIGUR UNIQUE (CONFIGID);
 
ALTER TABLE INFORMIX.TC_CONFIGURATIONS
  ADD CONSTRAINT SYS_C003853 CHECK ("CONFIGID" IS NOT NULL);

CREATE TABLE INFORMIX.TERMS_GLOSSARY
  (ID NUMBER(10, 0) NULL,
   ABBR CHAR(160) NULL,
   TERM_ENG CHAR(800) NULL,
   TERM_RUS CHAR(800) NULL,
   DESC_ VARCHAR2(2400) NULL);
 
ALTER TABLE INFORMIX.TERMS_GLOSSARY
  ADD CONSTRAINT SYS_C006019 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.TERRITORYCODES
  (IDTCODE NUMBER(10, 0) NULL,
   COUNTRY NUMBER(10, 0) NULL,
   TCODE NUMBER(2, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.TERRITORYCODES
  ADD CONSTRAINT PK_TERRITORYCODES UNIQUE (IDTCODE);
 
ALTER TABLE INFORMIX.TERRITORYCODES
  ADD CONSTRAINT SYS_C003817 CHECK ("IDTCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TERRITORYCODES
  ADD CONSTRAINT SYS_C003818 CHECK ("COUNTRY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TERRITORYCODES
  ADD CONSTRAINT SYS_C003819 CHECK ("TCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TERRITORYCODES
  ADD CONSTRAINT SYS_C003820 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.T_INFO_BYSITES
  (I_POSITION NUMBER(10, 0) NULL,
   I_REGION NUMBER(10, 0) NULL,
   V_TIPSAITA VARCHAR2(80) NULL,
   I_NUMSAITA NUMBER(10, 0) NULL,
   V_NAMESAITA VARCHAR2(200) NULL,
   V_ADDRESS VARCHAR2(600) NULL,
   C_GSM CHAR(12) NULL,
   C_DCS CHAR(12) NULL,
   D_DATE_CONNECTGSM DATE NULL,
   D_DATE_CONNECTDCS DATE NULL,
   C_PRVISOT CHAR(12) NULL,
   I_TYPETC_R NUMBER(10, 0) NULL,
   I_TYPETC_O NUMBER(10, 0) NULL,
   V_TYPETC_C VARCHAR2(48) NULL,
   V_BEENETCODES VARCHAR2(1020) NULL);

CREATE TABLE INFORMIX.TMP_AB
  (NAME CHAR(320) NULL,
   GSM NUMBER(10, 0) NULL,
   DAMPS NUMBER(10, 0) NULL,
   SPISAB1 CHAR(1020) NULL,
   SPISAB2 CHAR(1020) NULL);

CREATE TABLE INFORMIX.TMPADDCENTER
  (IDPROJECT NUMBER(10, 0) NULL,
   IDSTORAGEPLACE NUMBER(10, 0) NULL,
   IDEQUIPMENT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPANTENCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   NUMSECTOR NUMBER(10, 0) NULL,
   NUMBERANTEN NUMBER(10, 0) NULL,
   QTYANTEN NUMBER(10, 0) NULL,
   TYPEANTEN VARCHAR2(1020) NULL,
   AZIMUT NUMBER(15, 2) NULL,
   HEIGHT NUMBER(15, 2) NULL,
   MEHNAKLON NUMBER(15, 2) NULL,
   TYPETR CHAR(8) NULL,
   TYPEO CHAR(4) NULL,
   FLAGEND NUMBER(10, 0) NULL,
   IDANTENNRI NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPANTENCENTER
  ADD CONSTRAINT SYS_C005772 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPAR
  (FILIAL VARCHAR2(320) NULL,
   GSM CHAR(80) NULL,
   DAMPS CHAR(80) NULL,
   POSITION CHAR(200) NULL,
   ADDRESS CHAR(320) NULL,
   STATE CHAR(80) NULL,
   MANAGER CHAR(160) NULL,
   SUMM NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.TMPARENDACONTRACTS
  (BASECONTRACT NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   NUMCONTRACT CHAR(160) NULL,
   DATECONTRACT CHAR(160) NULL,
   ORGARENDATOR CHAR(320) NULL,
   ORGBEELINE CHAR(320) NULL,
   STARTDATE DATE NULL,
   FINISHDATE DATE NULL,
   PROLONGRULE CHAR(320) NULL,
   CALCRULE CHAR(320) NULL,
   RESNAME CHAR(320) NULL,
   VALNAME CHAR(320) NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   PERIODCHARGE CHAR(40) NULL,
   TYPEPAY CHAR(40) NULL,
   SUMPAY NUMBER(15, 2) NULL,
   PERIODPAY CHAR(40) NULL,
   SUMTRAFIK NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.TMPARENDA9
  (NAMEECONOMIST CHAR(320) NULL,
   CNTALLDOG NUMBER(10, 0) NULL,
   CNTWITHTAFIK NUMBER(10, 0) NULL,
   CNTWITHOUTTRAFIK NUMBER(10, 0) NULL,
   CNTNEEDCLOSE NUMBER(10, 0) NULL,
   CNTBS NUMBER(10, 0) NULL,
   CNTWITHOUTBS NUMBER(10, 0) NULL,
   CNTWORKDOG NUMBER(10, 0) NULL,
   SUMKOEF NUMBER(15, 4) NULL);

CREATE TABLE INFORMIX.TMPARENDA91
  (NAMEECONOMIST CHAR(320) NULL,
   CNTALLDOG NUMBER(10, 0) NULL,
   CNTWITHTAFIK NUMBER(10, 0) NULL,
   CNTWITHOUTTRAFIK NUMBER(10, 0) NULL,
   CNTNEEDCLOSE NUMBER(10, 0) NULL,
   CNTBS NUMBER(10, 0) NULL,
   CNTWITHOUTBS NUMBER(10, 0) NULL,
   CNTWORKDOG NUMBER(10, 0) NULL,
   SUMKOEF NUMBER(15, 4) NULL);

CREATE TABLE INFORMIX.TMP_BDV_LISTBS
  (GSMID NUMBER(10, 0) NULL,
   IDREGION NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPBILCHF
  (IDCONTRACT NUMBER(10, 0) NULL,
   IDRESOURCENRI NUMBER(10, 0) NULL,
   NAMERESBILLING CHAR(320) NULL,
   BILLNUMBER CHAR(120) NULL,
   BILLDATE DATE NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   NDSCHARGE NUMBER(15, 2) NULL,
   RATECHARGERUR NUMBER(15, 4) NULL,
   SUMMAINAKT NUMBER(15, 2) NULL,
   NDSMAINAKT NUMBER(15, 2) NULL,
   RATENDS NUMBER(5, 2) NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   STARTDATECHARGE DATE NULL,
   ENDDATECHARGE DATE NULL);

CREATE TABLE INFORMIX.TMPBILCHF_GRP
  (NAMERESBILLING CHAR(320) NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   NDSCHARGE NUMBER(15, 2) NULL,
   SUMMAINAKT NUMBER(15, 2) NULL,
   NDSMAINAKT NUMBER(15, 2) NULL,
   RATENDS NUMBER(5, 2) NULL,
   RATECHARGERUR NUMBER(15, 4) NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   STARTDATECHARGE DATE NULL,
   ENDDATECHARGE DATE NULL);

CREATE TABLE INFORMIX.TMPBILPOS
  (IDBILLPOS NUMBER(10, 0) NULL,
   SUMPOS NUMBER(15, 2) NULL,
   OSTSUMPOS NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.TMP_BS
  (ASSOCIATION NUMBER(10, 0) NULL,
   OUTERSYSTEM NUMBER(10, 0) NULL,
   OUTERCODE CHAR(160) NULL,
   GSM NUMBER(10, 0) NULL,
   DCS NUMBER(10, 0) NULL,
   DAMPS NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   ECONOMIST NUMBER(10, 0) NULL,
   MANAGER NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPBSPOS
  (IDPOSITION NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   GSMID NUMBER(10, 0) NULL,
   DAMPSID NUMBER(10, 0) NULL,
   ISGSM NUMBER(5, 0) NULL,
   ISDCS NUMBER(5, 0) NULL,
   ISDAMPS NUMBER(5, 0) NULL,
   ISCONTROLLER NUMBER(5, 0) NULL);

CREATE TABLE INFORMIX.TMPBSTYPES
  (BSTYPE CHAR(120) NULL);

CREATE TABLE INFORMIX.TMPCHARGES
  (DOCPOSITION NUMBER(10, 0) NULL,
   CODEAKT NUMBER(10, 0) NULL,
   CODECONTRACT NUMBER(10, 0) NULL,
   CODERESOURCE NUMBER(10, 0) NULL,
   BILLNUMBER CHAR(120) NULL,
   BILLDATE DATE NULL,
   DATECHARGE DATE NULL,
   DATESTART DATE NULL,
   DATEEND DATE NULL,
   RATENDS NUMBER(15, 2) NULL,
   SUMCONTRACT NUMBER(15, 2) NULL,
   NDSCONTRACT NUMBER(15, 2) NULL,
   CODECURRCONTRACT NUMBER(10, 0) NULL,
   CURRCONTRACT CHAR(120) NULL,
   RATECONTRACT NUMBER(15, 4) NULL,
   SUMRUB NUMBER(15, 2) NULL,
   NDSRUB NUMBER(15, 2) NULL,
   RATEMAINCURR NUMBER(15, 4) NULL,
   SUMMAINCURR NUMBER(15, 2) NULL,
   NDSMAINCURR NUMBER(15, 2) NULL,
   RATEDOPCURR NUMBER(15, 4) NULL,
   SUMDOPCURR NUMBER(15, 2) NULL,
   NDSDOPCURR NUMBER(15, 2) NULL,
   SUMRUBDIFFERENCE NUMBER(15, 2) NULL,
   ORDERCUSTOMER NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPCHARGES
  ADD CONSTRAINT SYS_C008604 CHECK ("DOCPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPCHARGES
  ADD CONSTRAINT SYS_C008605 CHECK ("CODEAKT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPCHARGES
  ADD CONSTRAINT SYS_C008606 CHECK ("CODECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPCHARGES
  ADD CONSTRAINT SYS_C008607 CHECK ("CODERESOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPCHRGPAYACT
  (DOCPOSITION NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CONTRACT NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   DOCPOSTYPE CHAR(4) NULL,
   DOCPOSVID CHAR(4) NULL,
   DOCPOSGROUP NUMBER(10, 0) NULL,
   BEGINDATE DATE NULL,
   ENDDATE DATE NULL,
   CURRENCY NUMBER(10, 0) NULL,
   CONTRACTTYPE CHAR(4) NULL,
   CHARGEDATERULE CHAR(4) NULL,
   PAYDATERULE CHAR(4) NULL,
   DOPCHARGDATRUL CHAR(4) NULL,
   RATENDS NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.TMPCLASSES
  (CLASSID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPCOMPLECTS
  (RESOURCESET NUMBER(10, 0) NULL,
   TRXCOUNT NUMBER(10, 0) NULL,
   DEFAULTCOMPLECT CHAR(4) NULL);

CREATE TABLE INFORMIX.TMPCONTRRESVAL
  (BASECONTRACT NUMBER(10, 0) NULL,
   IDRESOURCE NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPCONTRRESVAL
  ADD CONSTRAINT SYS_C008597 CHECK ("BASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPCONTRRESVAL
  ADD CONSTRAINT SYS_C008598 CHECK ("IDRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPCONTRRESVAL
  ADD CONSTRAINT SYS_C008599 CHECK ("CURRENCY" IS NOT NULL);

CREATE TABLE INFORMIX.TMPDOCPOSINACT
  (IDDOCPOS NUMBER(10, 0) NULL,
   FLAGDELETE CHAR(4) NULL);
 
ALTER TABLE INFORMIX.TMPDOCPOSINACT
  ADD CONSTRAINT SYS_C008601 CHECK ("IDDOCPOS" IS NOT NULL);

CREATE TABLE INFORMIX.TMPDPANT2SECTORS
  (IDSECT NUMBER(10, 0) NULL,
   IDSECTNEW NUMBER(10, 0) NULL,
   IDANTEN NUMBER(10, 0) NULL,
   IDANTENNEW NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMP_ECONOMIST
  (ID NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   MAN NUMBER(10, 0) NULL,
   OPERATOR NUMBER(10, 0) NULL,
   WORKER NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPEQPCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   NAMEGROUPEQP VARCHAR2(320) NULL,
   TYPEEQP VARCHAR2(320) NULL,
   QTY NUMBER(15, 2) NULL,
   MODELEQP VARCHAR2(320) NULL,
   FLAGEND NUMBER(10, 0) NULL,
   IDEQPNRI NUMBER(10, 0) NULL,
   IDTYPEEQPNRI NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPEQPCENTER
  ADD CONSTRAINT SYS_C003397 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPFILELIST
  (FILEID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPGROUPEQPCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   NAMEGROUPEQP VARCHAR2(320) NULL,
   IDTYPENRI NUMBER(10, 0) NULL,
   FLAGEND NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPGROUPEQPCENTER
  ADD CONSTRAINT SYS_C003398 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLEASECALCRATESSLD
  (LEASECONTRACT NUMBER(10, 0) NULL,
   SALDATE DATE NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   RATE NUMBER(15, 4) NULL,
   BYHAND CHAR(4) NULL,
   ACT NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008608 CHECK ("LEASECONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008609 CHECK ("SALDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008610 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008611 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008612 CHECK ("RATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLEASECALCRATESSLD
  ADD CONSTRAINT SYS_C008613 CHECK ("BYHAND" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLEASEDOCPOS
  (LEASEDOCPOSITION NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPLIST
  (IDCONTRACT NUMBER(10, 0) NULL,
   NAMEECONOMIST CHAR(320) NULL,
   NAMEORG CHAR(320) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   CATEGORYBUCHCODE CHAR(160) NULL);

CREATE TABLE INFORMIX.TMPLISTABCONTRACT
  (LEASECONTRACT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPLISTCONTRACTS
  (IDCONTRACT NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEFINISH DATE NULL);
 
ALTER TABLE INFORMIX.TMPLISTCONTRACTS
  ADD CONSTRAINT SYS_C008594 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTCONTRACTS
  ADD CONSTRAINT SYS_C008595 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTCONTRACTS
  ADD CONSTRAINT SYS_C008596 CHECK ("DATEFINISH" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLISTDOCUMENTS
  (IDCONTRACT NUMBER(10, 0) NULL,
   DATEPERIOD DATE NULL,
   REGISTRYSF CHAR(1020) NULL,
   REGISTRYCWA CHAR(1020) NULL);

CREATE TABLE INFORMIX.TMPLISTDPDEVPLANS
  (DEVPLAN NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPLISTDPWORKS
  (SUPREGID NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   IDBS NUMBER(10, 0) NULL,
   NUMBERBS NUMBER(10, 0) NULL,
   NETZONE NUMBER(10, 0) NULL,
   NAMEBS VARCHAR2(1020) NULL,
   IDRESOURCE NUMBER(10, 0) NULL,
   WORKDATE DATE NULL,
   DEVPLAN NUMBER(10, 0) NULL,
   VERSIONPLAN NUMBER(10, 0) NULL,
   HSET NUMBER(6, 0) NULL);

CREATE TABLE INFORMIX.TMPLISTERR
  (STR CHAR(2000) NULL);

CREATE TABLE INFORMIX.TMPLISTHIST1
  (NUMPERIOD1 NUMBER(10, 0) NULL,
   IDRESOURCE NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEFINISH DATE NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   PERIODCHARGE CHAR(4) NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST1
  ADD CONSTRAINT SYS_C008586 CHECK ("IDRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST1
  ADD CONSTRAINT SYS_C008587 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST1
  ADD CONSTRAINT SYS_C008588 CHECK ("DATEFINISH" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST1
  ADD CONSTRAINT SYS_C008589 CHECK ("CURRCHARGE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLISTHIST2
  (NUMPERIOD1 NUMBER(10, 0) NULL,
   NUMPERIOD2 NUMBER(10, 0) NULL,
   IDRESOURCE NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEFINISH DATE NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   PERIODCHARGE CHAR(4) NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST2
  ADD CONSTRAINT SYS_C008590 CHECK ("IDRESOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST2
  ADD CONSTRAINT SYS_C008591 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST2
  ADD CONSTRAINT SYS_C008592 CHECK ("DATEFINISH" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST2
  ADD CONSTRAINT SYS_C008593 CHECK ("CURRCHARGE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLISTHIST3
  (NUMPERIOD1 NUMBER(10, 0) NULL,
   DATESTART DATE NULL,
   DATEFINISH DATE NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   SUMNDSCHARGE NUMBER(15, 2) NULL,
   SUMPAYMENT NUMBER(15, 2) NULL,
   SUMTRAFIK NUMBER(15, 2) NULL,
   EXTENDTYPE CHAR(4) NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST3
  ADD CONSTRAINT SYS_C008602 CHECK ("DATESTART" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPLISTHIST3
  ADD CONSTRAINT SYS_C008603 CHECK ("DATEFINISH" IS NOT NULL);

CREATE TABLE INFORMIX.TMPLISTREG
  (REGIONID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPLISTSUM
  (IDCONTRACT NUMBER(10, 0) NULL,
   DATEPERIOD DATE NULL,
   SUMUSD NUMBER(15, 2) NULL,
   SUMEUR NUMBER(15, 2) NULL,
   SUMRUR NUMBER(15, 2) NULL,
   SUMOTHER NUMBER(15, 2) NULL);

CREATE TABLE INFORMIX.TMP_LOADPRJBS
  (REGIONTXT VARCHAR2(320) NULL,
   OBLTXT VARCHAR2(320) NULL,
   NUMBS NUMBER(10, 0) NULL,
   NAMEBS VARCHAR2(320) NULL,
   BAND NUMBER(10, 0) NULL,
   COMMENT1 VARCHAR2(1020) NULL,
   MANUFTXT VARCHAR2(160) NULL,
   PLANDATETXT VARCHAR2(160) NULL,
   NETZONE NUMBER(10, 0) NULL,
   IDREGIONNRI NUMBER(10, 0) NULL,
   IDOBLNRI NUMBER(10, 0) NULL,
   IDMANUFNRI NUMBER(10, 0) NULL,
   PLANDATENRI DATE NULL,
   COMMENT2 VARCHAR2(1020) NULL,
   ENDFLAG VARCHAR2(160) NULL,
   BANDNRI CHAR(4) NULL);

CREATE TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  (POSCODE CHAR(44) NULL,
   TNCODE CHAR(40) NULL,
   NRI_LATITUDE NUMBER(10, 6) NULL,
   NRI_LONGITUDE NUMBER(10, 6) NULL,
   TN_LATITUDE NUMBER(10, 6) NULL,
   TN_LONGITUDE NUMBER(10, 6) NULL,
   NRI_NAME VARCHAR2(1020) NULL,
   TN_NAME VARCHAR2(1020) NULL,
   NRI_ADDRESS VARCHAR2(1020) NULL,
   TN_ADDRESS VARCHAR2(1020) NULL,
   WORKNRI CHAR(4) NULL,
   TN_TRUE CHAR(4) NULL);

ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT PK_POSCODE UNIQUE (POSCODE);
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT CKC_WORKNRI_NRI_TN CHECK (worknri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT CKC_TN_TRUE_NRI_TN CHECK (tn_true IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT SYS_C003715 CHECK ("POSCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT SYS_C003716 CHECK ("TNCODE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT SYS_C003717 CHECK ("WORKNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMP_NRI_TN_COORDINATES
  ADD CONSTRAINT SYS_C003718 CHECK ("TN_TRUE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPONERBS
  (RESOURCE_ NUMBER(10, 0) NULL,
   NFSITEM_ID CHAR(160) NULL,
   QTY NUMBER(15, 3) NULL,
   UNIT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPORGNRICONTRACTS
  (IDORGNRI NUMBER(10, 0) NULL,
   IDCONTRACT NUMBER(10, 0) NULL,
   IDFILIAL NUMBER(10, 0) NULL,
   IDOWNERNFS NUMBER(10, 0) NULL,
   TYPECONTRACT CHAR(80) NULL);

ALTER TABLE INFORMIX.TMPORGNRICONTRACTS
  ADD CONSTRAINT PK_TMPORGNRICONTRA UNIQUE (IDORGNRI, IDCONTRACT);
 
ALTER TABLE INFORMIX.TMPORGNRICONTRACTS
  ADD CONSTRAINT SYS_C005946 CHECK ("IDORGNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPORGNRICONTRACTS
  ADD CONSTRAINT SYS_C005947 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPORGNRICONTRACTS
  ADD CONSTRAINT SYS_C005948 CHECK ("IDFILIAL" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPORGNRICONTRACTS
  ADD CONSTRAINT SYS_C005949 CHECK ("TYPECONTRACT" IS NOT NULL);

CREATE TABLE INFORMIX.TMPOWNERCONTRACTS
  (IDORGNRI NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TMPOWNERCONTRACTS
  ADD CONSTRAINT PK_TMPOWNERCONTRACTS UNIQUE (IDORGNRI);
 
ALTER TABLE INFORMIX.TMPOWNERCONTRACTS
  ADD CONSTRAINT SYS_C005999 CHECK ("IDORGNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPOWNERCONTRACTS
  ADD CONSTRAINT SYS_C006000 CHECK ("IDVENDORSITE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPPLANDATE
  (GSMID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   BAND NUMBER(10, 0) NULL,
   DATEARENDA VARCHAR2(160) NULL,
   DATERUN VARCHAR2(160) NULL,
   FLAG NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   VIDWORK CHAR(160) NULL,
   REGION CHAR(160) NULL,
   FILIAL CHAR(160) NULL,
   BSC NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   LAT NUMBER(15, 6) NULL,
   LON NUMBER(15, 6) NULL,
   TYPEPOS VARCHAR2(1020) NULL,
   TYPEEQP VARCHAR2(160) NULL,
   FLAGEND NUMBER(10, 0) NULL,
   IDFILIALNRI NUMBER(10, 0) NULL,
   IDNETZONENRI NUMBER(10, 0) NULL,
   IDTYPEEQPNRI NUMBER(10, 0) NULL,
   IDADMINREGIONNRI NUMBER(10, 0) NULL,
   IDBSCNRI NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPPOSCENTER
  ADD CONSTRAINT SYS_C005767 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPPOSCHF
  (IDCHARGE NUMBER(10, 0) NULL,
   SUMCHARGE NUMBER(15, 2) NULL,
   NDSCHARGE NUMBER(15, 2) NULL,
   RATECHARGERUR NUMBER(15, 4) NULL,
   SUMMAINAKT NUMBER(15, 2) NULL,
   NDSMAINAKT NUMBER(15, 2) NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   STARTDATECHARGE DATE NULL,
   ENDDATECHARGE DATE NULL,
   RATENDS NUMBER(5, 2) NULL);

CREATE TABLE INFORMIX.TMPPOSCHF_GRP
  (SUMCHARGE NUMBER(15, 2) NULL,
   NDSCHARGE NUMBER(15, 2) NULL,
   RATECHARGERUR NUMBER(15, 4) NULL,
   SUMMAINAKT NUMBER(15, 2) NULL,
   NDSMAINAKT NUMBER(15, 2) NULL,
   CURRCHARGE NUMBER(10, 0) NULL,
   STARTDATECHARGE DATE NULL,
   ENDDATECHARGE DATE NULL,
   RATENDS NUMBER(5, 2) NULL);

CREATE TABLE INFORMIX.TMPPOSFORMAP
  (IDPOSITION NUMBER(10, 0) NULL,
   NAME VARCHAR2(1020) NULL,
   DAMPSNAME VARCHAR2(1020) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   GSMID NUMBER(10, 0) NULL,
   DAMPSID NUMBER(10, 0) NULL,
   ISGSM NUMBER(5, 0) NULL,
   ISDCS NUMBER(5, 0) NULL,
   ISDAMPS NUMBER(5, 0) NULL,
   ISCONTROLLER NUMBER(5, 0) NULL,
   POSSTATE CHAR(4) NULL);

CREATE TABLE INFORMIX.TMPPOSGOOD
  (POS NUMBER(10, 0) NULL,
   POSTYPE CHAR(4) NULL,
   GSMID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSITION
  (IDPOSITION NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPPOSITION
  ADD CONSTRAINT SYS_C008585 CHECK ("IDPOSITION" IS NOT NULL);

CREATE TABLE INFORMIX.TMPPOSITIONS
  (STORAGEPLACE NUMBER(10, 0) NULL,
   POSCODE CHAR(44) NULL,
   POSSTATE CHAR(4) NULL,
   NETZONE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSMANGOOD
  (POS NUMBER(10, 0) NULL,
   POSTYPE CHAR(4) NULL,
   GSMID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSMANMANUAL
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   POSSTATE CHAR(4) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL,
   HANDLETYPE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSMANNEW
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL);

CREATE TABLE INFORMIX.TMPPOSMANUAL
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   POSSTATE CHAR(4) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL,
   HANDLETYPE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPPOSNEW
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL);

CREATE TABLE INFORMIX.TMPRACKCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   TYPERACK VARCHAR2(200) NULL,
   QTYRACK NUMBER(10, 0) NULL,
   NAMERACK VARCHAR2(320) NULL,
   FLAGEND NUMBER(10, 0) NULL,
   IDTYPERACKNRI NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPRACKCENTER
  ADD CONSTRAINT SYS_C005768 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPREPGOOD
  (POS NUMBER(10, 0) NULL,
   POSTYPE CHAR(4) NULL,
   GSMID NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPREPMANUAL
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   CI NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   POSSTATE CHAR(4) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL,
   HANDLETYPE NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPREPNEW
  (POS NUMBER(10, 0) NULL,
   POSNAME NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   LATITUDE NUMBER(10, 6) NULL,
   LONGITUDE NUMBER(10, 6) NULL,
   NAME CHAR(320) NULL,
   ADDRESS VARCHAR2(1020) NULL,
   BSSTATE CHAR(4) NULL,
   BSTYPE CHAR(4) NULL);

CREATE TABLE INFORMIX.TMPRRLANT
  (RESOURCE_ NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPSECTORCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   GSMID NUMBER(10, 0) NULL,
   NUMSECTOR NUMBER(10, 0) NULL,
   BANDSECTOR NUMBER(10, 0) NULL,
   NAMESECTOR CHAR(4) NULL,
   NUMRACK NUMBER(10, 0) NULL,
   QTYTRX NUMBER(10, 0) NULL,
   FLAGEND NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPSECTORCENTER
  ADD CONSTRAINT SYS_C005770 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPSECTORS
  (EQUIPMENT NUMBER(10, 0) NULL,
   NAME_SECT CHAR(12) NULL,
   PLANFACTTYPE NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   CNT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPTYPEANTEN
  (IDRECORD NUMBER(10, 0) NULL,
   TYPEANTEN VARCHAR2(1020) NULL,
   IDTYPEANTENNRI NUMBER(10, 0) NULL,
   CODENFS VARCHAR2(200) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   FLAGEND NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPTYPEANTEN
  ADD CONSTRAINT SYS_C005771 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPTYPEEQPCENTER
  (IDRECORD NUMBER(10, 0) NULL,
   NAMEGROUPEQP VARCHAR2(320) NULL,
   MODELEQP VARCHAR2(320) NULL,
   TYPEEQP VARCHAR2(320) NULL,
   IDRESOURCENRI NUMBER(10, 0) NULL,
   FLAGEND NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPTYPEEQPCENTER
  ADD CONSTRAINT SYS_C003399 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMPTYPERACK
  (IDRECORD NUMBER(10, 0) NULL,
   TYPERACK VARCHAR2(200) NULL,
   IDTYPERACKNRI NUMBER(10, 0) NULL,
   FLAGEND NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.TMPTYPERACK
  ADD CONSTRAINT SYS_C005769 CHECK ("IDRECORD" IS NOT NULL);

CREATE TABLE INFORMIX.TMP_USERS
  (ID NUMBER(10, 0) NULL,
   NAME1 CHAR(200) NULL,
   NAME2 CHAR(200) NULL,
   MAN NUMBER(10, 0) NULL,
   OPERATOR NUMBER(10, 0) NULL,
   WORKER NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPVENDORSITEFORCONTRACT
  (IDCONTRACT NUMBER(10, 0) NULL,
   IDVENDORSITE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TMPVENDORSITEFORCONTRACT
  ADD CONSTRAINT PK_TMPVENDORSITEFO UNIQUE (IDCONTRACT, IDVENDORSITE);
 
ALTER TABLE INFORMIX.TMPVENDORSITEFORCONTRACT
  ADD CONSTRAINT SYS_C005950 CHECK ("IDCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TMPVENDORSITEFORCONTRACT
  ADD CONSTRAINT SYS_C005951 CHECK ("IDVENDORSITE" IS NOT NULL);

CREATE TABLE INFORMIX.TMPWORKEDACT
  (IDACT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TMPWORKEDREGLAMENT
  (IDREGLAMENT NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TN_CAPACITIES
  (CAPACITYID NUMBER(10, 0) NULL,
   CAPACITYVAL CHAR(120) NULL,
   INDEX_CAP CHAR(4) NULL);

ALTER TABLE INFORMIX.TN_CAPACITIES
  ADD CONSTRAINT PK_TN_CAPACITIES UNIQUE (CAPACITYID);
 
ALTER TABLE INFORMIX.TN_CAPACITIES
  ADD CONSTRAINT SYS_C005354 CHECK ("CAPACITYID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CAPACITIES
  ADD CONSTRAINT SYS_C005355 CHECK ("CAPACITYVAL" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CHANNELS
  (CHANID NUMBER(10, 0) NULL,
   CONSCHANID NUMBER(10, 0) NULL,
   CHAN_TYPE NUMBER(10, 0) NULL,
   PURPOSE NUMBER(10, 0) NULL,
   REFUSE_TYPE NUMBER(10, 0) NULL,
   REFUSE_REASON VARCHAR2(1020) NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   ADDRESS_STREET_A VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE_A NUMBER(10, 0) NULL,
   ADDRESS_HOME_A CHAR(40) NULL,
   ADDRESS_CORPUS_A CHAR(40) NULL,
   ADDRESS_BUILDING_A CHAR(40) NULL,
   ADDRESS_FLOOR_A CHAR(40) NULL,
   ADDRESS_ROOM_A CHAR(40) NULL,
   ADDRESS_OTHER_A VARCHAR2(1020) NULL,
   ADDRESS_STREET_B VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE_B NUMBER(10, 0) NULL,
   ADDRESS_HOME_B CHAR(40) NULL,
   ADDRESS_CORPUS_B CHAR(40) NULL,
   ADDRESS_BUILDING_B CHAR(40) NULL,
   ADDRESS_FLOOR_B CHAR(40) NULL,
   ADDRESS_ROOM_B CHAR(40) NULL,
   ADDRESS_OTHER_B VARCHAR2(1020) NULL,
   CONTACTA VARCHAR2(1020) NULL,
   CONTACTB VARCHAR2(1020) NULL,
   POSA NUMBER(10, 0) NULL,
   POSB NUMBER(10, 0) NULL,
   BEENETID CHAR(80) NULL,
   EQUIPMENTID_ENDA NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDB NUMBER(10, 0) NULL,
   CHANNELLABEL CHAR(120) NULL,
   CHANNELCODE CHAR(120) NULL,
   STATE CHAR(4) NULL,
   MAINTYPE CHAR(4) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   ELEMREQID NUMBER(10, 0) NULL,
   PORTA VARCHAR2(1020) NULL,
   PORTB VARCHAR2(1020) NULL,
   PMPOS_ENDA NUMBER(10, 0) NULL,
   PMNAME_ENDA VARCHAR2(1020) NULL,
   PMPORT_ENDA VARCHAR2(1020) NULL,
   PMTU_ENDA VARCHAR2(80) NULL,
   MKPOS_ENDA NUMBER(10, 0) NULL,
   MKNAME_ENDA VARCHAR2(1020) NULL,
   MKPORT_ENDA VARCHAR2(1020) NULL,
   MKTU_ENDA VARCHAR2(80) NULL,
   MKPOS_ENDB NUMBER(10, 0) NULL,
   MKNAME_ENDB VARCHAR2(1020) NULL,
   MKPORT_ENDB VARCHAR2(1020) NULL,
   MKTU_ENDB VARCHAR2(80) NULL,
   PMPOS_ENDB NUMBER(10, 0) NULL,
   PMNAME_ENDB VARCHAR2(1020) NULL,
   PMPORT_ENDB VARCHAR2(1020) NULL,
   PMTU_ENDB VARCHAR2(80) NULL,
   PM1PAYMENT NUMBER(15, 2) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   PM2PAYMENT NUMBER(15, 2) NULL,
   MKPAYMENT NUMBER(15, 2) NULL,
   COUNTERAGENT NUMBER(10, 0) NULL,
   DOCNUMBER VARCHAR2(1020) NULL,
   COMPACTION VARCHAR2(80) NULL,
   ARENDATOR NUMBER(10, 0) NULL,
   PCMID VARCHAR2(80) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SOURCE CHAR(4) NULL);

ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT PK_TN_CHANNELS UNIQUE (CHANID);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT C921_3955 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT C921_3956 CHECK (source IN ('E' ,'R' ,'A' ,'X' ));
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT CKC_STATE_TN_CH CHECK (state IN ('P' ,'E' ,'D' ));
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT CKC_MAINTYPE_TN_CH CHECK (maintype IN ('A' ,'C' ));
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003520 CHECK ("CHANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003521 CHECK ("CHAN_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003522 CHECK ("PURPOSE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003523 CHECK ("POSA" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003524 CHECK ("POSB" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003525 CHECK ("EQUIPMENTID_ENDA" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003526 CHECK ("EQUIPMENTID_ENDB" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003527 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003528 CHECK ("MAINTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003529 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHANNELS
  ADD CONSTRAINT SYS_C003530 CHECK ("SOURCE" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CHAN2POINTS
  (CHANID NUMBER(10, 0) NULL,
   POINTID NUMBER(10, 0) NULL,
   LINKDATE DATE NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT PK_TN_CHAN2POINTS UNIQUE (CHANID, POINTID);
 
ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT CKC_RECORDST_TN_CH CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT SYS_C005597 CHECK ("CHANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT SYS_C005598 CHECK ("POINTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT SYS_C005599 CHECK ("LINKDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2POINTS
  ADD CONSTRAINT SYS_C005600 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CHAN2REQUEST
  (CHANID NUMBER(10, 0) NULL,
   ELEMREQID NUMBER(10, 0) NULL,
   LINKDATE DATE NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.TN_CHAN2REQUEST
  ADD CONSTRAINT PK_TN_CHAN2REQUEST UNIQUE (CHANID, ELEMREQID);
 
ALTER TABLE INFORMIX.TN_CHAN2REQUEST
  ADD CONSTRAINT SYS_C005601 CHECK ("CHANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2REQUEST
  ADD CONSTRAINT SYS_C005602 CHECK ("ELEMREQID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2REQUEST
  ADD CONSTRAINT SYS_C005603 CHECK ("LINKDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2REQUEST
  ADD CONSTRAINT SYS_C005604 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CHAN2SETTING
  (SETTINGID NUMBER(10, 0) NULL,
   CONSCHANID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_CHAN2SETTING
  ADD CONSTRAINT PK_TN_CHAN2SETTING UNIQUE (SETTINGID, CONSCHANID);
 
ALTER TABLE INFORMIX.TN_CHAN2SETTING
  ADD CONSTRAINT SYS_C003531 CHECK ("SETTINGID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CHAN2SETTING
  ADD CONSTRAINT SYS_C003532 CHECK ("CONSCHANID" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CONSCHANNELS
  (CONSCHANID NUMBER(10, 0) NULL,
   CHAN_TYPE NUMBER(10, 0) NULL,
   PURPOSE NUMBER(10, 0) NULL,
   REFUSE_TYPE NUMBER(10, 0) NULL,
   REFUSE_REASON VARCHAR2(1020) NULL,
   CAPACITYID NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   ADDRESS_STREET_A VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE_A NUMBER(10, 0) NULL,
   ADDRESS_HOME_A CHAR(40) NULL,
   ADDRESS_CORPUS_A CHAR(40) NULL,
   ADDRESS_BUILDING_A CHAR(40) NULL,
   ADDRESS_FLOOR_A CHAR(40) NULL,
   ADDRESS_ROOM_A CHAR(40) NULL,
   ADDRESS_OTHER_A VARCHAR2(1020) NULL,
   ADDRESS_STREET_B VARCHAR2(1020) NULL,
   ADDRESS_STRTTYPE_B NUMBER(10, 0) NULL,
   ADDRESS_HOME_B CHAR(40) NULL,
   ADDRESS_CORPUS_B CHAR(40) NULL,
   ADDRESS_BUILDING_B CHAR(40) NULL,
   ADDRESS_FLOOR_B CHAR(40) NULL,
   ADDRESS_ROOM_B CHAR(40) NULL,
   ADDRESS_OTHER_B VARCHAR2(1020) NULL,
   POSA NUMBER(10, 0) NULL,
   POSB NUMBER(10, 0) NULL,
   BEENETID CHAR(80) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   CONTACTA VARCHAR2(1020) NULL,
   CONTACTB VARCHAR2(1020) NULL,
   CHANNELLABEL CHAR(120) NULL,
   CHANNELCODE CHAR(120) NULL,
   STATE CHAR(4) NULL,
   EQUIPMENTID_ENDA NUMBER(10, 0) NULL,
   EQUIPMENTID_ENDB NUMBER(10, 0) NULL,
   CONSREQID NUMBER(10, 0) NULL,
   PORTA VARCHAR2(1020) NULL,
   PORTB VARCHAR2(1020) NULL,
   EQUIPNAMEA VARCHAR2(1020) NULL,
   EQUIPNAMEB VARCHAR2(1020) NULL,
   CHANNELLABELB VARCHAR2(1020) NULL,
   PCMID VARCHAR2(80) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SOURCE CHAR(4) NULL,
   ARENDATYPE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT PK_TN_CONSCHANNELS UNIQUE (CONSCHANID);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT C923_3974 CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT C923_3975 CHECK (source IN ('E' ,'R' ,'A' ,'X' ));
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT CKC_ARENDATY_TN_CH CHECK (arendatype IN (0 ,1 ,2 ,3 ));
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003533 CHECK ("CONSCHANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003534 CHECK ("CHAN_TYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003535 CHECK ("PURPOSE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003536 CHECK ("POSA" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003537 CHECK ("POSB" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003538 CHECK ("STATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003539 CHECK ("EQUIPMENTID_ENDA" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003540 CHECK ("EQUIPMENTID_ENDB" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003541 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003542 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHANNELS
  ADD CONSTRAINT SYS_C003543 CHECK ("ARENDATYPE" IS NOT NULL);

CREATE TABLE INFORMIX.TN_CONSCHAN2REQUEST
  (CONSCHANID NUMBER(10, 0) NULL,
   CONSREQID NUMBER(10, 0) NULL,
   LINKDATE DATE NULL,
   RECORDSTATUS CHAR(4) NULL);

ALTER TABLE INFORMIX.TN_CONSCHAN2REQUEST
  ADD CONSTRAINT PK_TN_CONSCHAN2REQ UNIQUE (CONSCHANID, CONSREQID);
 
ALTER TABLE INFORMIX.TN_CONSCHAN2REQUEST
  ADD CONSTRAINT SYS_C005605 CHECK ("CONSCHANID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHAN2REQUEST
  ADD CONSTRAINT SYS_C005606 CHECK ("CONSREQID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHAN2REQUEST
  ADD CONSTRAINT SYS_C005607 CHECK ("LINKDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_CONSCHAN2REQUEST
  ADD CONSTRAINT SYS_C005608 CHECK ("RECORDSTATUS" IS NOT NULL);

CREATE TABLE INFORMIX.TN_DISCOUNTS
  (ORGANIZATION_ NUMBER(10, 0) NULL,
   DATE_ DATE NULL,
   VALUE NUMBER(15, 2) NULL);

ALTER TABLE INFORMIX.TN_DISCOUNTS
  ADD CONSTRAINT PK_TN_DISCOUNTS UNIQUE (ORGANIZATION_, DATE_);
 
ALTER TABLE INFORMIX.TN_DISCOUNTS
  ADD CONSTRAINT SYS_C005637 CHECK ("ORGANIZATION_" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DISCOUNTS
  ADD CONSTRAINT SYS_C005638 CHECK ("DATE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DISCOUNTS
  ADD CONSTRAINT SYS_C005639 CHECK ("VALUE" IS NOT NULL);

CREATE TABLE INFORMIX.TN_DOCPOINTS
  (POINTID NUMBER(10, 0) NULL,
   DOCID NUMBER(10, 0) NULL,
   POINTTYPE NUMBER(10, 0) NULL,
   NAME CHAR(120) NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_DOCPOINTS
  ADD CONSTRAINT PK_TN_DOCPOINTS UNIQUE (POINTID);
 
ALTER TABLE INFORMIX.TN_DOCPOINTS
  ADD CONSTRAINT CKC_POINTTYP_TN_DO CHECK (pointtype IN (1 ,2 ));
 
ALTER TABLE INFORMIX.TN_DOCPOINTS
  ADD CONSTRAINT SYS_C005362 CHECK ("POINTID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCPOINTS
  ADD CONSTRAINT SYS_C005363 CHECK ("DOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCPOINTS
  ADD CONSTRAINT SYS_C005364 CHECK ("POINTTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.TN_DOCS
  (DOCID NUMBER(10, 0) NULL,
   FRAMEDOCID NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   TARIFONE NUMBER(15, 2) NULL,
   TARIFMONTH NUMBER(15, 2) NULL,
   INACTDATE DATE NULL,
   OUTACTDATE DATE NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT PK_TN_DOCS UNIQUE (DOCID);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005356 CHECK ("DOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005357 CHECK ("FRAMEDOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005358 CHECK ("DOCNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005359 CHECK ("DOCDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005360 CHECK ("TARIFONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_DOCS
  ADD CONSTRAINT SYS_C005361 CHECK ("TARIFMONTH" IS NOT NULL);

CREATE TABLE INFORMIX.TN_FRAMEDOCS
  (FRAMEDOCID NUMBER(10, 0) NULL,
   CONTRAGENT NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   DOCENDDATE DATE NULL,
   AUTOPROLONG NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   DOPAYOFF NUMBER(10, 0) NULL,
   COMMENT_ VARCHAR2(4000) NULL,
   MODIFIED DATE NULL,
   CREATED DATE NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT PK_TN_FRAMEDOCS UNIQUE (FRAMEDOCID);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT CKC_AUTOPROL_TN_FR CHECK (autoprolong IN (0 ,1 ));
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT CKC_DOPAYOFF_TN_FR CHECK (dopayoff IN (0 ,1 ));
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005914 CHECK ("FRAMEDOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005915 CHECK ("CONTRAGENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005916 CHECK ("DOCNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005917 CHECK ("DOCDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005918 CHECK ("AUTOPROLONG" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005919 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_FRAMEDOCS
  ADD CONSTRAINT SYS_C005920 CHECK ("DOPAYOFF" IS NOT NULL);

CREATE TABLE INFORMIX.TN_REFUSETYPES
  (REFUSEID NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL);

ALTER TABLE INFORMIX.TN_REFUSETYPES
  ADD CONSTRAINT PK_TN_REFUSETYPES UNIQUE (REFUSEID);
 
ALTER TABLE INFORMIX.TN_REFUSETYPES
  ADD CONSTRAINT SYS_C005352 CHECK ("REFUSEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_REFUSETYPES
  ADD CONSTRAINT SYS_C005353 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.TN_ROOMARDOCS2POS
  (ROOMDOCID NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TN_ROOMARDOCS2POS
  ADD CONSTRAINT PK_TN_ROOMARDOCS2P UNIQUE (ROOMDOCID, STORAGEPLACE);
 
ALTER TABLE INFORMIX.TN_ROOMARDOCS2POS
  ADD CONSTRAINT SYS_C005635 CHECK ("ROOMDOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARDOCS2POS
  ADD CONSTRAINT SYS_C005636 CHECK ("STORAGEPLACE" IS NOT NULL);

CREATE TABLE INFORMIX.TN_ROOMARENDADOCS
  (ROOMDOCID NUMBER(10, 0) NULL,
   PARENT_ROOMDOCID NUMBER(10, 0) NULL,
   CONTRAGENT NUMBER(10, 0) NULL,
   DOCNUMBER CHAR(120) NULL,
   DOCDATE DATE NULL,
   DOCENDDATE DATE NULL,
   AUTOPROLONG NUMBER(10, 0) NULL,
   CURRENCY NUMBER(10, 0) NULL,
   TARIFONE NUMBER(15, 2) NULL,
   TARIFMONTH NUMBER(15, 2) NULL,
   INACTDATE DATE NULL,
   OUTACTDATE DATE NULL,
   COMMENT_ VARCHAR2(4000) NULL);

ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT PK_TN_ROOMARENDADO UNIQUE (ROOMDOCID);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005344 CHECK ("ROOMDOCID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005345 CHECK ("CONTRAGENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005346 CHECK ("DOCNUMBER" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005347 CHECK ("DOCDATE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005348 CHECK ("AUTOPROLONG" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005349 CHECK ("CURRENCY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005350 CHECK ("TARIFONE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TN_ROOMARENDADOCS
  ADD CONSTRAINT SYS_C005351 CHECK ("TARIFMONTH" IS NOT NULL);

CREATE TABLE INFORMIX.T_OPERATORSBYREG
  (REGIONID NUMBER(10, 0) NULL,
   REGNAME CHAR(320) NULL,
   OPERATORID NUMBER(10, 0) NULL,
   VIEWF CHAR(4) NULL,
   EDITF CHAR(4) NULL,
   LOIGINID CHAR(320) NULL,
   PASSWORD CHAR(160) NULL,
   LASTNAME CHAR(320) NULL,
   FIRSTNAME CHAR(320) NULL,
   MIDDLENAME CHAR(320) NULL,
   NAME CHAR(800) NULL);

CREATE TABLE INFORMIX.TRAILLABEL
  (TRAILLABELID NUMBER(10, 0) NULL,
   TRAILID NUMBER(10, 0) NULL,
   TRAILLABEL VARCHAR2(200) NULL,
   TRAILLABELCOMMENT VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.TRAILLABEL
  ADD CONSTRAINT PK_TRAILLABEL UNIQUE (TRAILLABELID);
 
ALTER TABLE INFORMIX.TRAILLABEL
  ADD CONSTRAINT SYS_C004569 CHECK ("TRAILLABELID" IS NOT NULL);

CREATE TABLE INFORMIX.TRAILS
  (TRAILID NUMBER(10, 0) NULL,
   TRAILINDEX CHAR(80) NULL,
   TRAILTYPE CHAR(4) NULL,
   ENDUSERID NUMBER(10, 0) NULL,
   TRAILPORT NUMBER(10, 0) NULL,
   TRAILSTATE CHAR(4) NULL,
   TRAILDATAON DATE NULL,
   TRAILDATAOFF DATE NULL,
   TRAILTESTED NUMBER(10, 0) NULL,
   TRAILNX64INTERFA CHAR(40) NULL,
   TRAILNX64INTERFB CHAR(40) NULL,
   TRAILNXBRATE CHAR(40) NULL,
   TRAILNX64TSBIND CHAR(40) NULL,
   TRAILCOMMENTS CHAR(1000) NULL);

ALTER TABLE INFORMIX.TRAILS
  ADD CONSTRAINT PK_TRAILS UNIQUE (TRAILID);
 
ALTER TABLE INFORMIX.TRAILS
  ADD CONSTRAINT SYS_C004183 CHECK ("TRAILID" IS NOT NULL);

CREATE TABLE INFORMIX.TRAILSEGMENT
  (TRAILSEGMENTID NUMBER(10, 0) NULL,
   TRAILID NUMBER(10, 0) NULL,
   RENTDOCUMENT NUMBER(10, 0) NULL,
   HOPSID NUMBER(10, 0) NULL,
   SEGKEYWORD CHAR(80) NULL,
   SITEID_ENDA NUMBER(10, 0) NULL,
   SITEID_ENDB NUMBER(10, 0) NULL,
   SEGMENTCOMMENTS CHAR(1000) NULL);

ALTER TABLE INFORMIX.TRAILSEGMENT
  ADD CONSTRAINT PK_TRAILSEGMENT UNIQUE (TRAILSEGMENTID);
 
ALTER TABLE INFORMIX.TRAILSEGMENT
  ADD CONSTRAINT SYS_C004409 CHECK ("TRAILSEGMENTID" IS NOT NULL);

CREATE TABLE INFORMIX.TRX
  (TRXID NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   STANDID NUMBER(10, 0) NULL,
   STORAGECARD NUMBER(10, 0) NULL,
   QTY NUMBER(15, 3) NULL,
   PLANFACTTYPE NUMBER(10, 0) NULL,
   EQUIPMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT PK_TRX UNIQUE (TRXID);
 
ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT SYS_C006025 CHECK ("TRXID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT SYS_C006026 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT SYS_C006027 CHECK ("STANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT SYS_C006028 CHECK ("PLANFACTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRX
  ADD CONSTRAINT SYS_C006029 CHECK ("EQUIPMENT" IS NOT NULL);

CREATE TABLE INFORMIX.TRXRES
  (RESOURCE_ NUMBER(10, 0) NULL,
   BAND NUMBER(5, 0) NULL,
   DOUBLETRX CHAR(4) NULL);

ALTER TABLE INFORMIX.TRXRES
  ADD CONSTRAINT PK_TRXRES UNIQUE (RESOURCE_);
 
ALTER TABLE INFORMIX.TRXRES
  ADD CONSTRAINT CKC_BAND_TRXRE CHECK ((band IS NULL ) OR (band IN (900 ,1800 )) );
 
ALTER TABLE INFORMIX.TRXRES
  ADD CONSTRAINT CKC_DOUBLETR_TRXRE CHECK (doubletrx IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.TRXRES
  ADD CONSTRAINT SYS_C003595 CHECK ("RESOURCE_" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRXRES
  ADD CONSTRAINT SYS_C003596 CHECK ("DOUBLETRX" IS NOT NULL);

CREATE TABLE INFORMIX.TRX_TEMP
  (SECTORCODE NUMBER(10, 0) NULL,
   TRXID NUMBER(10, 0) NULL,
   TYPE_ CHAR(40) NULL,
   CARRIER NUMBER(10, 0) NULL);

CREATE TABLE INFORMIX.TRX2SECTORS
  (TRXID NUMBER(10, 0) NULL,
   ID_SECT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TRX2SECTORS
  ADD CONSTRAINT PK_TRX2SECTORS UNIQUE (TRXID, ID_SECT);
 
ALTER TABLE INFORMIX.TRX2SECTORS
  ADD CONSTRAINT SYS_C006009 CHECK ("TRXID" IS NOT NULL);
 
ALTER TABLE INFORMIX.TRX2SECTORS
  ADD CONSTRAINT SYS_C006010 CHECK ("ID_SECT" IS NOT NULL);

CREATE TABLE INFORMIX.TS_GRAPHICS_CFG
  (USERID NUMBER(10, 0) NULL,
   COLOR_POS_P NUMBER(10, 0) NULL,
   COLOR_POS_E NUMBER(10, 0) NULL,
   COLOR_POS_D NUMBER(10, 0) NULL,
   COLOR_HOPS_OPTIC_A NUMBER(10, 0) NULL,
   COLOR_HOPS_OPTIC_B NUMBER(10, 0) NULL,
   COLOR_HOPS_OPTIC_C NUMBER(10, 0) NULL,
   COLOR_HOPS_RLL_A NUMBER(10, 0) NULL,
   COLOR_HOPS_RRL_B NUMBER(10, 0) NULL,
   COLOR_HOPS_RRL_C NUMBER(10, 0) NULL,
   STYLE_HOPS_A NUMBER(10, 0) NULL,
   STYLE_HOPS_B NUMBER(10, 0) NULL,
   STYLE_HOPS_C NUMBER(10, 0) NULL,
   MAP_SYSTEM NUMBER(10, 0) NULL,
   POSSTATE NUMBER(10, 0) NULL,
   VIEW_LINES NUMBER(10, 0) NULL,
   VIEW_MAP NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.TS_GRAPHICS_CFG
  ADD CONSTRAINT PK_TS_GRAPHICS_CFG UNIQUE (USERID);
 
ALTER TABLE INFORMIX.TS_GRAPHICS_CFG
  ADD CONSTRAINT SYS_C005221 CHECK ("USERID" IS NOT NULL);

CREATE TABLE INFORMIX.TYPERESPONSIBILITY
  (IDRESPONSIBILITY NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   FLAGPRINT CHAR(4) NULL);

ALTER TABLE INFORMIX.TYPERESPONSIBILITY
  ADD CONSTRAINT PK_TYPERESPONSIBIL UNIQUE (IDRESPONSIBILITY);
 
ALTER TABLE INFORMIX.TYPERESPONSIBILITY
  ADD CONSTRAINT CKC_FLAGPRIN_TYPER CHECK (flagprint IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.TYPERESPONSIBILITY
  ADD CONSTRAINT SYS_C004150 CHECK ("IDRESPONSIBILITY" IS NOT NULL);
 
ALTER TABLE INFORMIX.TYPERESPONSIBILITY
  ADD CONSTRAINT SYS_C004151 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.TYPERESPONSIBILITY
  ADD CONSTRAINT SYS_C004152 CHECK ("FLAGPRINT" IS NOT NULL);

CREATE TABLE INFORMIX.UK_INVENT
  (RESOURCE_NAME CHAR(1020) NULL,
   CODENFS CHAR(1020) NULL,
   MANUFACTURE CHAR(1020) NULL,
   MODEL CHAR(1020) NULL,
   QTY NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.UK_INVENT
  ADD CONSTRAINT SYS_C005671 CHECK ("QTY" IS NOT NULL);

CREATE TABLE INFORMIX.UK_NRI_SERIALS
  (STORAGECARD NUMBER(10, 0) NULL,
   RESOURCE_ NUMBER(10, 0) NULL,
   MANUFSERIAL CHAR(80) NULL,
   SERIALNUMBER CHAR(80) NULL,
   LOCALNUMBER CHAR(80) NULL);
 
ALTER TABLE INFORMIX.UK_NRI_SERIALS
  ADD CONSTRAINT SYS_C005674 CHECK ("STORAGECARD" IS NOT NULL);
 
ALTER TABLE INFORMIX.UK_NRI_SERIALS
  ADD CONSTRAINT SYS_C005675 CHECK ("RESOURCE_" IS NOT NULL);

CREATE TABLE INFORMIX.UNITS
  (UNIT NUMBER(10, 0) NULL,
   NAME CHAR(320) NULL,
   SHORTNAME CHAR(160) NULL);

ALTER TABLE INFORMIX.UNITS
  ADD CONSTRAINT PK_UNITS UNIQUE (UNIT);
 
ALTER TABLE INFORMIX.UNITS
  ADD CONSTRAINT SYS_C004131 CHECK ("UNIT" IS NOT NULL);
 
ALTER TABLE INFORMIX.UNITS
  ADD CONSTRAINT SYS_C004132 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.USEDBANDLIST
  (BANDID NUMBER(10, 0) NULL,
   BANDNAME CHAR(80) NULL);

ALTER TABLE INFORMIX.USEDBANDLIST
  ADD CONSTRAINT PK_USEDBANDLIST UNIQUE (BANDID);
 
ALTER TABLE INFORMIX.USEDBANDLIST
  ADD CONSTRAINT SYS_C003407 CHECK ("BANDID" IS NOT NULL);
 
ALTER TABLE INFORMIX.USEDBANDLIST
  ADD CONSTRAINT SYS_C003408 CHECK ("BANDNAME" IS NOT NULL);

CREATE TABLE INFORMIX.USERREPGROUPS
  (USRGRPID NUMBER(10, 0) NULL,
   USRGRPNAME CHAR(320) NULL);

ALTER TABLE INFORMIX.USERREPGROUPS
  ADD CONSTRAINT PK_USERREPGROUPS UNIQUE (USRGRPID);
 
ALTER TABLE INFORMIX.USERREPGROUPS
  ADD CONSTRAINT SYS_C004663 CHECK ("USRGRPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREPGROUPS
  ADD CONSTRAINT SYS_C004664 CHECK ("USRGRPNAME" IS NOT NULL);

CREATE TABLE INFORMIX.USERREPORTS
  (USERREPID NUMBER(10, 0) NULL,
   USERGRPID NUMBER(10, 0) NULL,
   REPNAME CHAR(320) NULL,
   JSPNAME CHAR(320) NULL,
   JSPCLASS CHAR(320) NULL,
   CLASSNAME CHAR(320) NULL,
   RPTNAME CHAR(320) NULL,
   RPTPARAMS VARCHAR2(1020) NULL);

ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT PK_USERREPORTS UNIQUE (USERREPID);
 
ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT SYS_C004665 CHECK ("USERREPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT SYS_C004666 CHECK ("USERGRPID" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT SYS_C004667 CHECK ("REPNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT SYS_C004668 CHECK ("CLASSNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREPORTS
  ADD CONSTRAINT SYS_C004669 CHECK ("RPTNAME" IS NOT NULL);

CREATE TABLE INFORMIX.USERREQUESTS
  (REQUEST NUMBER(10, 0) NULL,
   DATETIMEIN DATE NULL,
   REQUESTTYPE NUMBER(10, 0) NULL,
   FILIALTYPE NUMBER(10, 0) NULL,
   REGIONID NUMBER(10, 0) NULL,
   MODULE NUMBER(10, 0) NULL,
   DESCRIPTION VARCHAR2(1020) NULL,
   STATUS CHAR(4) NULL,
   RFCNUM CHAR(120) NULL,
   WORKER NUMBER(10, 0) NULL,
   SUPREGID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT PK_USERREQUESTS UNIQUE (REQUEST);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT CKC_STATUS_USERR CHECK (status IN ('A' ,'B' ));
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003622 CHECK ("REQUEST" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003623 CHECK ("DATETIMEIN" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003624 CHECK ("REQUESTTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003625 CHECK ("FILIALTYPE" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003626 CHECK ("MODULE" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003627 CHECK ("DESCRIPTION" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003628 CHECK ("STATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.USERREQUESTS
  ADD CONSTRAINT SYS_C003629 CHECK ("WORKER" IS NOT NULL);

CREATE TABLE INFORMIX.UZOPOWERSUPPLYSET
  (RESOURCESET NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.UZOPOWERSUPPLYSET
  ADD CONSTRAINT PK_UZOPOWERSUPPLYS UNIQUE (RESOURCESET);
 
ALTER TABLE INFORMIX.UZOPOWERSUPPLYSET
  ADD CONSTRAINT SYS_C006056 CHECK ("RESOURCESET" IS NOT NULL);

CREATE TABLE INFORMIX.VENDORS
  (IDVENDOR NUMBER(10, 0) NULL,
   VENDORCODE NUMBER(10, 0) NULL,
   END_DATE_ACTIVE DATE NULL,
   NAME CHAR(1020) NULL,
   INN CHAR(160) NULL,
   TYPE_ CHAR(160) NULL,
   USEINNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SOURCE NUMBER(10, 0) NULL,
   ACCOUNTMANAGERFIO VARCHAR2(320) NULL,
   DIRECTORFIO VARCHAR2(320) NULL,
   DIRECTORJOB VARCHAR2(1020) NULL,
   PHISICALADDRESS VARCHAR2(1020) NULL,
   LEGALADDRESS VARCHAR2(1020) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   IDVENDORNFS NUMBER(10, 0) NULL,
   NAMEFORPRINTDOC VARCHAR2(1020) NULL,
   ADDRESSFORPRINTDOC VARCHAR2(1020) NULL,
   TYPEVENDOR NUMBER(10, 0) NULL,
   LASTNAME VARCHAR2(320) NULL,
   FIRSTNAME VARCHAR2(160) NULL,
   MIDDLENAME VARCHAR2(160) NULL,
   PASSPORTSER VARCHAR2(160) NULL,
   PASSPORTNUM VARCHAR2(160) NULL,
   PASSPORTDATE DATE NULL,
   PASSPORTWHOM VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT PK_VENDORS UNIQUE (IDVENDOR);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT CKC_USEINNRI_VENDO CHECK (useinnri IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT CKC_RECORDST_VENDO CHECK (recordstatus IN ('A' ,'D' ));
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT CKC_SOURCE_VENDO CHECK (source IN (1 ,2 ));
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005571 CHECK ("IDVENDOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005572 CHECK ("NAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005573 CHECK ("USEINNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005574 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005575 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005576 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005577 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005578 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005579 CHECK ("MODIFIED" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORS
  ADD CONSTRAINT SYS_C005580 CHECK ("TYPEVENDOR" IS NOT NULL);

CREATE TABLE INFORMIX.VENDORSITES
  (IDVENDORSITE NUMBER(10, 0) NULL,
   IDVENDOR NUMBER(10, 0) NULL,
   ISOWNERCONTRACT CHAR(4) NULL,
   IDOWNERNFS NUMBER(10, 0) NULL,
   VENDORSITECODE CHAR(60) NULL,
   NAME CHAR(1020) NULL,
   MATCHOPTION CHAR(4) NULL,
   ADDRESS CHAR(1020) NULL,
   KPP CHAR(160) NULL,
   USEINNRI CHAR(4) NULL,
   RECORDSTATUS CHAR(4) NULL,
   SOURCE NUMBER(10, 0) NULL,
   ACCOUNTMANAGERFIO VARCHAR2(320) NULL,
   DIRECTORFIO VARCHAR2(320) NULL,
   DIRECTORJOB VARCHAR2(1020) NULL,
   COMMENT_ VARCHAR2(1020) NULL,
   CREATEDBY NUMBER(10, 0) NULL,
   CREATED DATE NULL,
   MODIFIEDBY NUMBER(10, 0) NULL,
   MODIFIED DATE NULL,
   IDVENDORSITENFS NUMBER(10, 0) NULL,
   NAMEFORPRINTDOC VARCHAR2(1020) NULL,
   ADDRESSFORPRINTDOC VARCHAR2(1020) NULL,
   LASTNAME VARCHAR2(320) NULL,
   FIRSTNAME VARCHAR2(160) NULL,
   MIDDLENAME VARCHAR2(160) NULL,
   PASSPORTSER VARCHAR2(160) NULL,
   PASSPORTNUM VARCHAR2(160) NULL,
   PASSPORTDATE DATE NULL,
   PASSPORTWHOM VARCHAR2(320) NULL);

ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT PK_VENDORSITES UNIQUE (IDVENDORSITE);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005581 CHECK ("IDVENDORSITE" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005582 CHECK ("IDVENDOR" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005583 CHECK ("ISOWNERCONTRACT" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005584 CHECK ("IDOWNERNFS" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005585 CHECK ("USEINNRI" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005586 CHECK ("RECORDSTATUS" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005587 CHECK ("SOURCE" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005588 CHECK ("CREATEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005589 CHECK ("CREATED" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005590 CHECK ("MODIFIEDBY" IS NOT NULL);
 
ALTER TABLE INFORMIX.VENDORSITES
  ADD CONSTRAINT SYS_C005591 CHECK ("MODIFIED" IS NOT NULL);

CREATE TABLE INFORMIX.VIEWLICENCIESONPOS
  (POSITION NUMBER(10, 0) NULL,
   FAS DATE NULL,
   FASM DATE NULL,
   RUTSR DATE NULL,
   RUTSRM DATE NULL,
   AIR_GR DATE NULL,
   AIR_GRM DATE NULL,
   AIR_W DATE NULL,
   AIR_WM DATE NULL,
   GPS DATE NULL,
   GPSM DATE NULL,
   GASN DATE NULL,
   GASNM DATE NULL,
   SES DATE NULL,
   SESM DATE NULL,
   VCH DATE NULL,
   VCHM DATE NULL,
   TU DATE NULL,
   TUM DATE NULL,
   OTVOD DATE NULL,
   OTVODM DATE NULL,
   KADASTR DATE NULL,
   KADASTRM DATE NULL,
   PROPERTY DATE NULL,
   PROPERTYM DATE NULL,
   NOTE CHAR(2000) NULL,
   ISNOTE CHAR(4) NULL,
   NOTEM DATE NULL);

ALTER TABLE INFORMIX.VIEWLICENCIESONPOS
  ADD CONSTRAINT PK_VIEWLICENCIESONPOS UNIQUE (POSITION);
 
ALTER TABLE INFORMIX.VIEWLICENCIESONPOS
  ADD CONSTRAINT CKC_ISNOTE_VIEWL CHECK (isnote IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.VIEWLICENCIESONPOS
  ADD CONSTRAINT SYS_C004895 CHECK ("POSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.VIEWLICENCIESONPOS
  ADD CONSTRAINT SYS_C004896 CHECK ("ISNOTE" IS NOT NULL);

CREATE TABLE INFORMIX.VIMPELCOM_SYSTEM
  (ID NUMBER(10, 0) NULL,
   ALIAS VARCHAR2(40) NULL,
   NAME VARCHAR2(256) NULL,
   PERSONID NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.VIMPELCOM_SYSTEM
  ADD CONSTRAINT PK_VIMPELCOM_SYSTE UNIQUE (ID);
 
ALTER TABLE INFORMIX.VIMPELCOM_SYSTEM
  ADD CONSTRAINT SYS_C003824 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.VIMPELCOM_SYSTEM
  ADD CONSTRAINT SYS_C003825 CHECK ("ALIAS" IS NOT NULL);
 
ALTER TABLE INFORMIX.VIMPELCOM_SYSTEM
  ADD CONSTRAINT SYS_C003826 CHECK ("NAME" IS NOT NULL);

CREATE TABLE INFORMIX.VOLTAGELIST
  (VOLTAGEID NUMBER(10, 0) NULL,
   VOLTAGENAME CHAR(80) NULL);

ALTER TABLE INFORMIX.VOLTAGELIST
  ADD CONSTRAINT PK_VOLTAGELIST UNIQUE (VOLTAGEID);
 
ALTER TABLE INFORMIX.VOLTAGELIST
  ADD CONSTRAINT SYS_C003409 CHECK ("VOLTAGEID" IS NOT NULL);
 
ALTER TABLE INFORMIX.VOLTAGELIST
  ADD CONSTRAINT SYS_C003410 CHECK ("VOLTAGENAME" IS NOT NULL);

CREATE TABLE INFORMIX.V_PEOPLE_TABNUM
  (MAN NUMBER(10, 0) NULL,
   FIRSTNAME CHAR(320) NULL,
   LASTNAME CHAR(320) NULL,
   MIDDLENAME CHAR(320) NULL,
   TABNUM NUMBER(10, 0) NULL);
 
ALTER TABLE INFORMIX.V_PEOPLE_TABNUM
  ADD CONSTRAINT SYS_C003413 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.V_PEOPLE_TABNUM
  ADD CONSTRAINT SYS_C003414 CHECK ("FIRSTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.V_PEOPLE_TABNUM
  ADD CONSTRAINT SYS_C003415 CHECK ("LASTNAME" IS NOT NULL);
 
ALTER TABLE INFORMIX.V_PEOPLE_TABNUM
  ADD CONSTRAINT SYS_C003416 CHECK ("MIDDLENAME" IS NOT NULL);

CREATE TABLE INFORMIX.WLAN
  (EQUIPMENT NUMBER(10, 0) NULL,
   NUMBER_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.WLAN
  ADD CONSTRAINT PK_WLAN UNIQUE (EQUIPMENT);
 
ALTER TABLE INFORMIX.WLAN
  ADD CONSTRAINT SYS_C004503 CHECK ("EQUIPMENT" IS NOT NULL);
 
ALTER TABLE INFORMIX.WLAN
  ADD CONSTRAINT SYS_C004504 CHECK ("NUMBER_" IS NOT NULL);

CREATE TABLE INFORMIX.WORKERS
  (WORKER NUMBER(10, 0) NULL,
   COMPANY NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL,
   WORKPOSITION NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   LOTUSADDRESS CHAR(160) NULL,
   EMAIL CHAR(160) NULL,
   PHONE1 CHAR(160) NULL,
   PHONE2 CHAR(160) NULL,
   LOCALPHONE CHAR(160) NULL,
   FAX CHAR(160) NULL,
   MOBILEPHONE CHAR(160) NULL,
   PLATINUMCODE NUMBER(10, 0) NULL,
   ISACTIVE CHAR(4) NULL,
   ISOUR CHAR(4) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   ISSERVICESTUFF CHAR(4) NULL);

ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT PK_WORKERS UNIQUE (WORKER);
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT CKC_ISACTIVE_WORKE CHECK ((isactive IS NULL ) OR (isactive IN ('Y' ,'N' )) );
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT CKC_ISOUR_WORKE CHECK (isour IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT CKC_ISSERVIC_WORKE CHECK (isservicestuff IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT SYS_C004000 CHECK ("WORKER" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT SYS_C004001 CHECK ("MAN" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT SYS_C004002 CHECK ("WORKPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT SYS_C004003 CHECK ("ISOUR" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS
  ADD CONSTRAINT SYS_C004004 CHECK ("ISSERVICESTUFF" IS NOT NULL);

CREATE TABLE INFORMIX.WORKERS_HIST
  (ID NUMBER(10, 0) NULL,
   DATE_IN DATE NULL,
   WORKERID NUMBER(10, 0) NULL,
   MAN NUMBER(10, 0) NULL,
   DIVISION NUMBER(10, 0) NULL,
   WORKPOSITION NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.WORKERS_HIST
  ADD CONSTRAINT U299_1223 UNIQUE (ID);
 
ALTER TABLE INFORMIX.WORKERS_HIST
  ADD CONSTRAINT SYS_C004461 CHECK ("ID" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS_HIST
  ADD CONSTRAINT SYS_C004462 CHECK ("WORKERID" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKERS_HIST
  ADD CONSTRAINT SYS_C004463 CHECK ("MAN" IS NOT NULL);

CREATE TABLE INFORMIX.WORKPOSITIONS
  (WORKPOSITION NUMBER(10, 0) NULL,
   NAME CHAR(800) NULL,
   ISACTIVE CHAR(4) NULL);

ALTER TABLE INFORMIX.WORKPOSITIONS
  ADD CONSTRAINT PK_WORKPOSITIONS UNIQUE (WORKPOSITION);
 
ALTER TABLE INFORMIX.WORKPOSITIONS
  ADD CONSTRAINT CKC_ISACTIVE_WORKP CHECK (isactive IN ('Y' ,'N' ));
 
ALTER TABLE INFORMIX.WORKPOSITIONS
  ADD CONSTRAINT SYS_C004129 CHECK ("WORKPOSITION" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKPOSITIONS
  ADD CONSTRAINT SYS_C004130 CHECK ("ISACTIVE" IS NOT NULL);

CREATE TABLE INFORMIX.WORKRESPONSIBILITY
  (WORKER NUMBER(10, 0) NULL,
   IDRESPONSIBILITY NUMBER(10, 0) NULL,
   STORAGEPLACE NUMBER(10, 0) NULL,
   RESPTYPE CHAR(4) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   OPERATOR_ NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.WORKRESPONSIBILITY
  ADD CONSTRAINT PK_WORKRESPONSIBIL UNIQUE (IDRESPONSIBILITY, STORAGEPLACE, RESPTYPE);
 
ALTER TABLE INFORMIX.WORKRESPONSIBILITY
  ADD CONSTRAINT CKC_RESPTYPE_WORKR CHECK (resptype IN ('W' ,'O' ));
 
ALTER TABLE INFORMIX.WORKRESPONSIBILITY
  ADD CONSTRAINT SYS_C004295 CHECK ("IDRESPONSIBILITY" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKRESPONSIBILITY
  ADD CONSTRAINT SYS_C004296 CHECK ("STORAGEPLACE" IS NOT NULL);
 
ALTER TABLE INFORMIX.WORKRESPONSIBILITY
  ADD CONSTRAINT SYS_C004297 CHECK ("RESPTYPE" IS NOT NULL);

CREATE TABLE INFORMIX.WORKS
  (WORKID NUMBER(10, 0) NULL,
   CKSID NUMBER(10, 0) NULL,
   PROJECTID NUMBER(10, 0) NULL,
   NAME CHAR(2000) NULL,
   DESCRIPTION VARCHAR2(4000) NULL,
   PLANBEGDATE DATE NULL,
   PLANENDDATE DATE NULL,
   FACTBEGDATE DATE NULL,
   FACTENDDATE DATE NULL,
   CKSBEGDATE CHAR(200) NULL,
   CKSENDDATE CHAR(200) NULL,
   EXECUTOR NUMBER(10, 0) NULL,
   ORGANIZATION_ NUMBER(10, 0) NULL,
   STATE NUMBER(10, 0) NULL,
   CKSSTATE CHAR(512) NULL,
   EXECNAME CHAR(1024) NULL,
   COMMENTS CHAR(2000) NULL);

ALTER TABLE INFORMIX.WORKS
  ADD CONSTRAINT PK_WORKS UNIQUE (WORKID);
 
ALTER TABLE INFORMIX.WORKS
  ADD CONSTRAINT SYS_C004819 CHECK ("WORKID" IS NOT NULL);

CREATE TABLE INFORMIX.WORKS_COMMENTS
  (ID NUMBER(10, 0) NULL,
   WORKID NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   DESC_ CHAR(1024) NULL,
   OWNER CHAR(1024) NULL);

ALTER TABLE INFORMIX.WORKS_COMMENTS
  ADD CONSTRAINT PK_WORKS_COMMENTS UNIQUE (ID);
 
ALTER TABLE INFORMIX.WORKS_COMMENTS
  ADD CONSTRAINT SYS_C004525 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.WORKS_DOC
  (ID NUMBER(10, 0) NULL,
   WORKID NUMBER(10, 0) NULL,
   NAME CHAR(200) NULL,
   DESC_ CHAR(1024) NULL,
   OWNER CHAR(400) NULL,
   BODY_ BLOB NULL);

ALTER TABLE INFORMIX.WORKS_DOC
  ADD CONSTRAINT PK_WORKS_DOC UNIQUE (ID);
 
ALTER TABLE INFORMIX.WORKS_DOC
  ADD CONSTRAINT SYS_C004888 CHECK ("ID" IS NOT NULL);

CREATE TABLE INFORMIX.WORKS_DOCSNRI
  (IDDEP NUMBER(10, 0) NULL,
   WORKID NUMBER(10, 0) NULL,
   DOCUMENT NUMBER(10, 0) NULL);

ALTER TABLE INFORMIX.WORKS_DOCSNRI
  ADD CONSTRAINT PK_WORKS_DOCSNRI UNIQUE (IDDEP);
 
ALTER TABLE INFORMIX.WORKS_DOCSNRI
  ADD CONSTRAINT SYS_C004823 CHECK ("IDDEP" IS NOT NULL);

CREATE VIEW INFORMIX.RP_GET_ACONTRACTS_Y
  (MAINLEASEDOCUMENT,
   STARTDATE)
  AS SELECT 
   x0.MAINLEASEDOCUMENT, 
   max(x1.STARTDATE)
FROM
   INFORMIX.LEASEARENDAAGRMNTS x0, INFORMIX.LEASECONTRACTS x1
WHERE
   x1.LEASEDOCUMENT = x0.LEASEDOCUMENT  
   AND x0.MAINLEASEDOCUMENT IS NOT NULL   
   AND x0.ISACTIVE = 'Y'  
   AND x1.CONTRACTTYPE = 'A'  
   AND x1.CONTRACTSTATE  'C' 
GROUP BY 
   x0.MAINLEASEDOCUMENT;

CREATE VIEW INFORMIX.RP_GET_PHONES
  (BAN,
   PHONENUMBER,
   PHONESTATUS,
   NETSTANDART,
   BEN,
   SOC,
   SOCDESCRIPTION)
  AS SELECT 
   x0.BAN, 
   x1.PHONENUMBER, 
   x1.PHONESTATUS, 
   x1.NETSTANDARD, 
   x1.BEN, 
   x1.SOC, 
   x1.SOCDESCRIPTION
FROM
   INFORMIX.LEASEABONENTBAN x0, INFORMIX.LEASEABONENTPHONES x1
WHERE
   x0.LEASEDOCUMENT = x1.LEASEDOCUMENT ;

CREATE VIEW INFORMIX.RP_GETSZ_POS
  (IDHEADER,
   IDPOS,
   PHONE,
   TARIFPLAN,
   COMCARDCNT,
   CARDAMOUNT,
   SIMCARDCNT,
   EQUIPNAME,
   EQUIPCNT,
   SERVICE,
   OPERTYPE,
   STARTDATE,
   ENDDATE,
   ISGARANTIE,
   CARDNAME)
  AS SELECT 
   x0.IDHEADER, 
   x1.IDPOS, 
   x1.PHONENUMBER, 
   x1.TARIFPLAN, 
   x1.COMCARDCNT, 
   x1.CARDAMOUNT, 
   x1.SIMCARDCNT, 
   x1.EQUIPNAME, 
   x1.EQUIPCNT, 
   x1.SERVICE, 
   x1.OPERTYPE, 
   x1.STARTDATE, 
   x1.ENDDATE, 
   x1.ISGARANTIE, 
   x1.CARDNAME
FROM
   INFORMIX.OFFICEMEMOPOS x1, INFORMIX.OFFICEMEMOHEADERS x0
WHERE
   x1.IDHEADER = x0.IDHEADER ;

CREATE VIEW INFORMIX.RP_GETSZ1
  (IDHEADER,
   NUMBER_SZ,
   DATE_SZ,
   TYPE_SZ,
   USETYPE,
   MAN,
   FIRSTNAME,
   LASTNAME,
   MIDDLENAME,
   BAN,
   DOCDATE,
   DOCNUMBER,
   DOCTYPE,
   EXECNAME,
   ORGEXECUTOR,
   MAINPOSITION)
  AS SELECT 
   x0.IDHEADER, 
   x0.NUMBER_, 
   x0.DATE_, 
   x0.TYPE_, 
   x0.USETYPE, 
   x1.MAN, 
   x1.FIRSTNAME, 
   x1.LASTNAME, 
   x1.MIDDLENAME, 
   x2.BAN, 
   x3.DOCDATE, 
   x3.DOCNUMBER, 
   x3.DOCTYPE, 
   x4.EXECNAME, 
   x4.OLDORGEXECUTOR, 
   x5.MAINPOSITION
FROM
   INFORMIX.OFFICEMEMOHEADERS x0, INFORMIX.LEASECONTRACTS x4, INFORMIX.PEOPLE x1, INFORMIX.LEASEABONENTBAN x2, INFORMIX.LEASEDOCUMENTS x3, INFORMIX.LEASEARENDAAGRMNTS x5
WHERE
   x0.ARENDACONTRACT = x4.LEASEDOCUMENT 
   AND x1.MAN = x0.MAN  
   AND x2.LEASEDOCUMENT = x0.ABONENTCONTRACT  
   AND x0.ARENDACONTRACT = x5.LEASEDOCUMENT  
   AND x0.ARENDACONTRACT = x3.LEASEDOCUMENT ;

CREATE VIEW INFORMIX.RP_LEASEARENDAAGRMNTS
  (LEASEDOCUMENT,
   MAINLEASEDOCUMENT,
   ISACTIVE,
   NUMBEROFPHONES,
   CALCELECTROTYPE,
   ISDOGELECTRO,
   DOGELECTONUM,
   DOGELECTRODATE,
   NUMBEROFPHONESTEMP,
   MAINPOSITION)
  AS SELECT 
   x0.LEASEDOCUMENT, 
   x0.MAINLEASEDOCUMENT, 
   x0.ISACTIVE, 
   x0.NUMBEROFPHONES, 
   x0.CALCELECTROTYPE, 
   x0.ISDOGELECTRO, 
   x0.DOGELECTONUM, 
   x0.DOGELECTRODATE, 
   x0.NUMBEROFPHONESTEMP, 
   x0.MAINPOSITION
FROM
   INFORMIX.LEASEARENDAAGRMNTS x0
WHERE
   x0.MAINPOSITION IS NOT NULL  
UNION
SELECT 
   x1.LEASEDOCUMENT, 
   x1.MAINLEASEDOCUMENT, 
   x1.ISACTIVE, 
   x1.NUMBEROFPHONES, 
   x1.CALCELECTROTYPE, 
   x1.ISDOGELECTRO, 
   x1.DOGELECTONUM, 
   x1.DOGELECTRODATE, 
   x1.NUMBEROFPHONESTEMP, 
   x2.MAINPOSITION
FROM
   INFORMIX.LEASEARENDAAGRMNTS x2, INFORMIX.LEASEARENDAAGRMNTS x1
WHERE
   x2.LEASEDOCUMENT = x1.MAINLEASEDOCUMENT 
   AND x1.MAINPOSITION IS NULL  ;

CREATE VIEW INFORMIX.RP_LEASEARENDAAGRMNTS2
  (LEASEDOCUMENT_2,
   MAINLEASEDOCUMENT,
   ISACTIVE,
   NUMBEROFPHONES,
   CALCELECTROTYPE,
   ISDOGELECTRO,
   DOGELECTONUM,
   DOGELECTRODATE,
   NUMBEROFPHONESTEMP,
   MAINPOSITION)
  AS SELECT 
   x0.LEASEDOCUMENT, 
   x0.MAINLEASEDOCUMENT, 
   x0.ISACTIVE, 
   x0.NUMBEROFPHONES, 
   x0.CALCELECTROTYPE, 
   x0.ISDOGELECTRO, 
   x0.DOGELECTONUM, 
   x0.DOGELECTRODATE, 
   x0.NUMBEROFPHONESTEMP, 
   x0.MAINPOSITION
FROM
   INFORMIX.LEASEARENDAAGRMNTS x0
WHERE
   x0.MAINLEASEDOCUMENT IS NOT NULL  ;

CREATE VIEW INFORMIX.TEMP_TBL1
  (INTTABNUM,
   VCHLASTNAME,
   VCHFIRSTNAME,
   VCHMIDDLENAME,
   VCHPOSITION,
   VCHTELW,
   VCHEMAIL,
   VCHFULLPATHNAME)
  AS SELECT 
   x0.INTTABNUM, 
   x0.VCHLASTNAME, 
   x0.VCHFIRSTNAME, 
   x0.VCHMIDDLENAME, 
   x0.VCHPOSITION, 
   x0.VCHTELW, 
   x0.VCHEMAIL, 
   x1.VCHFULLPATHNAME
FROM
   INFORMIX.TBLUSERS x0, INFORMIX.TBLDEPARTMENTS x1
WHERE
   x0.INTDEPARTMENTID = x1.INTDEPARTMENTID ;

CREATE VIEW INFORMIX.V_BS_CONT_SW
  (DCSID,
   GSMID,
   DAMPSID,
   DAMPSNAME,
   POSSTATE,
   REGIONID,
   LATITUDE,
   LONGITUDE,
   NAME,
   ADDRESS,
   NUMBER_,
   NAMEBS,
   TYPE_,
   CONTROLLER,
   OTVETBS,
   SWITCH,
   NUMBERCONT,
   NAMECONT,
   NUMBERSWITCH)
  AS SELECT 
   x0.DCSID, 
   x0.GSMID, 
   x0.DAMPSID, 
   x0.DAMPSNAME, 
   x0.POSSTATE, 
   x0.REGIONID, 
   x0.LATITUDE, 
   x0.LONGITUDE, 
   x1.NAME, 
   x1.ADDRESS, 
   x2.NUMBER_, 
   x2.NAME, 
   x2.TYPE_, 
   x2.CONTROLLER, 
   
   (
      SELECT 
         ((((RTRIM(LTRIM(x5.LASTNAME, ' '), ' ') CONCAT ' ') CONCAT RTRIM(LTRIM(x5.FIRSTNAME, ' '), ' ')) CONCAT ' ') CONCAT RTRIM(LTRIM(x5.MIDDLENAME, ' '), ' '))
      FROM
         INFORMIX.WORKERS x6, INFORMIX.PEOPLE x5, INFORMIX.WORKRESPONSIBILITY x7
      WHERE
         x6.MAN = x5.MAN 
         AND x7.STORAGEPLACE = x0.STORAGEPLACE  
         AND x7.IDRESPONSIBILITY = 7  
         AND x7.RESPTYPE = 'W'  
         AND x7.WORKER = x6.WORKER 
   ), 
   x4.SWITCH, 
   x4.NUMBER_, 
   x4.NAME, 
   
   (
      SELECT 
         x8.NUMBER_
      FROM
         INFORMIX.SWITCHES x8
      WHERE
         x8.EQUIPMENT = x4.SWITCH 
   )
FROM
   INFORMIX.CONTROLLERS x4, INFORMIX.BASESTATIONS x2, INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1, INFORMIX.EQUIPMENT x3
WHERE
   x4.EQUIPMENT = x2.CONTROLLER 
   AND x0.STORAGEPLACE = x1.STORAGEPLACE  
   AND x0.STORAGEPLACE = x3.POSITION  
   AND x3.EQUIPMENT = x2.EQUIPMENT ;

CREATE VIEW INFORMIX.V_BS_FOR_USTYG
  (STORAGEPLACE,
   REGIONID,
   DAMPSID,
   GSMID,
   NAME,
   ADDRESS)
  AS SELECT 
   x0.STORAGEPLACE, 
   x0.REGIONID, 
   x0.DAMPSID, 
   x0.GSMID, 
   x1.NAME, 
   x1.ADDRESS
FROM
   INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1
WHERE
   x1.STORAGEPLACE = x0.STORAGEPLACE  
   AND x0.POSSTATE = 'E'  
   AND x0.DAMPSID IS NOT NULL   
   OR x0.GSMID IS NOT NULL   
   AND x0.REGIONID >= 1  
   AND x0.REGIONID <= 12 ;

CREATE VIEW INFORMIX.V_CONT_POS_SW
  (EQUIPMENT,
   SWITCH,
   NUMBER_,
   NAMECONT,
   POSITION,
   STATE,
   DCSID,
   GSMID,
   DAMPSID,
   DAMPSNAME,
   POSSTATE,
   REGIONID,
   LATITUDE,
   LONGITUDE,
   NAMEPOS,
   ADDRESS,
   NUMBERSW,
   TYPESW)
  AS SELECT 
   x0.EQUIPMENT, 
   x0.SWITCH, 
   x0.NUMBER_, 
   x0.NAME, 
   x1.POSITION, 
   x1.STATE, 
   x2.DCSID, 
   x2.GSMID, 
   x2.DAMPSID, 
   x2.DAMPSNAME, 
   x2.POSSTATE, 
   x2.REGIONID, 
   x2.LATITUDE, 
   x2.LONGITUDE, 
   x3.NAME, 
   x3.ADDRESS, 
   x4.NUMBER_, 
   x4.TYPE_
FROM
   INFORMIX.CONTROLLERS x0, INFORMIX.SWITCHES x4, INFORMIX.EQUIPMENT x1, INFORMIX.POSITIONS x2, INFORMIX.STORAGEPLACES x3
WHERE
   x0.SWITCH = x4.EQUIPMENT 
   AND x0.EQUIPMENT = x1.EQUIPMENT  
   AND x1.POSITION = x2.STORAGEPLACE  
   AND x2.STORAGEPLACE = x3.STORAGEPLACE ;

CREATE VIEW INFORMIX.V_CONTROLERS1
  (STORAGEPLACE,
   EQUIPMENT)
  AS SELECT 
   x0.STORAGEPLACE, 
   x3.EQUIPMENT
FROM
   INFORMIX.CONTROLLERS x3, INFORMIX.EQUIPMENT x2, INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1
WHERE
   x3.EQUIPMENT = x2.EQUIPMENT 
   AND x1.STORAGEPLACE = x0.STORAGEPLACE  
   AND x0.STORAGEPLACE = x2.POSITION ;

CREATE VIEW INFORMIX.V_CONTROLLERS
  (STORAGEPLACE,
   EQUIPMENT)
  AS SELECT 
   x0.STORAGEPLACE, 
   x3.EQUIPMENT
FROM
   INFORMIX.CONTROLLERS x3, INFORMIX.EQUIPMENT x2, INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1
WHERE
   x3.EQUIPMENT = x2.EQUIPMENT 
   AND x1.STORAGEPLACE = x0.STORAGEPLACE  
   AND x0.STORAGEPLACE = x2.POSITION ;

CREATE VIEW INFORMIX.V_CONTROLLERS1
  (STORAGEPLACE,
   EQUIPMENT)
  AS SELECT 
   x0.STORAGEPLACE, 
   x2.EQUIPMENT
FROM
   INFORMIX.POSITIONS x0, INFORMIX.EQUIPMENT x1, INFORMIX.CONTROLLERS x2
WHERE
   x0.STORAGEPLACE = x1.POSITION 
   AND x2.EQUIPMENT = x1.EQUIPMENT ;

CREATE VIEW INFORMIX.V_ENDBUILD
  (STORAGEPLACE,
   REGIONID,
   DATE_ENDBUILD)
  AS SELECT 
   x0.STORAGEPLACE, 
   x0.REGIONID, 
   x0.DATE_ENDBUILD
FROM
   INFORMIX.POSITIONS x0
WHERE
   x0.DATE_ENDBUILD IS NOT NULL  ;

CREATE VIEW INFORMIX.V_EQUIP_DATALOAD1
  (PLMN,
   GSMID,
   POSNUMBER,
   NAMEPOS,
   BTSGENERATION,
   DATAHEADID,
   DATALOADID,
   FILENAME,
   BSCID,
   GSMID_1,
   BSCUSERLABEL,
   BTSUSERLABEL,
   NETID,
   CYPHER,
   LOCATION,
   NETELEMENT,
   LOADTIME,
   FIRSTCOMMDATE)
  AS SELECT DISTINCT 
   x3.PLMN, 
   x1.GSMID, 
   
   (
      SELECT 
         x4.GSMID
      FROM
         INFORMIX.POSITIONS x4, INFORMIX.STORAGEPLACES x5
      WHERE
         x4.STORAGEPLACE = x5.STORAGEPLACE  
         AND x4.POSSTATE = 'E'  
         AND x4.GSMID = DECODE(1, DECODE(greatest(x1.GSMID, 2000), x1.GSMID, 0, 1), (x1.GSMID - 1000), x1.GSMID) 
   ), 
   
   (
      SELECT 
         x7.NAME
      FROM
         INFORMIX.POSITIONS x6, INFORMIX.STORAGEPLACES x7
      WHERE
         x6.STORAGEPLACE = x7.STORAGEPLACE  
         AND x6.POSSTATE = 'E'  
         AND x6.GSMID = DECODE(1, DECODE(greatest(x1.GSMID, 2000), x1.GSMID, 0, 1), (x1.GSMID - 1000), x1.GSMID) 
   ), 
   x0.BTSGENERATION, 
   x2.DATAHEADID, 
   x2.DATALOADID, 
   x2.FILENAME, 
   x2.BSCID, 
   x2.GSMID, 
   x2.BSCUSERLABEL, 
   x2.BTSUSERLABEL, 
   x2.NETID, 
   x2.CYPHER, 
   x2.LOCATION, 
   x2.NETELEMENT, 
   x2.LOADTIME, 
   x2.FIRSTCOMMDATE
FROM
   INFORMIX.ALCATELSECTOR x1, INFORMIX.ALCATELBTS x0, INFORMIX.ALCATELEQUIPDATAHEADER x2, INFORMIX.EQUIPMENTDATALOADS x3
WHERE
   x1.DATALOADID = x0.DATALOADID 
   AND x0.OMCR = x1.OMCR  
   AND x0.BSMID = x1.BSMID  
   AND x2.BSCUSERLABEL = x0.BSCUSERLABEL  
   AND x2.BTSUSERLABEL = x0.BTSLABEL  
   AND x0.DATALOADID = 
   (
      SELECT 
         x8.DATALOADID
      FROM
         INFORMIX.EQUIPMENTDATALOADS x8
      WHERE
         x8.PLMN = 1  
         AND x8.DATALOADDATE = 
         (
            SELECT 
               max(x9.DATALOADDATE)
            FROM
               INFORMIX.EQUIPMENTDATALOADS x9
            WHERE
               x9.PLMN = 1 
         ) 
   )  
   OR x0.DATALOADID = 
   (
      SELECT 
         x10.DATALOADID
      FROM
         INFORMIX.EQUIPMENTDATALOADS x10
      WHERE
         x10.PLMN = 9  
         AND x10.DATALOADDATE = 
         (
            SELECT 
               max(x11.DATALOADDATE)
            FROM
               INFORMIX.EQUIPMENTDATALOADS x11
            WHERE
               x11.PLMN = 9 
         ) 
   )  
   AND x2.DATALOADID = x0.DATALOADID ;

CREATE VIEW INFORMIX.V_NUMEQPBYREG
  (STORAGEPLACE,
   REGIONID,
   NAME,
   NUMBS,
   NUMSW,
   NUMCO,
   NUMAN,
   NUMSE)
  AS SELECT 
   x0.STORAGEPLACE, 
   x0.REGIONID, 
   x1.NAME, 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.BASESTATIONS x3, INFORMIX.EQUIPMENT x2
      WHERE
         x3.EQUIPMENT = x2.EQUIPMENT 
         AND x2.POSITION = x0.STORAGEPLACE 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.SWITCHES x5, INFORMIX.EQUIPMENT x4
      WHERE
         x5.EQUIPMENT = x4.EQUIPMENT 
         AND x4.POSITION = x0.STORAGEPLACE 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.CONTROLLERS x7, INFORMIX.EQUIPMENT x6
      WHERE
         x7.EQUIPMENT = x6.EQUIPMENT 
         AND x6.POSITION = x0.STORAGEPLACE 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.ANTENNES x9, INFORMIX.EQUIPMENT x8
      WHERE
         x9.EQUIPMENT = x8.EQUIPMENT 
         AND x8.POSITION = x0.STORAGEPLACE 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.SECTORS x11, INFORMIX.EQUIPMENT x10
      WHERE
         x11.EQUIPMENT = x10.EQUIPMENT 
         AND x10.POSITION = x0.STORAGEPLACE 
   )
FROM
   INFORMIX.SECTORS x11, INFORMIX.EQUIPMENT x10, INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1
WHERE
   x11.EQUIPMENT = x10.EQUIPMENT 
   AND x11.EQUIPMENT = x10.EQUIPMENT 
   AND x0.STORAGEPLACE = x1.STORAGEPLACE  
   AND x0.POSSTATE = 'E'  
   AND x0.REGIONID >= 1  
   AND x0.REGIONID <= 12 ;

CREATE VIEW INFORMIX.V_OTVETSTV
  (STORAGEPLACE,
   WORKER,
   LASTNAME)
  AS SELECT 
   x0.STORAGEPLACE, 
   x2.WORKER, 
   x1.LASTNAME
FROM
   INFORMIX.WORKERS x2, INFORMIX.PEOPLE x1, INFORMIX.POSITIONS x0, INFORMIX.WORKRESPONSIBILITY x3
WHERE
   x2.MAN = x1.MAN 
   AND x0.STORAGEPLACE = x3.STORAGEPLACE  
   AND x3.IDRESPONSIBILITY = 3  
   AND x3.RESPTYPE = 'W'  
   AND x3.WORKER = x2.WORKER ;

CREATE VIEW INFORMIX.V_POS_AMOUNT_BYREG
  (SUPREGID,
   SUPREGNAME,
   REGIONID,
   REGNAME,
   POS_E,
   POS_P,
   POS_V,
   BS_900_W_A,
   BS_900_W_N,
   BS_1800_W_A,
   BS_1800_W_N,
   BS_900_P,
   BS_1800_P)
  AS SELECT 
   x1.SUPREGID, 
   x1.SUPREGNAME, 
   x0.REGIONID, 
   x0.REGNAME, 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x2, INFORMIX.STORAGEPLACES x3
      WHERE
         x2.STORAGEPLACE = x3.STORAGEPLACE 
         AND x2.REGIONID = x0.REGIONID  
         AND x2.POSSTATE = 'E' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x4, INFORMIX.STORAGEPLACES x5
      WHERE
         x4.STORAGEPLACE = x5.STORAGEPLACE 
         AND x4.REGIONID = x0.REGIONID  
         AND x4.POSSTATE = 'P' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x6, INFORMIX.STORAGEPLACES x7
      WHERE
         x6.STORAGEPLACE = x7.STORAGEPLACE 
         AND x6.REGIONID = x0.REGIONID  
         AND x6.ANTPLACEID IN (1, 3) 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x8, INFORMIX.STORAGEPLACES x9, INFORMIX.EQUIPMENT x10, INFORMIX.BASESTATIONS x11
      WHERE
         x8.REGIONID = x0.REGIONID  
         AND x8.POSSTATE  'D'  
         AND x8.STORAGEPLACE = x9.STORAGEPLACE  
         AND x8.STORAGEPLACE = x10.POSITION  
         AND x10.EQUIPMENT = x11.EQUIPMENT  
         AND x10.STATE = 'W'  
         AND x11.TYPE_ IN ('G', 'S')  
         AND x11.ON_AIR = 'Y' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x12, INFORMIX.STORAGEPLACES x13, INFORMIX.EQUIPMENT x14, INFORMIX.BASESTATIONS x15
      WHERE
         x12.REGIONID = x0.REGIONID  
         AND x12.POSSTATE  'D'  
         AND x12.STORAGEPLACE = x13.STORAGEPLACE  
         AND x12.STORAGEPLACE = x14.POSITION  
         AND x14.EQUIPMENT = x15.EQUIPMENT  
         AND x14.STATE = 'W'  
         AND x15.TYPE_ IN ('G', 'S')  
         AND x15.ON_AIR  'Y' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x16, INFORMIX.STORAGEPLACES x17, INFORMIX.EQUIPMENT x18, INFORMIX.BASESTATIONS x19
      WHERE
         x16.REGIONID = x0.REGIONID  
         AND x16.POSSTATE  'D'  
         AND x16.STORAGEPLACE = x17.STORAGEPLACE  
         AND x16.STORAGEPLACE = x18.POSITION  
         AND x18.EQUIPMENT = x19.EQUIPMENT  
         AND x18.STATE = 'W'  
         AND x19.TYPE_ IN ('G', 'C')  
         AND x19.ON_AIR = 'Y' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x20, INFORMIX.STORAGEPLACES x21, INFORMIX.EQUIPMENT x22, INFORMIX.BASESTATIONS x23
      WHERE
         x20.REGIONID = x0.REGIONID  
         AND x20.POSSTATE  'D'  
         AND x20.STORAGEPLACE = x21.STORAGEPLACE  
         AND x20.STORAGEPLACE = x22.POSITION  
         AND x22.EQUIPMENT = x23.EQUIPMENT  
         AND x22.STATE = 'W'  
         AND x23.TYPE_ IN ('G', 'C')  
         AND x23.ON_AIR  'Y' 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x24, INFORMIX.STORAGEPLACES x25, INFORMIX.EQUIPMENT x26, INFORMIX.BASESTATIONS x27
      WHERE
         x24.REGIONID = x0.REGIONID  
         AND x24.POSSTATE  'D'  
         AND x24.STORAGEPLACE = x25.STORAGEPLACE  
         AND x24.STORAGEPLACE = x26.POSITION  
         AND x26.EQUIPMENT = x27.EQUIPMENT  
         AND x26.STATE = 'P'  
         AND x27.TYPE_ IN ('G', 'S') 
   ), 
   
   (
      SELECT 
         count(*)
      FROM
         INFORMIX.POSITIONS x28, INFORMIX.STORAGEPLACES x29, INFORMIX.EQUIPMENT x30, INFORMIX.BASESTATIONS x31
      WHERE
         x28.REGIONID = x0.REGIONID  
         AND x28.POSSTATE  'D'  
         AND x28.STORAGEPLACE = x29.STORAGEPLACE  
         AND x28.STORAGEPLACE = x30.POSITION  
         AND x30.EQUIPMENT = x31.EQUIPMENT  
         AND x30.STATE = 'P'  
         AND x31.TYPE_ IN ('G', 'C') 
   )
FROM
   INFORMIX.SUPERREGIONS x1, INFORMIX.REGIONS x0
WHERE
   x1.SUPREGID = x0.SUPREGID 
   AND x1.SUPREGID  11 ;

CREATE VIEW INFORMIX.V_RAZR_SS_SERV
  (SUPREGID,
   SUPREGNAME,
   REGIONID,
   REGNAME,
   NUM_GE_CAPACITY,
   TOT_CAPACITY,
   PROJ_YES,
   NUM_ACT_GE,
   TOT_RES_CAPACITY_ACT_GE,
   NUM_NONACT_GE,
   TOT_RES_CAPACITY_NONACT_GE)
  AS SELECT 
   x1.SUPREGID, 
   x1.SUPREGNAME, 
   x0.REGIONID, 
   x0.REGNAME, 
   
   (
      SELECT 
         count(x4.CAPACITYUSED)
      FROM
         INFORMIX.POSITIONS x2, INFORMIX.EQUIPMENT x3, INFORMIX.SERVICEPLATFORMS x4
      WHERE
         x2.STORAGEPLACE = x3.POSITION  
         AND x3.EQUIPMENT = x4.EQUIPMENT  
         AND x2.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         NVL(sum(x7.CAPACITYUSED), 0)
      FROM
         INFORMIX.POSITIONS x5, INFORMIX.EQUIPMENT x6, INFORMIX.SERVICEPLATFORMS x7
      WHERE
         x5.STORAGEPLACE = x6.POSITION  
         AND x6.EQUIPMENT = x7.EQUIPMENT  
         AND x5.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         count(x10.HAVEPROJECT)
      FROM
         INFORMIX.POSITIONS x8, INFORMIX.EQUIPMENT x9, INFORMIX.SERVICEPLATFORMS x10
      WHERE
         x8.STORAGEPLACE = x9.POSITION  
         AND x9.EQUIPMENT = x10.EQUIPMENT  
         AND x10.HAVEPROJECT = 'Y'  
         AND x8.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         count(x12.EQUIPMENT)
      FROM
         INFORMIX.POSITIONS x11, INFORMIX.EQUIPMENT x12, INFORMIX.SERVICEPLATFORMS x13, INFORMIX.SMSS_ACTUAL_PERMITS x14
      WHERE
         x11.STORAGEPLACE = x12.POSITION  
         AND x12.EQUIPMENT = x13.EQUIPMENT  
         AND x14.EQUIPMENT = x13.EQUIPMENT  
         AND x11.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         NVL(sum((x18.MSCCAPACITY / 1000)), 0)
      FROM
         INFORMIX.POSITIONS x15, INFORMIX.EQUIPMENT x16, INFORMIX.SERVICEPLATFORMS x17, INFORMIX.SMSS_ACTUAL_PERMITS x18
      WHERE
         x15.STORAGEPLACE = x16.POSITION  
         AND x16.EQUIPMENT = x17.EQUIPMENT  
         AND x18.EQUIPMENT = x17.EQUIPMENT  
         AND x15.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         count(x19.EQUIPMENT)
      FROM
         INFORMIX.EQUIPMENTMISSINGPERMIT x19
      WHERE
         x19.TYPEEQP = 6  
         AND x19.REGIONID = x0.REGIONID 
   ), 
   
   (
      SELECT 
         NVL(sum((x21.MSCCAPACITY / 1000)), 0)
      FROM
         INFORMIX.EQUIPMENTMISSINGPERMIT x20, INFORMIX.SMSS_EQUIP2PERMIT_SS x21
      WHERE
         x21.EQUIPMENT = x20.EQUIPMENT  
         AND x20.TYPEEQP = 6  
         AND x20.REGIONID = x0.REGIONID 
   )
FROM
   INFORMIX.REGIONS x0, INFORMIX.SUPERREGIONS x1
WHERE
   x1.SUPREGID = x0.SUPREGID  
   AND x1.SUPREGID  11  
   AND x1.SUPREGID < 14 ;

CREATE VIEW INFORMIX.V_REGIONSACCESS
  (OPERATORID,
   IDREGION,
   VIEWF,
   EDITF)
  AS SELECT 
   x0.OPERATORID, 
   x1.REGIONID, 
   x0.VIEWFACT, 
   x0.EDITFACT
FROM
   INFORMIX.REGIONSACCESS x0, INFORMIX.REGIONS x1
WHERE
   x0.SUPREGIONID = x1.SUPREGID 
   AND x0.ACCESSTYPE = 'S' 
UNION
SELECT 
   x2.OPERATORID, 
   x2.REGIONID, 
   x2.VIEWFACT, 
   x2.EDITFACT
FROM
   INFORMIX.REGIONSACCESS x2
WHERE
   x2.ACCESSTYPE = 'R' ;

CREATE VIEW INFORMIX.V_SWITCHES
  (STORAGEPLACE,
   EQUIPMENT)
  AS SELECT 
   x0.STORAGEPLACE, 
   x3.EQUIPMENT
FROM
   INFORMIX.SWITCHES x3, INFORMIX.EQUIPMENT x2, INFORMIX.POSITIONS x0, INFORMIX.STORAGEPLACES x1
WHERE
   x3.EQUIPMENT = x2.EQUIPMENT 
   AND x1.STORAGEPLACE = x0.STORAGEPLACE  
   AND x0.STORAGEPLACE = x2.POSITION ;

CREATE VIEW INFORMIX.V_SWITCHES1
  (STORAGEPLACE,
   EQUIPMENT)
  AS SELECT 
   x0.STORAGEPLACE, 
   x2.EQUIPMENT
FROM
   INFORMIX.POSITIONS x0, INFORMIX.EQUIPMENT x1, INFORMIX.SWITCHES x2
WHERE
   x0.STORAGEPLACE = x1.POSITION 
   AND x2.EQUIPMENT = x1.EQUIPMENT ;

CREATE VIEW INFORMIX.RP_GETSZ_HEADERS
  (IDHEADER,
   NUMBER_SZ,
   DATE_SZ,
   TYPE_SZ,
   USETYPE,
   MAN,
   FIRSTNAME,
   LASTNAME,
   MIDDLENAME,
   BAN,
   DOCDATE,
   DOCNUMBER,
   DOCTYPE,
   EXECNAME,
   ORGEXECUTOR,
   MAINPOSITION,
   DCSID,
   GSMID,
   DAMPSID)
  AS SELECT 
   x0.IDHEADER, 
   x0.NUMBER_SZ, 
   x0.DATE_SZ, 
   x0.TYPE_SZ, 
   x0.USETYPE, 
   x0.MAN, 
   x0.FIRSTNAME, 
   x0.LASTNAME, 
   x0.MIDDLENAME, 
   x0.BAN, 
   x0.DOCDATE, 
   x0.DOCNUMBER, 
   x0.DOCTYPE, 
   x0.EXECNAME, 
   x0.ORGEXECUTOR, 
   x0.MAINPOSITION, 
   x1.DCSID, 
   x1.GSMID, 
   x1.DAMPSID
FROM
   INFORMIX.POSITIONS x1, INFORMIX.RP_GETSZ1 x0
WHERE
   x1.STORAGEPLACE = x0.MAINPOSITION ;

CREATE VIEW INFORMIX.RP_GETSZ_FIN
  (IDHEADER,
   NUMBER_SZ,
   DATE_SZ,
   TYPE_SZ,
   USETYPE,
   MAN,
   FIRSTNAME,
   LASTNAME,
   MIDDLENAME,
   BAN,
   DOCDATE,
   DOCNUMBER,
   DOCTYPE,
   EXECNAME,
   ORGEXECUTOR,
   MAINPOSITION,
   DCSID,
   GSMID,
   DAMPSID,
   IDPOS,
   PHONENUMBER,
   TARIFPLAN,
   COMCARDCNT,
   CARDAMOUNT,
   SIMCARDCNT,
   EQUIPNAME,
   EQUIPCNT,
   SERVICE,
   OPERTYPE,
   STARTDATE,
   ENDDATE,
   ISGARANTIE,
   CARDNAME)
  AS SELECT 
   x0.IDHEADER, 
   x0.NUMBER_SZ, 
   x0.DATE_SZ, 
   x0.TYPE_SZ, 
   x0.USETYPE, 
   x0.MAN, 
   x0.FIRSTNAME, 
   x0.LASTNAME, 
   x0.MIDDLENAME, 
   x0.BAN, 
   x0.DOCDATE, 
   x0.DOCNUMBER, 
   x0.DOCTYPE, 
   x0.EXECNAME, 
   x0.ORGEXECUTOR, 
   x0.MAINPOSITION, 
   x0.DCSID, 
   x0.GSMID, 
   x0.DAMPSID, 
   x1.IDPOS, 
   x1.PHONE, 
   x1.TARIFPLAN, 
   x1.COMCARDCNT, 
   x1.CARDAMOUNT, 
   x1.SIMCARDCNT, 
   x1.EQUIPNAME, 
   x1.EQUIPCNT, 
   x1.SERVICE, 
   x1.OPERTYPE, 
   x1.STARTDATE, 
   x1.ENDDATE, 
   x1.ISGARANTIE, 
   x1.CARDNAME
FROM
   INFORMIX.RP_GETSZ_HEADERS x0, INFORMIX.RP_GETSZ_POS x1
WHERE
   x0.IDHEADER = x1.IDHEADER ;