

-- Generated by Relational Schema Center on Fri May 23 16:08:54 MSD 2008 for Informix Dynamic Server.2000, V9.2

   
CREATE DATABASE july;

CREATE SCHEMA AUTHORIZATION informix;

CREATE TABLE informix.changeslog
  (logid INTEGER NOT NULL,
   recdate DATETIME YEAR TO FRACTION(3) NOT NULL,
   objtype SMALLINT NOT NULL,
   objid INTEGER NOT NULL,
   eventtype CHAR(1) NOT NULL,
   man INTEGER NOT NULL);

ALTER TABLE informix.changeslog ADD CONSTRAINT
  (PRIMARY KEY (logid) CONSTRAINT pk_changeslog);

CREATE TABLE informix.people
  (man INTEGER NOT NULL,
   firstname CHAR(80) NOT NULL,
   lastname CHAR(80) NOT NULL,
   middlename CHAR(80) NOT NULL,
   passportser CHAR(80) NOT NULL,
   passportdate DATE,
   passportwhom CHAR(80),
   isactive CHAR(1) NOT NULL,
   tabnum INTEGER);

ALTER TABLE informix.people ADD CONSTRAINT
  (PRIMARY KEY (man) CONSTRAINT pk_people);

CREATE TABLE informix.cidnes_d2p
  (dlistid INTEGER NOT NULL,
   peopleid INTEGER NOT NULL);

ALTER TABLE informix.cidnes_d2p ADD CONSTRAINT
  (PRIMARY KEY (dlistid, peopleid) CONSTRAINT pk_cidnes_d2p);

CREATE TABLE informix.dpdevplans
  (devplan INTEGER NOT NULL,
   year INTEGER NOT NULL,
   regionid INTEGER NOT NULL,
   plantype INTEGER NOT NULL,
   state INTEGER NOT NULL,
   processid INT8,
   permissionobjectid INT8,
   version INTEGER,
   comment VARCHAR(255, 0),
   previousdevplan INTEGER,
   created DATETIME YEAR TO FRACTION(3) NOT NULL,
   createdby INTEGER NOT NULL,
   modified DATETIME YEAR TO FRACTION(3) NOT NULL,
   modifiedby INTEGER NOT NULL,
   commentobjectid INT8,
   activestate INTEGER NOT NULL,
   planversionsetid INTEGER NOT NULL,
   correctcause INTEGER);

ALTER TABLE informix.dpdevplans ADD CONSTRAINT
  (PRIMARY KEY (devplan) CONSTRAINT pk_dpdevplans);

CREATE TABLE informix.lawyearnoteonposition
  (id INTEGER NOT NULL,
   number INTEGER NOT NULL,
   idposition INTEGER NOT NULL,
   idcontract INTEGER,
   note CHAR(1000),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modified DATETIME YEAR TO FRACTION(3),
   modifiedby INTEGER);

ALTER TABLE informix.lawyearnoteonposition ADD CONSTRAINT
  (PRIMARY KEY (id) CONSTRAINT pk_lawyearnoteonpo);

CREATE TABLE informix.leasecontractproblem
  (idproblem INTEGER NOT NULL,
   leasecontract INTEGER NOT NULL,
   note CHAR(1000) NOT NULL,
   typeproblem INTEGER NOT NULL,
   state INTEGER NOT NULL,
   owner INTEGER NOT NULL,
   executor INTEGER NOT NULL,
   modified DATETIME YEAR TO FRACTION(3) NOT NULL,
   created DATETIME YEAR TO FRACTION(3) NOT NULL,
   createdby INTEGER NOT NULL,
   modifiedby INTEGER NOT NULL);

ALTER TABLE informix.leasecontractproblem ADD CONSTRAINT
  (PRIMARY KEY (idproblem) CONSTRAINT pk_leasecontractpr);

CREATE TABLE informix.leaseregistrybuchdocshistory
  (historyid SERIAL(0) NOT NULL,
   idregistrydoc INTEGER NOT NULL,
   actiontime DATETIME YEAR TO FRACTION(3) NOT NULL,
   state CHAR(1) NOT NULL,
   man INTEGER NOT NULL);

ALTER TABLE informix.leaseregistrybuchdocshistory ADD CONSTRAINT
  (PRIMARY KEY (historyid) CONSTRAINT pk_leaseregistryhs);

CREATE TABLE informix.nfs_lnkuser
  (personid INTEGER NOT NULL,
   idusernri INTEGER NOT NULL,
   flagmain CHAR(1) NOT NULL);

ALTER TABLE informix.nfs_lnkuser ADD CONSTRAINT
  (PRIMARY KEY (personid) CONSTRAINT pk_nfs_lnkuser);

CREATE TABLE informix.projectstates
  (projectstate INTEGER NOT NULL,
   project INTEGER NOT NULL,
   state CHAR(1) NOT NULL,
   man INTEGER NOT NULL,
   when DATETIME YEAR TO FRACTION(3) NOT NULL);

ALTER TABLE informix.projectstates ADD CONSTRAINT
  (PRIMARY KEY (projectstate) CONSTRAINT pk_projectstates);

CREATE TABLE informix.reglamentworks
  (idwork INTEGER NOT NULL,
   equipment INTEGER NOT NULL,
   man INTEGER NOT NULL,
   datework DATE NOT NULL,
   typework INTEGER NOT NULL,
   notework VARCHAR(255, 0),
   createdby INTEGER,
   created DATETIME YEAR TO FRACTION(3),
   modifiedby INTEGER,
   modified DATETIME YEAR TO FRACTION(3));

ALTER TABLE informix.reglamentworks ADD CONSTRAINT
  (PRIMARY KEY (idwork) CONSTRAINT pk_reglamentworks);

CREATE TABLE informix.sitedocs
  (sitedoc INTEGER NOT NULL,
   sitedoctype INTEGER NOT NULL,
   blanknumber CHAR(40),
   blankdate DATE,
   expiredate DATE,
   comment VARCHAR(255, 0),
   projectaction INTEGER,
   man INTEGER NOT NULL);

ALTER TABLE informix.sitedocs ADD CONSTRAINT
  (PRIMARY KEY (sitedoc) CONSTRAINT pk_sitedocs);

CREATE TABLE informix.gkrchdocs
  (sitedoc INTEGER NOT NULL,
   restrictions VARCHAR(255, 0));

ALTER TABLE informix.gkrchdocs ADD CONSTRAINT
  (PRIMARY KEY (sitedoc) CONSTRAINT pk_gkrchdocs);

CREATE TABLE informix.sitedocfiles
  (sitedocfile INTEGER NOT NULL,
   sitedoc INTEGER NOT NULL,
   sitedocfiledate DATE,
   sitedocfilename CHAR(80),
   sitedocfilebody BYTE,
   note VARCHAR(255, 0),
   modified DATETIME YEAR TO FRACTION(3),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modifiedby INTEGER,
   file_size INTEGER,
   file_modified DATETIME YEAR TO FRACTION(3),
   file_created DATETIME YEAR TO FRACTION(3));

ALTER TABLE informix.sitedocfiles ADD CONSTRAINT
  (PRIMARY KEY (sitedocfile) CONSTRAINT pk_sitedocfiles);

CREATE TABLE informix.smss_permits
  (id SERIAL(0) NOT NULL,
   permit_type INTEGER NOT NULL,
   ftype INTEGER NOT NULL,
   permit_number VARCHAR(128, 0) NOT NULL,
   permit_date DATE,
   expire_date DATE,
   address VARCHAR(255, 0),
   lon DECIMAL(10, 6),
   lat DECIMAL(10, 6),
   archived INTEGER NOT NULL,
   modified DATETIME YEAR TO FRACTION(3),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modifiedby INTEGER,
   file INTEGER,
   filename VARCHAR(255, 0));

ALTER TABLE informix.smss_permits ADD CONSTRAINT
  (PRIMARY KEY (id) CONSTRAINT pk_smss_permits);

CREATE TABLE informix.changeslogdetails
  (logdetid INTEGER NOT NULL,
   logid INTEGER NOT NULL,
   fieldlabel CHAR(80) NOT NULL,
   oldvalue VARCHAR(255, 0),
   newvalue VARCHAR(255, 0));

ALTER TABLE informix.changeslogdetails ADD CONSTRAINT
  (PRIMARY KEY (logdetid) CONSTRAINT pk_changeslogdetai);

CREATE TABLE informix.tb_permission
  (objectid INTEGER NOT NULL,
   typeid INTEGER NOT NULL,
   roleid CHAR(20) NOT NULL,
   permission INTEGER NOT NULL);

ALTER TABLE informix.tb_permission ADD CONSTRAINT
  (PRIMARY KEY (objectid, typeid, roleid) CONSTRAINT pk_permis_420308);

CREATE TABLE informix.roles
  (role CHAR(20) NOT NULL,
   rolename CHAR(255) NOT NULL,
   comment LVARCHAR,
   sortorder INTEGER NOT NULL,
   taskcomment VARCHAR(255, 0));

ALTER TABLE informix.roles ADD CONSTRAINT
  (PRIMARY KEY (role) CONSTRAINT pk_roles);

CREATE TABLE informix.workpositions
  (workposition INTEGER NOT NULL,
   name CHAR(200),
   isactive CHAR(1) NOT NULL);

ALTER TABLE informix.workpositions ADD CONSTRAINT
  (PRIMARY KEY (workposition) CONSTRAINT pk_workpositions);

CREATE TABLE informix.operators
  (operator INTEGER NOT NULL,
   man INTEGER NOT NULL,
   loiginid CHAR(40) NOT NULL,
   password CHAR(40) NOT NULL,
   isenabled CHAR(1) NOT NULL,
   msucode INTEGER,
   idregion INTEGER,
   lastlogintime DATETIME YEAR TO FRACTION(3),
   oldpwd CHAR(40),
   lastregionid INTEGER);

ALTER TABLE informix.operators ADD CONSTRAINT
  (PRIMARY KEY (operator) CONSTRAINT pk_operators);

CREATE TABLE informix.msusers
  (msucode INTEGER NOT NULL,
   msuser CHAR(80) NOT NULL,
   mspassword CHAR(80));

ALTER TABLE informix.msusers ADD CONSTRAINT
  (PRIMARY KEY (msucode) CONSTRAINT pk_msusers);

CREATE TABLE informix.counters
  (counterid INTEGER NOT NULL,
   counterinfo_id INTEGER NOT NULL,
   nextid INTEGER,
   positionid INTEGER NOT NULL,
   place_info VARCHAR(255, 0),
   vendor_number CHAR(100),
   production_year CHAR(4),
   installation_date DATE,
   initial_settings INTEGER,
   last_verification DATE,
   next_verification DATE,
   cstate INTEGER,
   replace_date DATE,
   replace_reason VARCHAR(255, 0),
   replace_settings INTEGER,
   modified_date DATETIME YEAR TO FRACTION(3),
   modifiedby INTEGER NOT NULL,
   dismantling_date DATE,
   dismantling_reason VARCHAR(255, 0),
   dismantling_set INTEGER,
   isvendorpowersupply CHAR(1) NOT NULL);

ALTER TABLE informix.counters ADD CONSTRAINT
  (PRIMARY KEY (counterid) CONSTRAINT pk_counters);

CREATE TABLE informix.docactions
  (docaction INTEGER NOT NULL,
   document INTEGER NOT NULL,
   when DATETIME YEAR TO FRACTION(3) NOT NULL,
   operator INTEGER,
   type CHAR(1),
   what VARCHAR(100, 0));

ALTER TABLE informix.docactions ADD CONSTRAINT
  (PRIMARY KEY (docaction) CONSTRAINT pk_docactions);

CREATE TABLE informix.leasedocoperjornal
  (recordid INTEGER NOT NULL,
   document INTEGER NOT NULL,
   who INTEGER NOT NULL,
   when DATETIME YEAR TO FRACTION(3) NOT NULL,
   type CHAR(1) NOT NULL,
   what VARCHAR(255, 0));

ALTER TABLE informix.leasedocoperjornal ADD CONSTRAINT
  (PRIMARY KEY (recordid) CONSTRAINT pk_leasedocoperjor);

CREATE TABLE informix.leasesaldo
  (leasecontract INTEGER NOT NULL,
   saldate DATE NOT NULL,
   resource INTEGER NOT NULL,
   maincurrency INTEGER NOT NULL,
   additionalcurrency INTEGER,
   act INTEGER,
   mainsum DECIMAL(15, 2) NOT NULL,
   additionalsum DECIMAL(15, 2),
   mainndssum DECIMAL(15, 2) NOT NULL,
   additionalndssum DECIMAL(15, 2),
   istemp CHAR(1) NOT NULL,
   saldobyhand CHAR(1) NOT NULL,
   notes VARCHAR(255, 0),
   msumcalc DECIMAL(15, 2),
   mndscalc DECIMAL(15, 2),
   asumcalc DECIMAL(15, 2),
   andscalc DECIMAL(15, 2),
   operator INTEGER);

ALTER TABLE informix.leasesaldo ADD CONSTRAINT
  (PRIMARY KEY (leasecontract, saldate, resource) CONSTRAINT pk_leasesaldo);

CREATE TABLE informix.leasecalcratessld
  (leasecontract INTEGER NOT NULL,
   saldate DATE NOT NULL,
   resource INTEGER NOT NULL,
   currency INTEGER NOT NULL,
   rate DECIMAL(15, 4) NOT NULL,
   byhand CHAR(1) NOT NULL,
   act INTEGER);

ALTER TABLE informix.leasecalcratessld ADD CONSTRAINT
  (PRIMARY KEY (leasecontract, saldate, resource, currency) CONSTRAINT pk_lscalcratesld);

CREATE TABLE informix.leasesaldodetail
  (idslddetail INTEGER NOT NULL,
   leasecontract INTEGER NOT NULL,
   saldate DATE NOT NULL,
   resource INTEGER NOT NULL,
   mainsum DECIMAL(15, 2) NOT NULL,
   mainndssum DECIMAL(15, 2) NOT NULL,
   additionalsum DECIMAL(15, 2),
   additionalndssum DECIMAL(15, 2),
   ratends DECIMAL(15, 2) NOT NULL,
   grouprec INTEGER NOT NULL,
   saldobyhand CHAR(1) NOT NULL,
   notes VARCHAR(255, 0),
   msumcalc DECIMAL(15, 2),
   mndscalc DECIMAL(15, 2),
   asumcalc DECIMAL(15, 2),
   andscalc DECIMAL(15, 2),
   operator INTEGER,
   maincurrency INTEGER NOT NULL,
   additionalcurrency INTEGER,
   act INTEGER,
   flagsource INTEGER NOT NULL);

ALTER TABLE informix.leasesaldodetail ADD CONSTRAINT
  (PRIMARY KEY (idslddetail) CONSTRAINT pk_leasesaldodetai);

CREATE TABLE informix.loginlog
  (logid SERIAL(0) NOT NULL,
   operatorid INTEGER NOT NULL,
   activeoperatorid INTEGER NOT NULL,
   logintime DATETIME YEAR TO FRACTION(3) NOT NULL);

ALTER TABLE informix.loginlog ADD CONSTRAINT
  (PRIMARY KEY (logid) CONSTRAINT pk_loginlog);

CREATE TABLE informix.operators2roles
  (role CHAR(20) NOT NULL,
   operator INTEGER NOT NULL);

ALTER TABLE informix.operators2roles ADD CONSTRAINT
  (PRIMARY KEY (role, operator) CONSTRAINT pk_operators2roles);

CREATE TABLE informix.profile
  (operatorid INTEGER NOT NULL,
   key CHAR(64) NOT NULL,
   name CHAR(64) NOT NULL,
   type INTEGER NOT NULL,
   num_value DECIMAL(15, 4),
   str_value VARCHAR(255, 0),
   date_value DATETIME YEAR TO FRACTION(3),
   clob_value BYTE,
   key_type INTEGER NOT NULL,
   modified DATETIME YEAR TO FRACTION(3) NOT NULL);

ALTER TABLE informix.profile ADD CONSTRAINT
  (PRIMARY KEY (operatorid, key, name) CONSTRAINT pk_profile);

CREATE TABLE informix.regionsaccess
  (accessid INTEGER NOT NULL,
   operatorid INTEGER NOT NULL,
   accesstype CHAR(1) NOT NULL,
   supregionid INTEGER,
   regionid INTEGER,
   viewplan CHAR(1) NOT NULL,
   viewfact CHAR(1) NOT NULL,
   editplan CHAR(1) NOT NULL,
   editfact CHAR(1) NOT NULL,
   viewarenda CHAR(1),
   editarenda CHAR(1));

ALTER TABLE informix.regionsaccess ADD CONSTRAINT
  (PRIMARY KEY (accessid) CONSTRAINT pk_regionsaccess);

CREATE TABLE informix.storageplaces
  (storageplace INTEGER NOT NULL,
   name CHAR(80) NOT NULL,
   division INTEGER,
   address VARCHAR(255, 0),
   closedate DATE,
   type CHAR(1) NOT NULL,
   operator INTEGER,
   modified DATETIME YEAR TO FRACTION(3),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modifiedby INTEGER,
   activestatus CHAR(1) NOT NULL,
   whendelete DATETIME YEAR TO FRACTION(3));

ALTER TABLE informix.storageplaces ADD CONSTRAINT
  (PRIMARY KEY (storageplace) CONSTRAINT pk_storageplaces);

CREATE TABLE informix.arenda_positions
  (storageplace INTEGER NOT NULL,
   regionid INTEGER,
   netzone INTEGER,
   kzlregionid INTEGER,
   oblast CHAR(80),
   cityid INTEGER,
   city CHAR(80),
   address CHAR(255));

ALTER TABLE informix.arenda_positions ADD CONSTRAINT
  (PRIMARY KEY (storageplace) CONSTRAINT pk_arenda_position);

CREATE TABLE informix.arenda_channels
  (lineid INTEGER NOT NULL,
   from INTEGER NOT NULL,
   to INTEGER NOT NULL,
   pm_a CHAR(80),
   pm_b CHAR(80),
   appointment CHAR(80),
   capacity INTEGER,
   type CHAR(1),
   single_cost DECIMAL(10, 2),
   monthly_cost DECIMAL(10, 2),
   renter INTEGER,
   contragent CHAR(255),
   contract_number CHAR(80),
   contract_date DATE,
   expiration_date DATE,
   subarenda_act CHAR(80),
   vkr_act_date DATE,
   vkr_exp_date DATE,
   use_koeff DECIMAL(5, 2),
   monthly_cost_vkr DECIMAL(10, 2),
   comment CHAR(255),
   contact_fio CHAR(255),
   contact_phone CHAR(255),
   contact_vkr INTEGER,
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   orderinfo CHAR(80));

ALTER TABLE informix.arenda_channels ADD CONSTRAINT
  (PRIMARY KEY (lineid) CONSTRAINT pk_arenda_channels);

CREATE TABLE informix.cardtracks
  (trackid INTEGER NOT NULL,
   storagecard INTEGER NOT NULL,
   document INTEGER NOT NULL,
   from INTEGER,
   to INTEGER,
   when DATETIME YEAR TO FRACTION(3) NOT NULL,
   deltaprice DECIMAL(15, 3),
   actiontype CHAR(1) NOT NULL,
   oldconfiguration CHAR(80));

ALTER TABLE informix.cardtracks ADD CONSTRAINT
  (PRIMARY KEY (trackid) CONSTRAINT pk_cardtracks);

CREATE TABLE informix.sitedocs2splace
  (sitedoc INTEGER NOT NULL,
   storageplace INTEGER NOT NULL);

ALTER TABLE informix.sitedocs2splace ADD CONSTRAINT
  (PRIMARY KEY (sitedoc, storageplace) CONSTRAINT pk_sitedocs2splace);

CREATE TABLE informix.smss_actual_permits
  (equipment INTEGER NOT NULL,
   permit_type INTEGER NOT NULL,
   ftype INTEGER NOT NULL,
   permitid INTEGER NOT NULL,
   permit_number VARCHAR(128, 0) NOT NULL,
   permit_date DATE,
   expire_date DATE,
   address VARCHAR(255, 0),
   lon DECIMAL(10, 6),
   lat DECIMAL(10, 6),
   msccapacity INTEGER,
   filename VARCHAR(255, 0),
   status INTEGER);

ALTER TABLE informix.smss_actual_permits ADD CONSTRAINT
  (PRIMARY KEY (equipment, permit_type, ftype) CONSTRAINT pk_smss_actual_per);

CREATE TABLE informix.workresponsibility
  (worker INTEGER,
   idresponsibility INTEGER NOT NULL,
   storageplace INTEGER NOT NULL,
   resptype CHAR(1) NOT NULL,
   organization INTEGER,
   operator INTEGER);

ALTER TABLE informix.workresponsibility ADD CONSTRAINT
  (PRIMARY KEY (idresponsibility, storageplace, resptype) CONSTRAINT pk_workresponsibil);

CREATE TABLE informix.companies
  (company INTEGER NOT NULL,
   name CHAR(80),
   shortname CHAR(40));

ALTER TABLE informix.companies ADD CONSTRAINT
  (PRIMARY KEY (company) CONSTRAINT pk_companies);

CREATE TABLE informix.divisions
  (division INTEGER NOT NULL,
   type CHAR(1) NOT NULL,
   encloser INTEGER,
   name CHAR(200),
   shortname CHAR(40),
   boss INTEGER,
   company INTEGER,
   isactive CHAR(1) NOT NULL);

ALTER TABLE informix.divisions ADD CONSTRAINT
  (PRIMARY KEY (division) CONSTRAINT pk_divisions);

CREATE TABLE informix.cars
  (car INTEGER NOT NULL,
   isour CHAR(1) NOT NULL,
   organization INTEGER,
   division INTEGER,
   car_model CHAR(40) NOT NULL,
   car_number CHAR(20) NOT NULL);

ALTER TABLE informix.cars ADD CONSTRAINT
  (PRIMARY KEY (car) CONSTRAINT pk_cars);

CREATE TABLE informix.projectactioncomms
  (projectaction INTEGER NOT NULL,
   division INTEGER NOT NULL,
   comment BYTE);

ALTER TABLE informix.projectactioncomms ADD CONSTRAINT
  (PRIMARY KEY (projectaction, division) CONSTRAINT pk_projectactionco);

CREATE TABLE informix.projectdivcolumns
  (divcolid INTEGER NOT NULL,
   projecttype INTEGER NOT NULL,
   division INTEGER NOT NULL,
   colname CHAR(80) NOT NULL,
   aftercol INTEGER NOT NULL);

ALTER TABLE informix.projectdivcolumns ADD CONSTRAINT
  (PRIMARY KEY (divcolid) CONSTRAINT pk_projectdivcolum);

CREATE TABLE informix.organizations
  (organization INTEGER NOT NULL,
   company INTEGER,
   name CHAR(200) NOT NULL,
   shortname CHAR(120),
   issupplier CHAR(1) NOT NULL,
   isprovider CHAR(1) NOT NULL,
   isrenter CHAR(1) NOT NULL,
   okonh CHAR(40),
   okpo CHAR(40),
   inn CHAR(40),
   accountmanagerfio CHAR(80),
   directorfio CHAR(80),
   phisicaladdress CHAR(80),
   legaladdress CHAR(80),
   phone CHAR(80),
   fax CHAR(80),
   isbank CHAR(1) NOT NULL,
   swift CHAR(40),
   koraccount CHAR(40),
   bik CHAR(40),
   organizationtype CHAR(20),
   bossposition VARCHAR(255, 0),
   zip CHAR(20),
   contactlist BYTE,
   kpp CHAR(40),
   modified DATETIME YEAR TO FRACTION(3),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modifiedby INTEGER,
   ischannalrenter CHAR(1) NOT NULL,
   typeorg CHAR(1) NOT NULL,
   lastname CHAR(80),
   firstname CHAR(80),
   middlename CHAR(80),
   passportser CHAR(80),
   passportnum CHAR(80),
   passportdate DATE,
   passportwhom CHAR(80),
   mainorganization INTEGER);

ALTER TABLE informix.organizations ADD CONSTRAINT
  (PRIMARY KEY (organization) CONSTRAINT pk_organizations);

CREATE TABLE informix.mainorganizations
  (mainorganization INTEGER NOT NULL,
   name VARCHAR(255, 0) NOT NULL,
   shortname VARCHAR(255, 0),
   inn CHAR(40),
   legaladdress VARCHAR(255, 0),
   modified DATETIME YEAR TO FRACTION(3),
   created DATETIME YEAR TO FRACTION(3),
   createdby INTEGER,
   modifiedby INTEGER);

ALTER TABLE informix.mainorganizations ADD CONSTRAINT
  (PRIMARY KEY (mainorganization) CONSTRAINT pk_mainorganizations);

CREATE TABLE informix.expedition
  (expedition INTEGER NOT NULL,
   expeditor INTEGER,
   organization INTEGER);

ALTER TABLE informix.expedition ADD CONSTRAINT
  (PRIMARY KEY (expedition) CONSTRAINT pk_expedition);

CREATE TABLE informix.projects
  (project INTEGER NOT NULL,
   contructer INTEGER,
   projecttype INTEGER NOT NULL,
   name CHAR(80) NOT NULL,
   notes BYTE,
   datestart DATE,
   monthfinish SMALLINT,
   yearfinish INTEGER,
   vctext CHAR(80),
   vccontructer INTEGER,
   position INTEGER NOT NULL);

ALTER TABLE informix.projects ADD CONSTRAINT
  (PRIMARY KEY (project) CONSTRAINT pk_projects);

CREATE TABLE informix.projectdivcolvals
  (divcolid INTEGER NOT NULL,
   project INTEGER NOT NULL,
   colvalue VARCHAR(255, 0) NOT NULL);

ALTER TABLE informix.projectdivcolvals ADD CONSTRAINT
  (PRIMARY KEY (divcolid, project) CONSTRAINT pk_projectdivcolva);

CREATE TABLE informix.rrldocs
  (sitedoc INTEGER NOT NULL,
   organization INTEGER NOT NULL);

ALTER TABLE informix.rrldocs ADD CONSTRAINT
  (PRIMARY KEY (sitedoc) CONSTRAINT pk_rrldocs);

CREATE TABLE informix.tn_discounts
  (organization INTEGER NOT NULL,
   date DATE NOT NULL,
   value DECIMAL(15, 2) NOT NULL);

ALTER TABLE informix.tn_discounts ADD CONSTRAINT
  (PRIMARY KEY (organization, date) CONSTRAINT pk_tn_discounts);

CREATE TABLE informix.workers
  (worker INTEGER NOT NULL,
   company INTEGER,
   man INTEGER NOT NULL,
   workposition INTEGER NOT NULL,
   division INTEGER,
   lotusaddress CHAR(40),
   email CHAR(40),
   phone1 CHAR(40),
   phone2 CHAR(40),
   localphone CHAR(40),
   fax CHAR(40),
   mobilephone CHAR(40),
   platinumcode INTEGER,
   isactive CHAR(1),
   isour CHAR(1) NOT NULL,
   organization INTEGER,
   isservicestuff CHAR(1) NOT NULL);

ALTER TABLE informix.workers ADD CONSTRAINT
  (PRIMARY KEY (worker) CONSTRAINT pk_workers);

CREATE TABLE informix.internaloutbill
  (document INTEGER NOT NULL,
   position INTEGER,
   fixing CHAR(1),
   monter INTEGER,
   unmountblocks CHAR(1));

ALTER TABLE informix.internaloutbill ADD CONSTRAINT
  (PRIMARY KEY (document) CONSTRAINT pk_internaloutbill);

CREATE TABLE informix.internalwaybills
  (document INTEGER NOT NULL,
   fixing CHAR(1) NOT NULL,
   position INTEGER,
   monter INTEGER,
   equiptype CHAR(1));

ALTER TABLE informix.internalwaybills ADD CONSTRAINT
  (PRIMARY KEY (document) CONSTRAINT pk_internalwaybill);

CREATE TABLE informix.afsmountact
  (document INTEGER NOT NULL,
   afstype CHAR(1) NOT NULL);

ALTER TABLE informix.afsmountact ADD CONSTRAINT
  (PRIMARY KEY (document) CONSTRAINT pk_afsmountact);

CREATE TABLE informix.inventorynumbers
  (serid INTEGER NOT NULL,
   serprefix CHAR(3) NOT NULL,
   serstart CHAR(8) NOT NULL,
   serend CHAR(8) NOT NULL,
   serdate DATE NOT NULL,
   serworker INTEGER NOT NULL);

ALTER TABLE informix.inventorynumbers ADD CONSTRAINT
  (PRIMARY KEY (serid) CONSTRAINT pk_inventorynumber);

CREATE TABLE informix.inwaybills
  (document INTEGER NOT NULL,
   currency INTEGER NOT NULL,
   cordocnum CHAR(20),
   cordocdate DATE,
   gtdnumber CHAR(20),
   gtddate DATE,
   supplycondition CHAR(1),
   dactstormanager INTEGER,
   dacttechstuf INTEGER,
   dactnumber CHAR(20),
   dactdate DATE,
   dacttext BYTE,
   dacttextfilename CHAR(80),
   dactrepresentative CHAR(40),
   representtype CHAR(1) NOT NULL,
   representative INTEGER);

ALTER TABLE informix.inwaybills ADD CONSTRAINT
  (PRIMARY KEY (document) CONSTRAINT pk_inwaybills);

CREATE TABLE informix.leasepayments
  (leasedocposition INTEGER NOT NULL,
   docnumber CHAR(30),
   summrub DECIMAL(15, 2),
   nds_rub DECIMAL(15, 2),
   leaserule INTEGER,
   paymenttype CHAR(1) NOT NULL,
   rurremainder DECIMAL(15, 2),
   payrate DECIMAL(15, 4),
   paymentstate CHAR(1) NOT NULL,
   byautorur CHAR(1) NOT NULL,
   isschetfakt CHAR(1) NOT NULL,
   officememonumber CHAR(40),
   otvworker INTEGER,
   flagoplnds CHAR(1) NOT NULL);

ALTER TABLE informix.leasepayments ADD CONSTRAINT
  (PRIMARY KEY (leasedocposition) CONSTRAINT pk_leasepayments);

CREATE TABLE informix.nfs_lnkpays
  (idpaynfs INTEGER NOT NULL,
   idpaynri INTEGER NOT NULL,
   operator INTEGER);

ALTER TABLE informix.nfs_lnkpays ADD CONSTRAINT
  (PRIMARY KEY (idpaynfs) CONSTRAINT pk_nfs_lnkpays);

CREATE TABLE informix.leasetasksstarts
  (taskstart INTEGER NOT NULL,
   startdate DATETIME YEAR TO FRACTION(3) NOT NULL,
   enddate DATETIME YEAR TO FRACTION(3),
   worker INTEGER NOT NULL,
   tasktype CHAR(1) NOT NULL,
   date1 DATE,
   date2 DATE,
   economist INTEGER,
   document INTEGER);

ALTER TABLE informix.leasetasksstarts ADD CONSTRAINT
  (PRIMARY KEY (taskstart) CONSTRAINT pk_leasetasksstart);

CREATE TABLE informix.leasetaskjournal
  (taskjournal INTEGER NOT NULL,
   taskstart INTEGER NOT NULL,
   jrndate DATETIME YEAR TO FRACTION(3) NOT NULL,
   jrnaction INTEGER NOT NULL,
   jrntype CHAR(1) NOT NULL,
   jrnmessage VARCHAR(255, 0),
   leaserule INTEGER,
   leasedocument INTEGER,
   leasedocposition INTEGER,
   leasedocposition2 INTEGER,
   date1 DATE,
   date2 DATE,
   summ1 DECIMAL(15, 2),
   summ2 DECIMAL(15, 2),
   currency1 INTEGER,
   currency2 INTEGER,
   resource1 INTEGER,
   resource2 INTEGER);

ALTER TABLE informix.leasetaskjournal ADD CONSTRAINT
  (PRIMARY KEY (taskjournal) CONSTRAINT pk_leasetaskjourna);

CREATE TABLE informix.payoffacts
  (document INTEGER NOT NULL,
   chairman INTEGER,
   member1 INTEGER,
   member2 INTEGER);

ALTER TABLE informix.payoffacts ADD CONSTRAINT
  (PRIMARY KEY (document) CONSTRAINT pk_payoffacts);